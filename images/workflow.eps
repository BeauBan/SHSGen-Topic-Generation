%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: workflow.pdf
%%Creator: (Adobe Acrobat 19.12.0)
%%For: xinbo
%%CreationDate: 2022/2/22, 上午5:21
%%BoundingBox: 0 0 769 209
%%HiResBoundingBox: 0 0 768.6284 208.7005
%%CropBox: 0 0 768.6284 208.7005
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 802 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c016 91.163616, 2018/10/29-16:58:49        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   xmp:CreateDate="2022-02-21T21:20Z"
   xmp:ModifyDate="2022-02-22T05:21:04+08:00"
   xmp:MetadataDate="2022-02-22T05:21:04+08:00"
   pdf:Producer="macOS Version 10.15.7 (Build 19H2) Quartz PDFContext"
   dc:format="application/pdf"
   xmpMM:DocumentID="uuid:6b9e4632-3c6c-c342-9d56-449dc5f30e24"
   xmpMM:InstanceID="uuid:dad0d790-bcc6-074c-afe9-53c489b7c032"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -208.7 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 208.7 li
768.628 208.7 li
768.628 0 li
cp
clp
-99.769 -111.986 mo
859.991 -111.986 li
859.991 428.014 li
-99.769 428.014 li
-99.769 -111.986 li
false sop
0 0 0 0 cmyk
f
-99.769 -111.986 mo
860.231 -111.986 li
860.231 428.014 li
-99.769 428.014 li
-99.769 -111.986 li
f
2.06012 2.6474 mo
186.332 2.6474 li
186.332 204.814 li
2.06012 204.814 li
cp
.0806592 .0636606 .0646372 0 cmyk
f
.75 lw
0 lc
0 lj
8 ml
[6 2.25 ] 0 dsh
true sadj
2.06012 2.6474 mo
186.332 2.6474 li
186.332 204.814 li
2.06012 204.814 li
cp
.75021 .679683 .670222 .90164 cmyk
@
14.5363 41.9894 mo
14.5363 35.49 19.8051 30.2212 26.3045 30.2212 cv
162.417 30.2212 li
168.917 30.2212 174.186 35.49 174.186 41.9894 cv
174.186 89.0603 li
174.186 95.5597 168.917 100.828 162.417 100.828 cv
26.3045 100.828 li
19.8051 100.828 14.5363 95.5597 14.5363 89.0603 cv
cp
0 0 0 0 cmyk
f
[] 0 dsh
14.5363 41.9894 mo
14.5363 35.49 19.8051 30.2212 26.3045 30.2212 cv
162.417 30.2212 li
168.917 30.2212 174.186 35.49 174.186 41.9894 cv
174.186 89.0603 li
174.186 95.5597 168.917 100.829 162.417 100.829 cv
26.3045 100.829 li
19.8051 100.829 14.5363 95.5597 14.5363 89.0603 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: VBAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /VBAAAA+Calibri-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006886670
676d000000000000074400000913676c7966000000000000287800001bba
686561640000000000001058000000366868656100000000000010900000
0024686d747800000000000010b4000000646c6f63610000000000001118
000000346d617870000000000000114c000000206e616d65000000000000
116c00000028707265700000000000001194000016e16764697200000000
00000000000000000000079e0000fe930000000000000000000000810081
009c00ab00b500ba00c100ca00d300f3010a0060008500bf00e300ea00f2
00fb010001070115011c0129000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe83056d
000d03c0000600170000fffaffe9fea9ffe90000050e000600170000fffa
ffe9fe93050e00170426000600170000fffaffe9ff12ffed050e00170426
000600170000fffaffe9fe93feb8fece060b0010050e0006001002cbfffa
fff001edfffa023f00060010ff36fffafff00287000600100000fffafff0
079efeaffe9f00000000000000000000000000700072007500780079007a
007b007d007e007f008300860087008800890085007f0086008b008c008d
008e008f0090009100920093009400950096009700980099009a009b009c
009d009e009f009200930094009b009c009e009e00960099009a009d009e
00a200a600a900ac00a200a300a400a500a700a800a900aa00ab00ac00ae
00a300a500a700a800aa00ab00ac00ad00ae00a000a100a300a600a700a9
00aa00ac00ad00af00af00b000b100b200b300b400b500af00af00b000b2
00b300b400b500b800c000b600b700b800b900ba00bb00bc00bd00be00bf
00c000c100c200b900ba00bc00bd00bf00c000c100c200b600b700b800b9
00ba00bb00bc00bd00be00bf00c000c100c200c000c100c200c300c400c5
00c600c700c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c7
00c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c500c800c900ca00cb00ce00cf00d000d1
00d200d300d400d500d600d700d900db00de00df00e000e200e300ec00d0
00d100d200d300d400d500d600d700d800d900da00db00dd00de00df00e0
00e100e300e500e900ec00ed00d100d300d400d500d800d900da00dc00e0
00e100e800d000d100d400d600e000e4010800f5010200fb00ff0108008f
009000960092009300990090009100970098009a009d00a400a600a700a8
00a900af009a00a200a300a700a900aa00ab00ac00ad00b000ad009b00aa
00ab00ad00b0009a00aa00ac00ad00ae00af00b100b900bb00bc00bd00be
00c100c200c300c400c500c600c700c800c900ca00cb00ce00b300b400b5
00b600b700b800bc00c200c500c800ca00cb00cd00ce00cf00d000c700b7
00b800b900bb00bc00be00c600c700c800c900cb00cf00d000b200b600b7
00c200c400c500c600c700cb00cc00cd00ce00cf00d000d100d400d500d7
00d800d900da00db00dc00de00df00e000e200e300e500e600d100d300d6
00d700d800da00db00dc00dd00de00df00e000e100e200e300e400e500d1
00d200d400d500da00db00dd00de00df00e000e100e200e600d200d300d4
00d700d800dd00de00e000e100e200e300e400e500e600d200da00e100e9
00ea00ec00e800e900ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e7
00e900ea00ec00ed00ee00ef00f500ee00ef00f000f100f200f300f400f5
00f600ee00f000f200ef00f000f100f200f300f400f500f600ee00ef00f0
00f100f200f300f400f500f600f700f700f800f900fa00fb00fc00fd00f7
00f800f900fa00fb00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff
010001010102010300fe010001010102010300fe00ff0100010101020103
01020103010401050106010701080109010a010c010d010e010f01100107
010401050106010701080109010a010b010d010e010f0110011101040105
0106010701080109010a010b010c010d010e010f01100111010401050106
01070109010e010f011201130114011501170118011a011b011c011d011e
011f01210122011201130114011501170119011b011c011d011e01200121
0123012401250113011401150116011701180119011a011b011c011d011f
01200117011c011d011e012001210129013001770129012b012e012f0130
01310134013501370139012b012d013001320134013a012e01300134013a
014200500062006c00fa05e802cc0114011400a000b10000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000005aa001500a0fff8ff42fea2
fdbc03b6015401cc0108010e00ff00f5006e014000a0055e006b0570fff6
0122fff10547ffec04faffec0131fff4000a03a0036600b400e1044c007c
40465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645444342
41403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e
01b0282370b10228453ab10200080d2d2c2045b00325456164b050515845
441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b0
4061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c
8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23
442d2c4b525845441b2121592d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b0
06430b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb820
00621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb2
00802f2b59b002602d2c0c6423648bb84000626023212d2c452345602345
6023456023766818b08062202d2cb00426b00426b00425b0042545234520
b003266062636820b0032661658a2344442d2c2045b0005458b040442045
b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b0
2f2370b01423421b2121592d2c4b515820b0032545695358441b2121591b
2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45232045
8a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333003400
5944442d2cb0164358b00326458a586466b01f601b64b020606620581b21
b04059b001615923586559b02923442310b029e01b2121212121592d2cb0
164358b004254564b020606620581b21b04059b0016123586559b0292344
b00425b00725082058021b0359b0052510b004252046b0042523423cb007
2510b006252046b00425b0016023423c2058011b0059b0052510b00425b0
29e0b0072510b00625b029e0b00425b00725082058021b0359b00425b003
254348b00625b00325b0016043481b2159212121212121212d2cb0164358
b004254564b020606620581b21b04059b0016123581b6559b0292344b005
25b00825082058021b0359b0042510b005252046b0042523423cb00425b0
072508b0072510b006252046b00425b0016023423c2058011b0059b00425
10b00525b029e0b02920456544b0072510b00625b029e0b00525b0082508
2058021b0359b00525b003254348b00425b0072508b00625b00325b00160
43481b2159212121212121212d2c02b00425202046b004252342b0052508
b003254548212121212d2c02b0032520b0042508b0022543482121212d2c
452320451820b00050205823652359236820b040505821b0405923586559
8a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60
441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b21
21592d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21
2121592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b
212121592d2c208a08234b538a4b515a5823381b2121592d2c0020b20040
0325b0062649618b3812342d2c014623466023466123201020468a61b8ff
80628ab140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b
52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b94000020063b80400885458b202400243604259595959592d
2c451868234b51582320452064b04050587c59688a6059442d2cb00016b0
0225b0022501b001233e00b002233eb10102060cb00a236542b00b234201
b001233f00b002233fb10102060cb006236542b0072342b00116012d2c20
b82000628a6023622d2cb0072558001b0159b0042510b00325b0022520b8
ffff545821cd1bed5921b006255cb006255a58b0092b5920b005254ab004
2547b004254760b0062547b0806361b00225b0005558b00325b007254963
59b0082558001b0159b00425b0062549b009255cb009255a58b0092b59b0
072546b0806361b0032520b0005558631b2159612320b0005558b080631b
21b08059b0592bb006255c586959b00425202010b00048233ab006265800
1b0159b0052658b003252f598a12233221212d2cb00625b00a2587b00625
b009254ab0005358b00625b00a251bb00925b0072559b00225b00225070c
b005256323b00625636020b94000040063535821b00426b00426b00a1bb9
4000040063655158b0042665b0042665b00a1bb00426b00426b000b00325
b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525075959
20b0005558b00525b0052587b00725b007250bb0092510b00b25b0092620
b8ffff545821cd1bed59b00525b0052507b00825b00b254923b00625b006
2587b00a2510b00b25c15920b00051b800522378b00161b00225b00725b0
072507b00a25b00d254961b08062b00525b005250bb00a252338b00625b0
062587b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c
2549b0032554b8ffa723792121212121212121212121212d2c23b0005458
b9400000001bb900004000598ab0005458b9400000001bb90000400059b0
5b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a08
0d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0042608
0db00426b00426080db05b2b2d00000100000006333390900fbf5f0f3cf5
0019080000000000bbeb7ccc00000000d5968a63fbdafd350a1a08500001
0009000200000000000000010000079efdda00000aa0fbdafa860a1a0001
00000000000000000000000000000019040e000001cf000003ac008d0519
004906fe008d0442008d03c8003f03f6000c03f3004703590048044b004b
0407004a0288001901f7006b01f7007e044b007e044d0048044b007e02d8
007e0331004902c60017044b007903ad00200273003b040e00580000009e
009e013401f602b9033503f0044e053905ce0669073407bd0811085308d9
094b09ec0a6a0b3c0bd20c4d0cdb0d000ddd000100000019044200170110
000800020010002f006000000cf8013f0004000100000001001200010000
00000006001300005053504241472b43616c696272692d426f6c64000000
b20903eb411d03430001003b03410001008b0330009b033000020004032f
0064032f0074032f00d4032f0004032d032a0038001f032c032a0038001f
032b032ab2381f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9
ffc0032ab21c20464163033c0038033b0055033a00380339005503380038
033700550336003803350055033400380333005503230038032200550321
003803200055002b03400001006b03400001033d003803220055006b033b
00010024033100540331000200240331003403310054033100f403310004
001403270044032700e40327000300040327002403270044032700740327
008403270094032700d4032700f40327000800a403220001003403200001
001403200024032000440320005403200074032000840320000602f9b21e
1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1f
b802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802
f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb2
1e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c
1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb8
02e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802df
b21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d
191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1f
b802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802
d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb2
1d121fb802cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d19
1fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb8
02c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1
b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d
2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1f
b802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802
b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b2
1c321fb802afb21c331fb802aeb21c331fb802adb21c331fb802acb21c33
1fb802abb21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb8
02a7b21c321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3
b21c321fb802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c
331fb8029eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311f
b8029ab21c321fb80299b21c321fb80298b21c321fb80297b21c321fb802
96b21c321fb80295b21c331fb80294b21c331fb80293b21c331fb80292b2
1c331fb80291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c31
1fb8028db21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb8
0289b21c321fb80288b21c331fb80287b21c331fb80286b21c331fb80285
b21c331fb80284b21c331fb80283b21c331fb80282b21b341fb80281b21b
341fb80280b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341f
b8027cb21b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb802
78b21b341fb80277b21b341fb80276b21b341fb80275b21b341fb80274b2
1b341fb80273b21b341fb80272b21b341fb80271b21b341fb80270b21b34
1fb8026fb21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8
026bb21a351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267
b21a351fb80266b21a351fb80265b21a351fb80264b21a351fb80263b21a
351fb80262b21a351fb80261b21a351fb80260b21a351fb8025fb21a351f
b8025eb21a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb802
5ab21a351fb80259b219371fb80258b219371fb80257b219371fb80256b2
19371fb80255b219371fb80254b219371fb80253b219371fb80252b21937
1fb80251b219371fb80250b219371fb8024fb219371fb8024eb219371fb8
024db219371fb8024cb219371fb8024bb219371fb8024ab219371fb80249
b219371fb80248b219371fb80247b219371fb80246b219371fb80245b219
371fb80244b219371fb80243b219371fb80242b219371fb80241b219371f
b80240b219371fb8023fb219371fb8023eb219371fb8023db219371fb802
3cb219371fb8023bb219371fb8023ab219371fb80239b218391fb80238b2
18391fb80237b218391fb80236b218391fb80235b218391fb80234b21839
1fb80233b218391fb80232b218391fb80231b218391fb80230b218391fb8
0301b2182e1fb8022fb218391fb8022eb218391fb8022db218391fb8022c
b218391fb8022bb218391fb8022ab218391fb80229b218391fb80228b218
391fb80227b218391fb80226b218391fb80225b2173b1fb80224b2173b1f
b80223b217321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb802
1fb2173b1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2
173b1fb8021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b
1fb80216b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb8
0212b2173b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020e
b2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab217
3b1fb80209b217321fb80208b217321fb80207b2173b1fb80206b2173b1f
b80205b2173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb802
01b2173b1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2
173b1fb801fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b
1fb801f8b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb8
01f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0
b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb217
3b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1f
b801e7b217321fb801e6b216231fb801e5b216231fb801e4b216371fb801
e3b216371fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb2
16441fb801deb216441fb801ddb216441fb801dcb216451fb801dbb21646
1fb801dab216461fb801d9b216461fb801d8b216231fb801d7b216231fb8
01d6b216381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2
b216441fb801d1b216461fb801d0b216461fb801cfb216461fb801ceb216
461fb801cdb216461fb801ccb216461fb801cbb216431fb801cab216231f
b801c9b216231fb801c8b216371fb801c7b216371fb801c6b216381fb801
c5b216421fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b2
16461fb801c0b216461fb801bfb216461fb801beb216461fb801bdb21646
1fb801bcb216461fb801bbb216461fb801bab216371fb801b9b216381fb8
01b8b216421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4
b216441fb801b3b216441fb801b2b216441fb801b1b216451fb801b0b216
451fb801afb216451fb801aeb216461fb801adb216461fb801acb216461f
b801abb216461fb801aab216461fb801a9b215341fb801a8b215411fb801
a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b2
15521fb801a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f
1fb8019eb215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8
019ab2154e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196
b215501fb80195b215521fb80194b215521fb80193b215521fb80192b215
411fb80191b2154f1fb80190b215501fb8018fb215501fb8018eb215511f
b8018db215521fb8018cb215521fb8018bb215521fb8018ab214581fb801
89b214591fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2
145b1fb80184b2145c1fb80183b214591fb80182b2145d1fb8018140af14
5d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561f
b20b561fb10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b
561faa0b561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561f
a30b561fa20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a
681f980a681f970a681f960a681f950a681f940a681f930a681f920a681f
910a681f9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa
0056001f02fb02fa0068001f017fb213321fb8017eb212371fb80174b212
371fb80173b211421fb80172b211421fb80171b211421fb80170b211421f
b8016fb211421fb8016eb211421fb8016db211421fb8016cb211421fb801
6bb211421fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab2
10421fb80139b210421fb80138b210421fb80137b210421fb80136b21042
1fb80135b210421fb80134b210421fb80133b210421fb80132b20f451fb8
0131b20f451fb80130b20f451fb80112b20f451fb80111b20f451fb80110
b20f451fb8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e
481fb8010bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481f
b80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a
1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda
0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b56
1fba0b561f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179
b211421fb80178b211421fb80177b211421fb80176b211421fb80175b211
421fb80143b211421fb80142b210421fb80141b210421fb80140b210421f
b8013fb210421fb8013eb210421fb8013db20f451fb80115b20f451fb801
14b20f451fb80113b20f451fb903030302b2401fa4be030200b4030200c4
030200030300b213321fb8017bb213321fb80153b212371fb80152b21140
1fb80151b211401fb80150b211401fb8014fb211401fb8014eb211401fb8
014db211401fb8014cb211401fb8014bb211401fb8014ab211401fb80149
b211401fb80148b211401fb80147b211401fb80146b211401fb80145b211
401fb80144b211401fb80122b211401fb80121b210421fb80120b210421f
b8011fb210421fb8011eb210421fb8011db210421fb8011cb210421fb801
1bb210421fb8011ab210421fb80119b210421fb80118b20f451fb80117b2
0f451fb80116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e48
1ff80e481ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff1
0d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e
1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc6
0c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b56
1fb40b561fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017c
b212371fb80169b2112e1fb80168b2112e1fb80167b211401fb80166b211
401fb80165b211401fb80164b211401fb80163b211401fb80162b211401f
b80161b211401fb80160b211401fb8015fb211401fb8015eb211401fb801
5db211401fb8015cb211401fb8015bb211401fb8015ab211401fb80159b2
11401fb80158b211401fb80157b211401fb80156b211401fb80155b21140
1fb80154b211401fb8012fb211401fb8012eb210421fb8012db210421fb8
012cb210421fb8012bb210421fb8012ab210421fb80129b210421fb80128
b210421fb80127b210421fb80126b210421fb80125b20f451fb80124b20f
451fb80123b20f451fb80105b20f451fb80104b20f451fb80103b20f451f
b80102b20f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481f
e80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c
4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f83012e1f82488055
81ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb
7d067c487a557bab7a55047a147a020a7948775578ab77550b77010c7648
75555475e475f4750314755475647574759475d475e47507a475b475c475
03b8ffc0401275383b46807590750214757475020075010fb8ffc0402175
0b0e467448725573ab725504723472023bf47201e0720102307201507260
7202b8ffc0b372242846b8ffc0403572161a461072307240720371486f55
70ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d46
6e486d55df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef
02fe40ff016b032e1f6a03251f692e675568ab6755662e645565ab645563
2e6255612e60555f2e5d555eab5d555c2e5a555bab5a55592e5855570325
1f562e545555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554c
ab4b554a2e485549ab4855504801472e46554503361f001f01001e01001e
701e801ef01e040b601d701d02701de01df01d03701cf01c027f1b010f1a
7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f19
9f19030c7012801202701180110230114011d011e011040011a011020f8f
0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f
0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f
0d038f0d01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946
ef0aff0a02400a242746ef09ff0902ff0901000301200101000110012001
0308b8ffc0b401151f4603bd0100010000050001019000542b4bb807ff52
4bb008505bb00188b02553b00188b040515ab00688b000555a5b58b10101
8e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b2
03a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d4259
2b5e73757373742b732b73742b2b73745e732b5e7374757374755e737475
73015e7374737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73
755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b
73737373185f5e00000000>
[7099 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1642 6 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>VBAAAA+Calibri-Bold AddT42Char 
1 2674 9 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>VBAAAA+Calibri-Bold AddT42Char 
1 3282 11 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>VBAAAA+Calibri-Bold AddT42Char 
1 4262 15 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>VBAAAA+Calibri-Bold AddT42Char 
1 2204 8 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>VBAAAA+Calibri-Bold AddT42Char 
1 5080 18 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>VBAAAA+Calibri-Bold AddT42Char 
1 3962 13 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>VBAAAA+Calibri-Bold AddT42Char 
1 4530 16 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>VBAAAA+Calibri-Bold AddT42Char 
1 5332 19 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>VBAAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>VBAAAA+Calibri-Bold AddT42Char 
VBAAAA+Calibri-Bold /CharStrings get begin
/g6 6 def
/g9 9 def
/g11 11 def
/g15 15 def
/g8 8 def
/g18 18 def
/g13 13 def
/g16 16 def
/g19 19 def
end
VBAAAA+Calibri-Bold /Encoding get
dup 33 /g6 put
dup 34 /g9 put
dup 35 /g11 put
dup 36 /g15 put
dup 37 /g8 put
dup 38 /g18 put
dup 39 /g13 put
dup 40 /g16 put
dup 41 /g19 put
pop
end
%ADOEndSubsetFont
/YQMNVZ+Calibri-Bold /VBAAAA+Calibri-Bold findfont ct_VMDictPut/YQMNVZ+Calibri-Bold*1 [33{/.notdef}rp /g6 /g9 /g11 /g15 /g8 /g18 /g13 /g16 /g19 214{/.notdef}rp]YQMNVZ+Calibri-Bold nfYQMNVZ+Calibri-Bold*1 [11 0 0 -11 0 0 ]msf20.8542 40.6544 mo(!"#$%&'\(\))[4.99958 4.37249 5.25257 5.62653 5.12053 3.74545 2.62353 5.62644 0 ]xsh14.5934 132.312 mo
14.5934 124.815 20.6705 118.738 28.1669 118.738 cv
160.669 118.738 li
168.166 118.738 174.243 124.815 174.243 132.312 cv
174.243 186.604 li
174.243 194.1 168.166 200.177 160.669 200.177 cv
28.1669 200.177 li
20.6705 200.177 14.5934 194.1 14.5934 186.604 cv
cp
0 0 0 0 cmyk
f
14.5934 132.312 mo
14.5934 124.815 20.6705 118.738 28.1669 118.738 cv
160.669 118.738 li
168.166 118.738 174.243 124.815 174.243 132.312 cv
174.243 186.604 li
174.243 194.1 168.166 200.177 160.669 200.177 cv
28.1669 200.177 li
20.6705 200.177 14.5934 194.1 14.5934 186.604 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
%ADOBeginSubsetFont: VBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNVZ+Calibri-Bold gcheck setglobal} if
1 1394 5 <0002008dfffa0403050e001c0029007eb10102435558b12406bb02930011
001d02c14009001125180b0f014c25b8012bb306060c23b8ffe8b40b0f01
4c23b8012bb44015510c5500183f3f1aed2b12392fed2b012fd4ed10ed32
30311bb625180b0f014c25b8012bb306060c23b8ffe8b40b0f014c23b801
2bb44015510c5500183f3f1aed2b12392fed2b30315901140e0223231114
0e0223222e02351134363321321e0405342e0223231133323e0204034482
bd806c0d1e322726331e0c312801312e537477542cfeed30464d2970763f
55361c03856da8733cfe630a100a06060a100a048c2f2f07173e5f7f6244
582a0bfe49223d55>YQMNVZ+Calibri-Bold AddT42Char 
1 6582 23 <0001003b018f0238025d000f0011b200070bb901210004002fed012fcd30
31011406232122263534363321321e0202381618fe601916161901a00c11
0c0501f73a2e2f39382e0a182800>YQMNVZ+Calibri-Bold AddT42Char 
1 4758 17 <0002007efe95040003d7002a003d0094b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1aed2b3f3f3fed
2b121739012fd4ed10ed323930311bb60a363521040530b8ffe8b40b0f01
4c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d00183f
1aed2b3f3f3fed2b12173930315901140e0223222e022711140e0223222e
023511343e0233321e0215153e0333321e0205342e0223220e0207111616
33323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e2919
0a274b4e532f628a5728fefa11294332193133361e35603431452c1501ed
77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a6928
3d29144d86b277396952310f223628feda4349325166>YQMNVZ+Calibri-Bold AddT42Char 
1 2972 10 <0002004bffe903cc056d002600390093b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1aed2b3fed2b12
17393f012fedd4ed323930311b400921460b39271b040e2ab8ffe8b40b0f
014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f3f
1aed2b3fed2b1217393f30315925140e0223222e023535060623222e0235
343e023332161711343e0233321e021503262623220e0215141e0233323e
023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d3025
25301c0cfa36633631472b15122944341a31333620220b0f0a04040a0f0b
634a524f86b36377be86483d3b01e30a100b06060b100afd344448315265
35386a53320f22372800>YQMNVZ+Calibri-Bold AddT42Char 

1 0 1 <> YQMNVZ+Calibri-Bold AddT42Char 
1 5752 20 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>YQMNVZ+Calibri-Bold AddT42Char 
YQMNVZ+Calibri-Bold /CharStrings get begin
/g5 5 def
/g23 23 def
/g17 17 def
/g10 10 def
/g1 1 def
/g20 20 def
end
YQMNVZ+Calibri-Bold /Encoding get
dup 42 /g5 put
dup 43 /g23 put
dup 44 /g17 put
dup 45 /g10 put
dup 46 /g1 put
dup 47 /g20 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNVZ+Calibri-Bold*1 [33{/.notdef}rp /g6 /g9 /g11 /g15 /g8 /g18 /g13 /g16 /g19 /g5 /g23 /g17 /g10 /g1 /g20 208{/.notdef}rp]YQMNVZ+Calibri-Bold nfYQMNVZ+Calibri-Bold*1 [11 0 0 -11 0 0 ]msf21.1469 131.854 mo(*&#)[5.62537 3.75535 0 ]xsh35.7719 131.854 mo(+)sh39.0219 131.854 mo(,&\("#\)\)#-.-%/%\)#/\))[5.62543 3.75535 5.62534 4.37139 5.25146 4.25042 4.25042 5.25146 5.62543 2.38037 5.62543 5.11943 3.62341 5.11944 4.25042 5.25146 3.62341 0 ]xsh%ADOBeginSubsetFont: YAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /YAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c79660000000000003a48000037a2
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d74780000000000001400000000bc6c6f636100000000000014bc
000000606d617870000000000000151c000000206e616d65000000000000
153c0000002070726570000000000000155c000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec00010000000000000000000000000000002f040e000001cf000004a1
00230444006104ec00ac03e800ac03ad00ac050c005b020400ac06d700ac
042200ac045800ac03ad004703e6000f052200aa03d5005c043400990362
005a0434006003fb005d0271002503c400350434009901d6008503a30099
01d6009906640099043400990438005a0434009902ca00990321005102ae
002104340094039d002205b8003503770029039f002201ff002a05860096
01ff002a03af018a0273004505750000040e007203fc004503fc00650000
00bf00bf016c0204028103190395045a04ad056f05fb06bc07af082308bc
098e0a400aeb0b9a0c590cee0dfe0e940f1a0fc3100e110911ac124b12fa
1384146b14fd15a0166c176d180c188118bb1913194d197d19a91a891b44
1b891bd100010000002f043a00170108000800020010002f008700001236
0235000400010000000100120001000000000006000e000045564e4c564c
2b43616c69627269b10903415302c802c60038001f02c702c60038001f02
dd003802da005502d9003802d7005502d8003802d7005502d6003802d500
5502d4003802d3005502d2003802d1005502bf003802be005502bd003802
bc0055000402db003402db005402db0003003402db005402db006402db00
a402db00d402db0005006b02d50001000b02d10001001402c2004402c200
6402c2007402c2009402c2000500a402be000100a402bc000100200284b4
0918014a20b80283b40918014a20b80282b40918014a20b80281b4091801
4a20b80280b40918014a20b8027fb40918014a20b8027eb40918014a20b8
027db40918014a20b8027cb40918014a20b8027bb40918014a20b8027ab4
0918014a20b80279b40918014a20b80278b40918014a20b80277b4091801
4a20b80276b40918014a20b80275b40918014a20b80274b40918014a20b8
0273b40918014a20b80271b40918014a20b80270b40918014a20b8026fb4
0918014a20b8026eb40918014a20b8026db40918014a20b8026cb4091801
4a20b8026bb40918014a20b8026ab40918014a20b80269b40918014a20b8
0268b40918014a20b80267b40918014a20b80266b40918014a20b80265b4
0918014a20b80264b40918014a20b80263b40918014a20b80262b4091801
4a20b80261b40918014a20b80260b40918014a20b8025fb40918014a20b8
025eb40918014a20b8025db40918014a20b8025cb40918014a20b8025bb4
0918014a20b8025ab40918014a20b80259b40918014a20b80258b4091801
4a20b80257b40918014a20b80256b40918014a20b80255b40918014a20b8
0254b40918014a20b80253b40918014a20b80252b40918014a20b80251b4
0918014a20b80250b40918014a20b8024fb40918014a20b8024eb4091801
4a20b8024db40918014a20b8024cb40918014a20b8024bb40918014a20b8
024ab40918014a20b80249b40918014a20b80248b40918014a20b80247b4
0918014a20b80246b40918014a20b80245b40918014a20b80244b4091801
4a20b80243b40918014a20b80242b40918014a20b80241b40918014a20b8
0240b40918014a20b8023fb40918014a20b8023eb40918014a20b8023db4
0918014a20b8023cb40918014a20b8023bb40918014a20b8023ab4091801
4a20b80239b40918014a20b80238b40918014a20b80237b40918014a20b8
0236b40918014a20b80235b40918014a20b80234b40918014a20b80233b4
0918014a20b80232b40918014a20b80231b40918014a20b80230b4091801
4a20b8022fb40918014a20b8022eb40918014a20b8022db40918014a20b8
022cb40918014a20b8022bb40918014a20b8022ab40918014a20b80229b4
0918014a20b80228b40918014a20b80227b40918014a20b80226b4091801
4a20b80225b40918014a20b80224b40918014a20b80223b40918014a20b8
0222b40918014a20b80221b40918014a20b80220b40918014a20b8021fb4
0918014a20b8021eb40918014a20b8021db40918014a20b8021cb4091801
4a20b8021bb40918014a20b8021ab40918014a20b80219b40918014a20b8
0218b40918014a20b80217b40918014a20b80216b40918014a20b80215b4
0918014a20b80214b40918014a20b80213b40918014a20b80212b4091801
4a20b80211b40918014a20b80210b40918014a20b8020fb40918014a20b8
020eb40918014a20b8020db40918014a20b8020cb40918014a20b8020bb4
0918014a20b8020ab40918014a20b80209b40918014a20b80208b4091801
4a20b80207b40918014a20b80206b40918014a20b80205b40918014a20b8
0204b40918014a20b80203b40918014a20b80202b40918014a20b80201b4
0918014a20b80200b40918014a20b801ffb40918014a20b801feb4091801
4a20b801fdb40918014a20b801fcb40918014a20b801fbb40918014a20b8
01fab40918014a20b801f9b40918014a20b801f8b40918014a20b801f7b4
0918014a20b801f6b40918014a20b801f5b40918014a20b801f4b4091801
4a20b801f3b40918014a20b801f2b40918014a20b801f1b40918014a20b8
01f0b40918014a20b801efb40918014a20b801eeb40918014a20b801edb4
0918014a20b801ecb40918014a20b801ebb40918014a20b801eab4091801
4a20b801e9b40918014a20b801e8b40918014a20b801e7b40918014a20b8
01e6b40918014a20b801e5b40918014a20b801e4b40918014a20b801e3b4
0918014a20b801e2b40918014a20b801e1b40918014a20b801e0b4091801
4a20b801dfb40918014a20b801deb40918014a20b801ddb40918014a20b8
01dcb40918014a20b801dbb40918014a20b801dab40918014a20b801d9b4
0918014a20b801d8b40918014a20b801d7b40918014a20b801d6b4091801
4a20b801d5b40918014a20b801d4b40918014a20b801d3b40918014a20b8
01d2b40918014a20b801d1b40918014a20b801d0b40918014a20b801cfb4
0918014a20b801ceb40918014a20b801cdb40918014a20b801ccb4091801
4a20b801cbb40918014a20b801cab40918014a20b801c9b40918014a20b8
01c8b40918014a20b801c7b40918014a20b801c6b40918014a20b801c5b4
0918014a20b801c4b40918014a20b801c3b40918014a20b801c2b4091801
4a20b801c1b40918014a20b801c0b40918014a20b801bfb40918014a20b8
01beb40918014a20b801bdb40918014a20b801bcb40918014a20b801bbb4
0918014a20b801bab40918014a20b801b9b40918014a20b801b8b4091801
4a20b801b7b40918014a20b801b6b40918014a20b801b5b40918014a20b8
01b4b40918014a20b801b3b40918014a20b801b2b40918014a20b801b1b4
0918014a20b801b0b40918014a20b801afb40918014a20b801aeb4091801
4a20b801adb40918014a20b801acb40918014a20b801abb40918014a20b8
01aab40918014a20b801a9b40918014a20b801a8b40918014a20b801a7b4
0918014a20b801a6b40918014a20b801a5b40918014a20b801a4b4091801
4a20b801a3b40918014a20b801a2b40918014a20b801a1b40918014a20b8
01a0b40918014a20b8019fb40918014a20b8019eb40918014a20b8019db4
0918014a20b8019cb40918014a20b8019bb40918014a20b8019ab4091801
4a20b80199b40918014a20b80198b40918014a20b80197b40918014a20b8
0196b40918014a20b80195b40918014a20b80194b40918014a20b80193b4
0918014a20b80192b40918014a20b80191b40918014a20b80190b4091801
4a20b8018fb40918014a20b8018eb40918014a20b8018db40918014a20b8
018cb40918014a20b8018bb40918014a20b8018ab40918014a20b80189b4
0918014a20b80188b40918014a20b80187b40918014a20b80186b4091801
4a20b80185b40918014a20b80184b40918014a20b80183b40918014a20b8
0182b40918014a20b80181b40918014a20b80180b40918014a20b8017fb4
0918014a20b8017eb40918014a20b8017db40918014a20b8017cb4091801
4a20b8017bb40918014a20b8017ab40918014a20b80179b40918014a20b8
0178b40918014a20b80177b40918014a20b80176b40918014a20b80175b4
0918014a20b80174b40918014a20b80173b40918014a20b80172b4091801
4a20b80171b40918014a20b80170b40918014a20b8016fb40918014a20b8
016eb40918014a20b8016db40918014a20b8016cb40918014a20b8016bb4
0918014a20b8016ab40918014a20b80169b40918014a20b80168b4091801
4a20b80167b40918014a20b80166b40918014a20b80165b40918014a20b8
0164b40918014a20b80163b40918014a20b80162b40918014a20b80161b4
0918014a20b80160b40918014a20b8015fb40918014a20b8015eb4091801
4a20b8015db40918014a20b8015cb40918014a20b8015bb40918014a20b8
015ab40918014a20b80159b40918014a20b80158b40918014a20b80157b4
0918014a20b80156b40918014a20b80155b40918014a20b80154b4091801
4a20b80153b40918014a20b80152b40918014a20b80150b40918014a20b8
014fb40918014a20b8014eb40918014a20b8014cb40918014a20b8014bb4
0918014a20b8014ab40918014a20b80149b40918014a20b80148b4091801
4a20b80147b40918014a20b80146b40918014a20b80145b40918014a20b8
0144b40918014a20b80143b30918014ab80284b21e3e1fb80283b21e151f
b80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027fb21e3e1fb802
7eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab2
1e3e1fb80279b21d411fb80278b21d431fb80277b21d431fb80276b21d43
1fb80275b21d411fb80274b21d431fb80273b21d431fb80272b21d411fb8
0271b21d421fb80270b21d421fb8026fb21d421fb8026eb21d431fb8026d
b21d431fb8026cb21d431fb8026bb21c451fb8026ab21c451fb80269b21c
451fb80268b21c451fb80267b21c451fb80266b21c441fb80265b21c451f
b80264b21c451fb80263b21c451fb80262b21c451fb80261b21c451fb802
60b21c451fb8025fb21c451fb8025eb21c441fb8025db21c451fb8025cb2
1c451fb8025bb21c451fb8025ab21c451fb80259b21c451fb80258b21c45
1fb80257b21c451fb80256b21c451fb80255b21c451fb80254b21c451fb8
0253b21c451fb80252b21c451fb80251b21c451fb80250b21c451fb8024f
b21c451fb8024eb21c451fb8024db21c451fb8024cb21c451fb8024bb21c
451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb80247b21b4a1f
b80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243b21b4c1fb802
42b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b4a1fb8023eb2
1b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c
1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb80236b21b4c1fb8
0235b21b491fb80234b21b491fb80233b21b4a1fb80232b21b4a1fb80231
b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b
4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb80229b21b4c1f
b80228b21b4c1fb80227b21b491fb80226b21b491fb80225b21b4a1fb802
24b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b4b1fb80220b2
1b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1fb8021cb21b4c
1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb80218b21a4f1fb8
0217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b21a4f1fb80213
b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e1fb8020fb21a
4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8020bb21a4e1f
b8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207b21a4f1fb802
06b219501fb80205b219511fb80204b219511fb80203b219501fb80202b2
19511fb80201b219511fb80200b219511fb801ffb219511fb801feb21950
1fb801fdb219511fb801fcb219511fb801fbb219511fb801fab219501fb8
01f9b219511fb801f8b219511fb801f7b219511fb801f6b219511fb801f5
b218541fb801f4b218531fb801f3b218541fb801f2b218541fb801f1b218
541fb801f0b218531fb801efb218541fb801eeb218541fb801edb218541f
b801ecb218531fb801ebb218531fb801eab218541fb801e9b218541fb801
e8b218541fb801e7b218541fb801e6b218531fb801e5b218541fb801e4b2
18531fb801e3b218541fb801e2b218541fb801e1b218541fb801e0b21853
1fb801dfb218531fb801deb218541fb801ddb218541fb801dcb218541fb8
01dbb218541fb801dab218531fb801d9b218541fb801d8b218541fb801d7
b217571fb801d6b217561fb801d5b217561fb801d4b217571fb801d3b217
571fb801d2b217571fb801d1b217571fb801d0b217561fb801cfb217561f
b801ceb217571fb801cdb217571fb801ccb217571fb801cbb217571fb801
cab217561fb801c9b217561fb801c8b217571fb801c7b217571fb801c6b2
17571fb801c5b217571fb801c4b217571fb801c3b217561fb801c2b21757
1fb801c1b217571fb801c0b217571fb801bfb217561fb801beb217561fb8
01bdb217571fb801bcb217571fb801bbb217571fb801bab217571fb801b9
b217571fb801b8b217561fb801b7b217571fb801b6b217571fb801b5b217
571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb801b1b2165b1f
b801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801adb2165b1fb801
acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b2163f1fb801a8b2
163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1fb801a4b2165b
1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8
019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2165b1fb8019b
b2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e1fb80197b216
5b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb80193b2163f1f
b80192b2163f1fb80191b2165b1fb80190b2165b1fb8018fb2165b1fb801
8eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb2165b1fb8018ab2
165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1fb80186b21561
1fb80185b215621fb80184b215621fb80183b215661fb80182b215661fb8
0181b215551fb80180b215451fb8017fb215361fb8017eb215361fb8017d
b215611fb8017cb215621fb8017bb215621fb8017ab215641fb80179b215
661fb80178b215661fb80177b215661fb80176b215661fb80175b215661f
b80174b215661fb80173b215451fb80172b215621fb80171b215621fb801
70b215631fb8016fb215641fb8016eb215661fb8016db215661fb8016cb2
15661fb8016bb215661fb8016ab215661fb80169b215621fb80168b21562
1fb80167b215611fb80166b215641fb80165b215641fb80164b215661fb8
0163b215661fb80162b215661fb80161b215661fb80160b215661fb8015f
b215661fb8015eb215551fb8015db215451fb8015cb215451fb8015bb215
361fb8015ab215611fb80159b215621fb80158b215621fb80157b215631f
b80156b215641fb80155b215661fb80154b215661fb80153b215661fb801
52b215661fb80151b214401fb80150b214551fb8014fb214561fb8014eb2
14831fb8014db2142d1fb8014cb214401fb8014bb214401fb8014ab21441
1fb80149b214401fb80148b214401fb80147b214411fb80146b2147e1fb8
0145b214871fb80144b2147f1fb80143b214801fb80142b212461fb80141
b212461fb80140b212461fb8013fb212461fb8013eb212441fb8013db212
461fb8013cb211591fb8013bb211591fb8013ab2115b1fb80139b2115b1f
b80138b211471fb80137b211581fb80136b2115a1fb80135b2115b1fb801
34b2115b1fb80133b2112c1fb80132b211471fb80131b211551fb80130b2
11571fb8012fb211571fb8012eb211581fb8012db211591fb8012cb21159
1fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb80128b2115b1fb8
0127b2115b1fb80126b2115b1fb80125b211561fb80124b211561fb80123
b211571fb80122b211581fb80121b211591fb80120b2115a1fb8011fb211
5a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8011bb2115b1f
b8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117b2105f1fb801
16b2105f1fb80115b2105f1fb80114b2105f1fb80113b2105f1fb80112b2
105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1fb8010eb2105f
1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb8010ab2105f1fb8
0109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2105d1fb80105
b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f1fb80101b210
5f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f621ffb0f621f
fa0f621ff90f631ff80f641ff70f641ff60f641ff50f641ff40f621ff30f
621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f621fec0f621f
eb0f631fea0f641fe90f641fe80f641fe70f641fe60e671fe50e681fe40e
681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e681fdd0e671f
dc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311fd60d6b1fd50d
6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1f
cd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d
681fc50d671fc40d261fc30d311fc20d311fc10d311f40ffc00d311fbf0d
311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c741fb80c741f
b70c711fb60c711fb50c721fb40c731fb30c741fb20c741fb10c741fb00c
741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1f
a80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b
7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f
990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b
6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f
8403381f8301381f8255805581ab80557f557d557eab7d550b7d010b7d1b
7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a557955775578ab7755ba
028600660285403c5576ab755504751475747503f47501ab750144750130
750102007510752075030c7455725573ab7255007250728072b072043bb0
72e072020072010ab8ffc0b3721b1e46b8ffc0407c720d104671556f5570
ab6f556e666d556a03251f6938675568ab67556638645565ab6455633862
55613860555f385d555eab5d555c385a555bab5a55593858555703251f56
38545555ab54555338515552ab51554f384e554e03251f4d384b554cab4b
554a38485549ab4855473846554503381f001c101c201c0310b8ffc0404e
1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03120f1a1f1a02
290f1901434f19016f197f198f19030f18cf18024018292c460f17cf17df
17ef1704134017292e460016101620160315b8ffc0b3164d5446b8ffc0b3
163f4446b8ffc0b316313546b8ffc0401f162326460f15010f151f150245
ef1501860003012001010001100120010308b8ffc0b401151f4603bd0100
010000050001019000542b4bb80800524bb008505bb00188b02553b00188
b040515ab00688b000555a5b58b101018e59b101024354b0144b515a58b1
01018e59858d8d001d424bb01d5358b203a0a01d42594bb0805358b20340
401d42594bb0ff5358b20300001d42592b5e7375732b58403d0011e011f0
110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f0e020f0e1f0e
ff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d313746b8ffc040
270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d304600030120
01010001100120010308b8ffc0b301151f462b5e7375732b2b745e732b2b
5e73742b73742b7374745e735901755e73742b2b2b2b5e732b5e732b7374
755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73737373742b
2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff0284006402830064028200
640281006402800064027f0064027e0064027d0064027c0064027b006402
7a0064027900640278006402770064027600640275006402740064027300
640271006402700064026f0064026e0064026d0064026c0064026b006402
6a0064026900640268006402670064026600640265006402640064026300
64026200640261006402600064025f0064025e0064025d0064025c006402
5b0064025a00640259006402580064025700640256006402550064025400
6402530064025200640251006402500064024f0064024e0064024d006402
4c0064024b0064024a006402490064024800640247006402460064024500
640244006402430064024200640241006402400064023f0064023e006402
3d0064023c0064023b0064023a0064023900640238006402370064023600
64023500640234006402330064023200640231006402300064022f006402
2e0064022d0064022c0064022b0064022a00640229006402280064022700
640226006402250064022400640223006402220064022100640220006402
1f0064021e0064021d0064021c0064021b0064021a006402190064021800
640217006402160064021500640214006402130064021200640211006402
100064020f0064020e0064020d0064020c0064020b0064020a0064020900
6402080064020700640206006402050064020441ff006402030064020200
64020100640200006401ff006401fe006401fd006401fc006401fb006401
fa006401f9006401f8006401f7006401f6006401f5006401f4006401f300
6401f2006401f1006401f0006401ef006401ee006401ed006401ec006401
eb006401ea006401e9006401e8006401e7006401e6006401e5006401e400
6401e3006401e2006401e1006401e0006401df006401de006401dd006401
dc006401db006401da006401d9006401d8006401d7006401d6006401d500
6401d4006401d3006401d2006401d1006401d0006401cf006401ce006401
cd006401cc006401cb006401ca006401c9006401c8006401c7006401c600
6401c5006401c4006401c3006401c2006401c1006401c0006401bf006401
be006401bd006401bc006401bb006401ba006401b9006401b8006401b700
6401b6006401b5006401b4006401b3006401b2006401b1006401b0006401
af006401ae006401ad006401ac006401ab006401aa006401a9006401a800
6401a7006401a6006401a5006401a4006401a3006401a2006401a1006401
a00064019f0064019e0064019d0064019c0064019b0064019a0064019900
640198006401970064019600640195006401940064019300640192006401
91006401900064018f0064018e0064018d0064018c0064018b0064018a00
640189006401880064018700640186006401850064418001840064018300
64018200640181006401800064017f0064017e0064017d0064017c006401
7b0064017a00640179006401780064017700640176006401750064017400
6401730064017200640171006401700064016f0064016e0064016d006401
6c0064016b0064016a006401690064016800640167006401660064016500
640164006401630064016200640161006401600064015f0064015e006401
5d0064015c0064015b0064015a0064015900640158006401570064015600
640155006401540064015300640152006401500064014f0064014e006401
4c0064014b0064014a006401490064014800640147006401460064014500
6401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00737373737373742b2b2b2b
2b2b2b2b2b2b185f5e0000>
[14243 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 5248 17 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>YAAAAA+Calibri AddT42Char 
1 5940 19 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>YAAAAA+Calibri AddT42Char 
1 8722 27 <00010099fffa03a003ca003200b8b0852b58400f12100b014d13100b014d
3f34012a13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8
fff6b30c014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d01
4d0b100f014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b8
0106400a2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b
2b2b10e12b2b2b2b2b3931305d002b2b1bb12d10b80106400b6c2d4a2a19
2449194c054c00183f3f3f12393f2b30315925140e0223222e023511342e
022322060711140e0223222e023511343e0233321e021515363633321e02
1503a00812201819201208182e49303e7c44081220191820130706121c17
161d10074c974d5a7b4c2119080b080404080b08020f4d5e44245855fd8b
080b080404080b080384080b090303090b0877554f3d66896000>YAAAAA+Calibri AddT42Char 
1 4472 15 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
>YAAAAA+Calibri AddT42Char 
1 9716 30 <00010099fffa02a703ca00330086b0852b58b4703501260fb8fff6b30c01
4d0fb8ffe8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f8
4012004013014d004011014d00200d014d001a0ab8012540092b4a260f15
2049154c003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d1bb12b
0ab80125400a6c2b4a260f152049154c00183f3f1239393f2b3031590114
0e0223222e0223220e020711140e0223222e023511343e0233321e021515
3e0333321e0602a70206090808171d24151930353a230812201918201307
06121c17161d100725413a391d0d21241d0c0403010362161e1109090908
142e4c37fdb0080b080404080b080384080b090303090b08833644270f03
080a0a090e1b>YAAAAA+Calibri AddT42Char 
1 7464 23 <00020085fffa0151052f0015002100a7b0852b58b73f234f236f230316b8
ffe8b30d014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d
16b8fff0b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d
15b8fff6b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b6
0a1f400f014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4
e12b2b2b2b2b2b31305d1bb1191fb8013eb56c191049054c00183f3fc62b
30315925140e0223222e023511343e0233321e0215131406232226353436
333216013e08122019182013070713201819201208132c3b3a2b2c3b3a2b
19080b080404080b080384070c080404080c0701303a2a29393a2a29>YAAAAA+Calibri AddT42Char 
1 9048 28 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>YAAAAA+Calibri AddT42Char 
1 9992 31 <00010051ffed02ce03ca00490110b0852b58400c2f4b3f4b4f4b7f4baf4b
0541b8fff0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b3
13014d41b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c
1b100d014d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f600
00ffc0400a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2e
dd370aeb115011601170110337113711163cdb411b05294a16e8054d003f
ed3f123939ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b12
39392f2fe12b2b2b2b2b2b31305d1b4025372edd6c110aeb6c0011101120
11030e033711371116293cdb6c411b05294a0516e86c054d00183f2b3f12
39392b1139392f2f5f5e5d2b2b30315901140e0223222e0435343e023332
1e0233323e0235342e0635343e0233321e0615140e0223222e0223220e02
15141e0602ce335e824e30574530160a04060b070b2b3f56382a44321b27
40505551402729527b5224483a291507030303070a06092236492f2a4029
1528405255534027010e456c4a260f171914241f131a10071b201b122336
252634281f222b3e563c3561492c0c1215100c0f16101119100716191613
23301c27352820222a3c5400>YAAAAA+Calibri AddT42Char 
1 6322 20 <00010025fffa02860578003c0088b0852b58b2161000b8ffe0b40b014d00
1bb8fff0b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b3
0b014d1bb801f9b2302a25b8ffd040121011014c250aed36471a26ed3048
204c1048003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c431301b40
11360aed6c36471a3026ed6c3048204c104800183f3f3f2b323f2b303159
01140e0223222e0223220e02151533321e02151406232311140e0223222e
02351123222635343e02333335343e0233321e0402860405080607151e29
1b2534200ec9080b0905120fc908132018182013087f101004080c087f23
486d4a2342240c0803050f13170e05090b091833513a6207111a132420fc
eb080b080404080b0803152024131a11075d5e8756290d0f0c131b00>YAAAAA+Calibri AddT42Char 
1 6620 21 <00030035fe93038903c8003e004e005f0116b0852b584015122d47100f01
4d47080c014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d
3fb8ffe0b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707
b8ffe0b310014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040
340b014d0058100f014d58201012014c582a25400b12014c250f30070338
4ada0c53e81515603803e93c482a2042d9384a5bd9204f003fed3fed1239
3fed1112392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b11
12173910cd2b10cd2b2b2b10cd2b2b2b10cd31301b40270f300703380c4a
da6c0c151553e86c151560383c03e96c3c482a203842d96c384a205bd96c
204f00183f2b3f2b12393f2b1112392f2b10c62b12173930315901140623
23161615140e0223222627060615141617171e0315140e0223222e023534
3e0237262635343637262635343e023332161721321601342623220e0215
141633323e0213342627270e0315141633323e020389130f81231c325d80
4e37631b12174136eb4370522e346ba6716d99622c10213120312f32251f
24345c814c29471f01101111fefe655d30472f17655b31482f17535f51e9
2029180984764b653e1b0374231f24572f4e78532c1d16122e1e232e020a
02213d593b3e70553125405934213e383319194c2c3d6026255d424d7a54
2d090821fef15c672038492859661f3748fd5e3a3f0208192d2928154143
1d303e00>YAAAAA+Calibri AddT42Char 
1 10746 33 <00010094ffed039c03bc003200b8b0852b58401f3f34010b27100d014d27
0a0c014d27080b014d27100f10014c27100b014d27b801f9b6004011014d
001fb8fff0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8
b30b014d1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49
270b05194924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b
2b2bd42be12b2b2b2b2b3931305d1b40092d49270b0519490e24b80105b4
6c0e4d054c00183f3f2b3f1239393f30315925140e0223222e0235350606
23222e023511343e0233321e021511141e023332363711343e0233321e02
15039c07121d15171d11064d964d5a7b4c210714201818201308172f4830
3e7b4507141f191820120919080b080404080b0877554e3c678962022208
0b090303090b08fdf44f5f432558550275080b090303090b0800>YAAAAA+Calibri AddT42Char 
1 10454 32 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>YAAAAA+Calibri AddT42Char 

1 0 1 <> YAAAAA+Calibri AddT42Char 
1 382 2 <00020023fffa047e05140022002600dcb0852b58b90024ffe8b40c10014c
23b8ffe8b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8ff
f0401a0b10014c25100b10014c0d100b10014c0c100b10014c40280125b8
fff0402c0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02
af23bf23cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d11
173911123939113310ed3211333130012b5d2b2b2b2b2b2b002b2b1b401e
2423260c25f46c0b0c18221d230a0d0116040c230c230c121d5212550555
00183f3f3f1239392f2f1117391112393911332b32113330315925161606
0623222e02270321030e03232226263637013e0333321e02170723032104
75080110251f1f251309046ffde66a030a13231c1d250f010801b2040d19
271e202a1a0e047b01df01c23d161b0e0403070c09013bfec9090d090405
0e1b1604b20b0e080303080f0b8dfd7b>YAAAAA+Calibri AddT42Char 
1 8070 25 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>YAAAAA+Calibri AddT42Char 
1 2228 8 <000100acfffa0158051400150061b0852b58b73f174f17af170300b8ffe8
b310014d00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8
ffe8b30b014d00ba0211000affc0b715014d0a10520555003f3f012f2be1
2b2b2b2b2b31305d1bb31052055500183f3f30315925140e0223222e0235
11343e0233321e02150158081421191822140809152117192114081a080c
070505070c0804da080c070505070c08>YAAAAA+Calibri AddT42Char 
1 9366 29 <00020099fe9403d503ca002a003d00b1b0852b58b53f3f0121360ab8fff0
b30d014d0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0a
b801f84017152b200d014d2b120c014d2b180f10014c2b180b014d2bb802
0a400900150a363521040530b80105b6264a1b49104f39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d1bb7
0a36352104052630b8010540096c264a1b49104f0539b80105b26c054d00
183f2b3f3f3f2b12173930315901140e0223222e022711140e0223222e02
3511343e0233321e0215153e0333321e0207342e0223220e020711161633
323e0203d53363925e2844414024081220191820130706121c14151b1207
294c4d512d628a5728ae15335640203e404627447a433e59371a01e976bc
834710223423fe3e080c080404080c0804e9090b080303080b09792a3e29
154c84af754581643c13294331fe9a53583c647c>YAAAAA+Calibri AddT42Char 
1 7164 22 <00010099fffa03a005710032009db0852b58b43f34012a13b8ffe8b30b01
4d13b8fff0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f8
40171e0b0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a
00400c014d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239
012f2f2be12b2b2b2b10e12b2b2b2b3931305d1bb32a192d10b801064009
6c2d4a2446194c054c00183f3f3f3f2b123930315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021511363633
321e021503a00812201819201208182e49303e7c44081220191820130707
132018192012084790495a7b4c2119080b080404080b08020f4d5e442458
55fd8b080b080404080b080538080c080404080c08fde54b493d66896100
>YAAAAA+Calibri AddT42Char 
1 5590 18 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>YAAAAA+Calibri AddT42Char 
1 8220 26 <00010099fffa05d003ca0050011eb0852b58401b12100b014d13180b014d
26100b0c014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b
014d13b8fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8
401e1e160d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f1001
4c0ab801f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27
b8fff0b310014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200
100106b24b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f
1239393fed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b
2b2b2b3931305d002b2b2b2b1bb14b10b80106b46c4b4a4124b80106400e
6c414a3e462d38492d4c194c054c00183f3f3f3f1239393f2b3f2b303159
25140e0223222e023511342e022322060711140e0223222e023511342e02
2322060711140e0223222e023511343e0233321e021515363633321e0217
3e0333321e021505d00812201819201308142c442e397345081320181721
1307162c432e397444081220191820130706121c17161d10074c8f493859
4430102d514b47245776491f19080b080404080b080223395e44245855fd
8b080b080404080b080223395e44245855fd8b080b080404080b08038408
0b090303090b0877554f1a2f412831442a133d66894c>YAAAAA+Calibri AddT42Char 
1 12546 38 <0001002afede017300e0001b001db0852b58b20b171c0010d4cd31301bb3
0b40171c001810d41acd30315925140e0207070e0323222e02371335343e
0233321e020173060e171189050d13191311170a0104850b18241a192417
0b8f1f342e2d19ce070a080303070c080113801b201006061020>YAAAAA+Calibri AddT42Char 
1 12662 39 <00030096fff704f000de000b001700230044b0852b58bf0018027c001e00
0c027b00120000027cb7062115091b0f034c003f3333cd3232012fe12fe1
2fe131301bb7211509401b0f034c00183f33331acd323230315925140623
222635343633321605140623222635343633321605140623222635343633
321601692f3c3a2e2f3c3a2e01c32e3c3a2e2f3b3b2d01c42f3c3a2e2f3c
3a2e6c462f2e44462f2e44462f2e44462f2e44462f2e44462f2e>YAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>YAAAAA+Calibri AddT42Char 
YAAAAA+Calibri /CharStrings get begin
/g17 17 def
/g19 19 def
/g27 27 def
/g15 15 def
/g30 30 def
/g23 23 def
/g28 28 def
/g31 31 def
/g20 20 def
/g21 21 def
/g33 33 def
/g32 32 def
/g1 1 def
/g2 2 def
/g25 25 def
/g8 8 def
/g29 29 def
/g22 22 def
/g18 18 def
/g26 26 def
/g38 38 def
/g39 39 def
end
YAAAAA+Calibri /Encoding get
dup 34 /g17 put
dup 35 /g19 put
dup 36 /g27 put
dup 37 /g15 put
dup 38 /g30 put
dup 39 /g23 put
dup 40 /g28 put
dup 41 /g31 put
dup 43 /g20 put
dup 44 /g21 put
dup 45 /g33 put
dup 46 /g32 put
dup 48 /g1 put
dup 49 /g2 put
dup 50 /g25 put
dup 52 /g8 put
dup 54 /g29 put
dup 56 /g22 put
dup 61 /g18 put
dup 66 /g26 put
dup 67 /g38 put
dup 68 /g39 put
pop
end
%ADOEndSubsetFont
/YQMNWA+Calibri /YAAAAA+Calibri findfont ct_VMDictPut/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /.notdef /g20 /g21 /g33 /g32 /.notdef /g1 /g2 /g25 /.notdef /g8 /.notdef /g29 /.notdef /g22 4{/.notdef}rp /g18 4{/.notdef}rp /g26 /g38 /g39 187{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf22.5687 54.0944 mo(4+0"\($.%".0\)#$\)\(&0\(6#$#=C0.-&$02',8.\)0\($0D)[1.99999 2.49994 1.74958 3.37523 4.24954 4.24955 2.62485 3.87523 3.37523 2.62485 1.75039 3.12485 4.00001 4.24955 3.12485 4.24955 2.74959 1.75038 4.24954 4.24955 4.00001 4.25035 4.00001 4.25034 2.00001 1.74958 2.62485 4.25036 2.75038 4.25035 1.74958 1.87523 1.87523 3.75034 4.25035 2.62486 3.12485 1.74959 4.24954 4.24954 1.75038 0 ]xsh22.8419 67.7744 mo(4+0=\(\(&\)0\(6#$C0.-&$0\(++0.8#&B\(\).%.0D)[1.99999 2.49994 1.74958 4.25035 4.24954 4.24954 2.75039 3.12485 1.74958 4.24954 4.24955 4.00001 4.24955 1.99999 1.75039 2.62485 4.24955 2.7496 4.24954 1.75039 4.25034 2.49994 2.49994 1.74958 2.62486 4.25035 4.00001 2.75039 6.37516 4.25034 3.12486 2.62485 3.87523 2.62485 1.74959 0 ]xsh22.782 81.4544 mo(108#%.#&0'\)0.-&$#=0\($0%.0%0\)6#"'+'"0.'B#0D)[4.62476 1.75278 4.24875 4.00081 3.87283 2.62485 4.00081 2.75279 1.75278 1.87283 3.12885 1.75278 2.62486 4.24875 2.75278 4.24876 4.00081 4.24875 1.75278 4.24874 4.24875 1.75278 3.87283 2.62486 1.75278 3.87283 1.75278 3.12885 4.24876 4.00081 3.37682 1.87284 2.49673 1.87283 3.37683 1.75279 2.62485 1.87283 6.37677 4.00081 1.75279 0 ]xsh22.782 91.0544 mo(DD)[5.50002 0 ]xsh94.7359 100.827 mo
94.7771 113.737 li
94.0271 113.739 li
93.9859 100.83 li
cp
96.3989 112.732 mo
94.4181 118.738 li
92.3989 112.745 li
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: XBAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /XBAAAA+Calibri-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006886670
676d000000000000074400000913676c7966000000000000287400001abe
686561640000000000001058000000366868656100000000000010900000
0024686d747800000000000010b4000000606c6f63610000000000001114
000000326d6178700000000000001148000000206e616d65000000000000
116800000028707265700000000000001190000016e16764697200000000
00000000000000000000079e0000fe930000000000000000000000810081
009c00ab00b500ba00c100ca00d300f3010a0060008500bf00e300ea00f2
00fb010001070115011c0129000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe83056d
000d03c0000600170000fffaffe9fea9ffe90000050e000600170000fffa
ffe9fe93050e00170426000600170000fffaffe9ff12ffed050e00170426
000600170000fffaffe9fe93feb8fece060b0010050e0006001002cbfffa
fff001edfffa023f00060010ff36fffafff00287000600100000fffafff0
079efeaffe9f00000000000000000000000000700072007500780079007a
007b007d007e007f008300860087008800890085007f0086008b008c008d
008e008f0090009100920093009400950096009700980099009a009b009c
009d009e009f009200930094009b009c009e009e00960099009a009d009e
00a200a600a900ac00a200a300a400a500a700a800a900aa00ab00ac00ae
00a300a500a700a800aa00ab00ac00ad00ae00a000a100a300a600a700a9
00aa00ac00ad00af00af00b000b100b200b300b400b500af00af00b000b2
00b300b400b500b800c000b600b700b800b900ba00bb00bc00bd00be00bf
00c000c100c200b900ba00bc00bd00bf00c000c100c200b600b700b800b9
00ba00bb00bc00bd00be00bf00c000c100c200c000c100c200c300c400c5
00c600c700c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c7
00c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c500c800c900ca00cb00ce00cf00d000d1
00d200d300d400d500d600d700d900db00de00df00e000e200e300ec00d0
00d100d200d300d400d500d600d700d800d900da00db00dd00de00df00e0
00e100e300e500e900ec00ed00d100d300d400d500d800d900da00dc00e0
00e100e800d000d100d400d600e000e4010800f5010200fb00ff0108008f
009000960092009300990090009100970098009a009d00a400a600a700a8
00a900af009a00a200a300a700a900aa00ab00ac00ad00b000ad009b00aa
00ab00ad00b0009a00aa00ac00ad00ae00af00b100b900bb00bc00bd00be
00c100c200c300c400c500c600c700c800c900ca00cb00ce00b300b400b5
00b600b700b800bc00c200c500c800ca00cb00cd00ce00cf00d000c700b7
00b800b900bb00bc00be00c600c700c800c900cb00cf00d000b200b600b7
00c200c400c500c600c700cb00cc00cd00ce00cf00d000d100d400d500d7
00d800d900da00db00dc00de00df00e000e200e300e500e600d100d300d6
00d700d800da00db00dc00dd00de00df00e000e100e200e300e400e500d1
00d200d400d500da00db00dd00de00df00e000e100e200e600d200d300d4
00d700d800dd00de00e000e100e200e300e400e500e600d200da00e100e9
00ea00ec00e800e900ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e7
00e900ea00ec00ed00ee00ef00f500ee00ef00f000f100f200f300f400f5
00f600ee00f000f200ef00f000f100f200f300f400f500f600ee00ef00f0
00f100f200f300f400f500f600f700f700f800f900fa00fb00fc00fd00f7
00f800f900fa00fb00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff
010001010102010300fe010001010102010300fe00ff0100010101020103
01020103010401050106010701080109010a010c010d010e010f01100107
010401050106010701080109010a010b010d010e010f0110011101040105
0106010701080109010a010b010c010d010e010f01100111010401050106
01070109010e010f011201130114011501170118011a011b011c011d011e
011f01210122011201130114011501170119011b011c011d011e01200121
0123012401250113011401150116011701180119011a011b011c011d011f
01200117011c011d011e012001210129013001770129012b012e012f0130
01310134013501370139012b012d013001320134013a012e01300134013a
014200500062006c00fa05e802cc0114011400a000b10000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000005aa001500a0fff8ff42fea2
fdbc03b6015401cc0108010e00ff00f5006e014000a0055e006b0570fff6
0122fff10547ffec04faffec0131fff4000a03a0036600b400e1044c007c
40465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645444342
41403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e
01b0282370b10228453ab10200080d2d2c2045b00325456164b050515845
441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b0
4061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c
8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23
442d2c4b525845441b2121592d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b0
06430b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb820
00621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb2
00802f2b59b002602d2c0c6423648bb84000626023212d2c452345602345
6023456023766818b08062202d2cb00426b00426b00425b0042545234520
b003266062636820b0032661658a2344442d2c2045b0005458b040442045
b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b0
2f2370b01423421b2121592d2c4b515820b0032545695358441b2121591b
2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45232045
8a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333003400
5944442d2cb0164358b00326458a586466b01f601b64b020606620581b21
b04059b001615923586559b02923442310b029e01b2121212121592d2cb0
164358b004254564b020606620581b21b04059b0016123586559b0292344
b00425b00725082058021b0359b0052510b004252046b0042523423cb007
2510b006252046b00425b0016023423c2058011b0059b0052510b00425b0
29e0b0072510b00625b029e0b00425b00725082058021b0359b00425b003
254348b00625b00325b0016043481b2159212121212121212d2cb0164358
b004254564b020606620581b21b04059b0016123581b6559b0292344b005
25b00825082058021b0359b0042510b005252046b0042523423cb00425b0
072508b0072510b006252046b00425b0016023423c2058011b0059b00425
10b00525b029e0b02920456544b0072510b00625b029e0b00525b0082508
2058021b0359b00525b003254348b00425b0072508b00625b00325b00160
43481b2159212121212121212d2c02b00425202046b004252342b0052508
b003254548212121212d2c02b0032520b0042508b0022543482121212d2c
452320451820b00050205823652359236820b040505821b0405923586559
8a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60
441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b21
21592d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21
2121592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b
212121592d2c208a08234b538a4b515a5823381b2121592d2c0020b20040
0325b0062649618b3812342d2c014623466023466123201020468a61b8ff
80628ab140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b
52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b94000020063b80400885458b202400243604259595959592d
2c451868234b51582320452064b04050587c59688a6059442d2cb00016b0
0225b0022501b001233e00b002233eb10102060cb00a236542b00b234201
b001233f00b002233fb10102060cb006236542b0072342b00116012d2c20
b82000628a6023622d2cb0072558001b0159b0042510b00325b0022520b8
ffff545821cd1bed5921b006255cb006255a58b0092b5920b005254ab004
2547b004254760b0062547b0806361b00225b0005558b00325b007254963
59b0082558001b0159b00425b0062549b009255cb009255a58b0092b59b0
072546b0806361b0032520b0005558631b2159612320b0005558b080631b
21b08059b0592bb006255c586959b00425202010b00048233ab006265800
1b0159b0052658b003252f598a12233221212d2cb00625b00a2587b00625
b009254ab0005358b00625b00a251bb00925b0072559b00225b00225070c
b005256323b00625636020b94000040063535821b00426b00426b00a1bb9
4000040063655158b0042665b0042665b00a1bb00426b00426b000b00325
b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525075959
20b0005558b00525b0052587b00725b007250bb0092510b00b25b0092620
b8ffff545821cd1bed59b00525b0052507b00825b00b254923b00625b006
2587b00a2510b00b25c15920b00051b800522378b00161b00225b00725b0
072507b00a25b00d254961b08062b00525b005250bb00a252338b00625b0
062587b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c
2549b0032554b8ffa723792121212121212121212121212d2c23b0005458
b9400000001bb900004000598ab0005458b9400000001bb90000400059b0
5b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a08
0d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0042608
0db00426b00426080db05b2b2d00000100000006333390900fbf5f0f3cf5
0019080000000000bbeb7ccc00000000d5968a63fbdafd350a1a08500001
0009000200000000000000010000079efdda00000aa0fbdafa860a1a0001
00000000000000000000000000000018040e000001cf0000043c004f03ac
008d051900490481008d03c8003f03f6000c03f30047035900480407004a
0288001903cb001b01f7006b03d7007e01f7007e044b007e044d0048044b
007e02d8007e0331004902c60017044b00790273003b0000009e009e0130
01c60288033803f30451053c05d1069c0725082a087e08fe094009c60a38
0ad90b570c290cbf0d3a0d5f000000010000001804420017011000080002
0010002f006000000cf8013f000400010000000100120001000000000006
001300005143524d53572b43616c696272692d426f6c64000000b20903eb
411d03430001003b03410001008b0330009b033000020004032f0064032f
0074032f00d4032f0004032d032a0038001f032c032a0038001f032b032a
b2381f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9ffc0032a
b21c20464163033c0038033b0055033a0038033900550338003803370055
033600380335005503340038033300550323003803220055032100380320
0055002b03400001006b03400001033d003803220055006b033b00010024
033100540331000200240331003403310054033100f40331000400140327
0044032700e4032700030004032700240327004403270074032700840327
0094032700d4032700f40327000800a40322000100340320000100140320
0024032000440320005403200074032000840320000602f9b21e1d1fb802
f8b21e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1fb802f4b2
1e2b1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802f0b21e2c
1fb802efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb21e2c1fb8
02ebb21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c1fb802e7
b21e2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb802e3b21e
2c1fb802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802dfb21d2f1f
b802deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d191fb802
dab21d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1fb802d6b2
1d2f1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802d2b21d2f
1fb802d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb21d121fb8
02cdb21d121fb802ccb21d121fb802cbb21d121fb802cab21d191fb802c9
b21d2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb802c5b21d
2f1fb802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1b21d2f1f
b802c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d2f1fb802
bcb21d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1fb802b8b2
1d2f1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802b4b21d2f
1fb802b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b21c321fb8
02afb21c331fb802aeb21c331fb802adb21c331fb802acb21c331fb802ab
b21c331fb802aab21c311fb802a9b21c311fb802a8b21c321fb802a7b21c
321fb802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3b21c321f
b802a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c331fb802
9eb21c331fb8029db21c331fb8029cb21c311fb8029bb21c311fb8029ab2
1c321fb80299b21c321fb80298b21c321fb80297b21c321fb80296b21c32
1fb80295b21c331fb80294b21c331fb80293b21c331fb80292b21c331fb8
0291b21c331fb80290b21c331fb8028fb21c331fb8028eb21c311fb8028d
b21c321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb80289b21c
321fb80288b21c331fb80287b21c331fb80286b21c331fb80285b21c331f
b80284b21c331fb80283b21c331fb80282b21b341fb80281b21b341fb802
80b21b341fb8027fb21b341fb8027eb21b341fb8027db21b341fb8027cb2
1b341fb8027bb21b341fb8027ab21b341fb80279b21b341fb80278b21b34
1fb80277b21b341fb80276b21b341fb80275b21b341fb80274b21b341fb8
0273b21b341fb80272b21b341fb80271b21b341fb80270b21b341fb8026f
b21a351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8026bb21a
351fb8026ab21a351fb80269b21a351fb80268b21a351fb80267b21a351f
b80266b21a351fb80265b21a351fb80264b21a351fb80263b21a351fb802
62b21a351fb80261b21a351fb80260b21a351fb8025fb21a351fb8025eb2
1a351fb8025db21a351fb8025cb21a351fb8025bb21a351fb8025ab21a35
1fb80259b219371fb80258b219371fb80257b219371fb80256b219371fb8
0255b219371fb80254b219371fb80253b219371fb80252b219371fb80251
b219371fb80250b219371fb8024fb219371fb8024eb219371fb8024db219
371fb8024cb219371fb8024bb219371fb8024ab219371fb80249b219371f
b80248b219371fb80247b219371fb80246b219371fb80245b219371fb802
44b219371fb80243b219371fb80242b219371fb80241b219371fb80240b2
19371fb8023fb219371fb8023eb219371fb8023db219371fb8023cb21937
1fb8023bb219371fb8023ab219371fb80239b218391fb80238b218391fb8
0237b218391fb80236b218391fb80235b218391fb80234b218391fb80233
b218391fb80232b218391fb80231b218391fb80230b218391fb80301b218
2e1fb8022fb218391fb8022eb218391fb8022db218391fb8022cb218391f
b8022bb218391fb8022ab218391fb80229b218391fb80228b218391fb802
27b218391fb80226b218391fb80225b2173b1fb80224b2173b1fb80223b2
17321fb80222b2173a1fb80221b2173b1fb80220b2173b1fb8021fb2173b
1fb8021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2173b1fb8
021ab2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b1fb80216
b2173b1fb80215b217321fb80214b2173a1fb80213b2173b1fb80212b217
3b1fb80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020eb2173b1f
b8020db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab2173b1fb802
09b217321fb80208b217321fb80207b2173b1fb80206b2173b1fb80205b2
173b1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb80201b2173b
1fb80200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2173b1fb8
01fcb2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b1fb801f8
b2173b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb801f4b217
3b1fb801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0b2173b1f
b801efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb2173b1fb801
ebb2173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1fb801e7b2
17321fb801e6b216231fb801e5b216231fb801e4b216371fb801e3b21637
1fb801e2b216381fb801e1b216381fb801e0b216431fb801dfb216441fb8
01deb216441fb801ddb216441fb801dcb216451fb801dbb216461fb801da
b216461fb801d9b216461fb801d8b216231fb801d7b216231fb801d6b216
381fb801d5b216431fb801d4b216431fb801d3b216431fb801d2b216441f
b801d1b216461fb801d0b216461fb801cfb216461fb801ceb216461fb801
cdb216461fb801ccb216461fb801cbb216431fb801cab216231fb801c9b2
16231fb801c8b216371fb801c7b216371fb801c6b216381fb801c5b21642
1fb801c4b216431fb801c3b216441fb801c2b216451fb801c1b216461fb8
01c0b216461fb801bfb216461fb801beb216461fb801bdb216461fb801bc
b216461fb801bbb216461fb801bab216371fb801b9b216381fb801b8b216
421fb801b7b216431fb801b6b216431fb801b5b216431fb801b4b216441f
b801b3b216441fb801b2b216441fb801b1b216451fb801b0b216451fb801
afb216451fb801aeb216461fb801adb216461fb801acb216461fb801abb2
16461fb801aab216461fb801a9b215341fb801a8b215411fb801a7b21541
1fb801a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b215521fb8
01a2b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f1fb8019e
b215521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8019ab215
4e1fb80199b2154e1fb80198b2154f1fb80197b2154f1fb80196b215501f
b80195b215521fb80194b215521fb80193b215521fb80192b215411fb801
91b2154f1fb80190b215501fb8018fb215501fb8018eb215511fb8018db2
15521fb8018cb215521fb8018bb215521fb8018ab214581fb80189b21459
1fb80188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2145b1fb8
0184b2145c1fb80183b214591fb80182b2145d1fb8018140af145d1ff00f
451fef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561fb20b561f
b10b561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b561faa0b
561fa90b561fa80b561fa70b561fa60b561fa50b561fa40b561fa30b561f
a20b561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a681f980a
681f970a681f960a681f950a681f940a681f930a681f920a681f910a681f
9009681f8f09681f8e09681f8d09681f8c09681f410902fc02fa0056001f
02fb02fa0068001f017fb213321fb8017eb212371fb80174b212371fb801
73b211421fb80172b211421fb80171b211421fb80170b211421fb8016fb2
11421fb8016eb211421fb8016db211421fb8016cb211421fb8016bb21142
1fb8016ab211421fb8013cb211421fb8013bb210421fb8013ab210421fb8
0139b210421fb80138b210421fb80137b210421fb80136b210421fb80135
b210421fb80134b210421fb80133b210421fb80132b20f451fb80131b20f
451fb80130b20f451fb80112b20f451fb80111b20f451fb80110b20f451f
b8010fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e481fb801
0bb20e481fb8010ab20e481fb80109b20e481fb80108b20e481fb80107b2
0d4a1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a1fea0d4a
1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd9
0b561fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b561fba0b56
1f9d0a681f9c0a681fb80180b213321fb8017ab211401fb80179b211421f
b80178b211421fb80177b211421fb80176b211421fb80175b211421fb801
43b211421fb80142b210421fb80141b210421fb80140b210421fb8013fb2
10421fb8013eb210421fb8013db20f451fb80115b20f451fb80114b20f45
1fb80113b20f451fb903030302b2401fa4be030200b4030200c403020003
0300b213321fb8017bb213321fb80153b212371fb80152b211401fb80151
b211401fb80150b211401fb8014fb211401fb8014eb211401fb8014db211
401fb8014cb211401fb8014bb211401fb8014ab211401fb80149b211401f
b80148b211401fb80147b211401fb80146b211401fb80145b211401fb801
44b211401fb80122b211401fb80121b210421fb80120b210421fb8011fb2
10421fb8011eb210421fb8011db210421fb8011cb210421fb8011bb21042
1fb8011ab210421fb80119b210421fb80118b20f451fb80117b20f451fb8
0116409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e481ff80e48
1ff70e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff10d4a1fe7
0d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e1fcd0c4e
1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc60c4e1fc5
0c4e1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b561fb40b56
1fb30b561f9b0a681fb802fdb212371fb8017db212371fb8017cb212371f
b80169b2112e1fb80168b2112e1fb80167b211401fb80166b211401fb801
65b211401fb80164b211401fb80163b211401fb80162b211401fb80161b2
11401fb80160b211401fb8015fb211401fb8015eb211401fb8015db21140
1fb8015cb211401fb8015bb211401fb8015ab211401fb80159b211401fb8
0158b211401fb80157b211401fb80156b211401fb80155b211401fb80154
b211401fb8012fb211401fb8012eb210421fb8012db210421fb8012cb210
421fb8012bb210421fb8012ab210421fb80129b210421fb80128b210421f
b80127b210421fb80126b210421fb80125b20f451fb80124b20f451fb801
23b20f451fb80105b20f451fb80104b20f451fb80103b20f451fb80102b2
0f451fb80101b20e481fb8010040a20e481fff0e481ffe0e481fe80c4e1f
d60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c4e1fcf0c
4e1fce0b561fb90b561f8503251f84032e1f83012e1f8248805581ab8055
7f487d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb7d067c48
7a557bab7a55047a147a020a7948775578ab77550b77010c764875555475
e475f4750314755475647574759475d475e47507a475b475c47503b8ffc0
401275383b46807590750214757475020075010fb8ffc04021750b0e4674
48725573ab725504723472023bf47201e07201023072015072607202b8ff
c0b372242846b8ffc0403572161a461072307240720371486f5570ab6f55
4f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d466e486d55
df6d0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef02fe40ff
016b032e1f6a03251f692e675568ab6755662e645565ab6455632e625561
2e60555f2e5d555eab5d555c2e5a555bab5a55592e58555703251f562e54
5555ab5455532e515552ab51554f2e4e554e03251f4d2e4b554cab4b554a
2e485549ab4855504801472e46554503361f001f01001e01001e701e801e
f01e040b601d701d02701de01df01d03701cf01c027f1b010f1a7f1a8f1a
030f1a8f1a020f1a8f1a020f191f198f199f19af19050f198f199f19030c
7012801202701180110230114011d011e011040011a011020f8f0f9f0faf
0f034f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f0e030f0e
af0ebf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f0d038f0d
01400d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946ef0aff0a
02400a242746ef09ff0902ff09010003012001010001100120010308b8ff
c0b401151f4603bd0100010000050001019000542b4bb807ff524bb00850
5bb00188b02553b00188b040515ab00688b000555a5b58b101018e59b101
024354b0144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d
42594bb0805358b20340401d42594bb0ff5358b20300001d42592b5e7375
7373742b732b73742b2b73745e732b5e7374757374755e73747573015e73
74737475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73755f7575
5e732b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b0073747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b73737373
185f5e00000000>
[6847 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1296 5 <0002008dfffa044d050e00360044009bb10102435558b4102e11290abb02
c600000037029bb2293f11b80293b21c2e10b8ffe8b40b0f014c10b80125
b34040173db8ffe8b40b0f014c3db80129b64021511755055500183f3f3f
1aed2b12392fed2b39012fed32d4edd4ed1112393930311bb12e10b8ffe8
b40b0f014c10b80125b34040173db8ffe8b40b0f014c3db80129b6402151
1755055500183f3f3f1aed2b12392fed2b3930315925140e0223222e0227
032e03232311140e0223222e023511343633213216171e0315140e02071e
031717161601342627262623231133323e02044d081e3a322a321d0c0474
152831402a520d1e322726331e0c2d21014f33421b4e7d572e21405e3c1d
332d28136d0f0afead3a4214332d76863854381c220b0f0a04040b110c01
21314c331afe130a100a06060a100a04972c2704030b3657774d416b543e
130e2839492eff262303644058120506fe911b314400>XBAAAA+Calibri-Bold AddT42Char 
1 2978 10 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>XBAAAA+Calibri-Bold AddT42Char 
1 2210 8 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>XBAAAA+Calibri-Bold AddT42Char 
1 4604 15 <0001007efffa017a05700015003eb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1aed30315f5e5d
5d5d5d1bb31046054c00183f3f30315925140e0223222e023511343e0233
321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a0f
0a05230a100b06060b100a00>XBAAAA+Calibri-Bold AddT42Char 

1 0 1 <> XBAAAA+Calibri-Bold AddT42Char 
1 1648 6 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>XBAAAA+Calibri-Bold AddT42Char 
1 2680 9 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>XBAAAA+Calibri-Bold AddT42Char 
1 4736 16 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>XBAAAA+Calibri-Bold AddT42Char 
1 5554 19 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>XBAAAA+Calibri-Bold AddT42Char 
1 4180 13 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>XBAAAA+Calibri-Bold AddT42Char 
1 5004 17 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>XBAAAA+Calibri-Bold AddT42Char 
1 316 2 <0001004fffeb040c052300390089b10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed012fedd4c430
311bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015ab7
3530180b0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed3031
5925140e0623222e02353412363633321e0615140e0223222e0223220e02
15141e0233323e0233321e02040c03060a163f5b754485d69650589edd85
366455441b0a0603040a0e090f2e4965464d79552c2f577b4d4666492f0d
0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c261c
1e2a1a0c232b233f75a66872a76c3521282008182b00>XBAAAA+Calibri-Bold AddT42Char 
1 6226 21 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>XBAAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>XBAAAA+Calibri-Bold AddT42Char 
XBAAAA+Calibri-Bold /CharStrings get begin
/g5 5 def
/g10 10 def
/g8 8 def
/g15 15 def
/g1 1 def
/g6 6 def
/g9 9 def
/g16 16 def
/g19 19 def
/g13 13 def
/g17 17 def
/g2 2 def
/g21 21 def
end
XBAAAA+Calibri-Bold /Encoding get
dup 33 /g5 put
dup 34 /g10 put
dup 35 /g8 put
dup 36 /g15 put
dup 37 /g1 put
dup 38 /g6 put
dup 39 /g9 put
dup 40 /g16 put
dup 41 /g19 put
dup 42 /g13 put
dup 43 /g17 put
dup 44 /g2 put
dup 45 /g21 put
pop
end
%ADOEndSubsetFont
/YQMNWB+Calibri-Bold /XBAAAA+Calibri-Bold findfont ct_VMDictPut/YQMNWB+Calibri-Bold*1 [33{/.notdef}rp /g5 /g10 /g8 /g15 /g1 /g6 /g9 /g16 /g19 /g13 /g17 /g2 /g21 210{/.notdef}rp]YQMNWB+Calibri-Bold nfYQMNWB+Calibri-Bold*1 [15 0 0 -15 0 0 ]msf5.71841 20.0144 mo(!"#$%&'"\(#\)*+%,+$$"'-*+\()[8.28005 7.50009 7.38005 3.63003 3.37497 7.12511 6.25499 7.50009 7.99504 7.38004 5.36993 3.63003 8.12992 3.37497 7.99511 8.12992 3.63003 3.63003 7.5001 6.25497 5.25002 3.63002 8.12991 0 ]xsh196.899 4.3909 mo
381.17 4.3909 li
381.17 204.814 li
196.899 204.814 li
cp
.0806592 .0636606 .0646372 0 cmyk
f
[6 2.25 ] 0 dsh
196.899 4.3909 mo
381.17 4.3909 li
381.17 204.815 li
196.899 204.815 li
cp
.75021 .679683 .670222 .90164 cmyk
@
208.497 132.243 mo
208.497 124.746 214.574 118.669 222.07 118.669 cv
354.573 118.669 li
362.069 118.669 368.146 124.746 368.146 132.243 cv
368.146 186.535 li
368.146 194.031 362.069 200.108 354.573 200.108 cv
222.07 200.108 li
214.574 200.108 208.497 194.031 208.497 186.535 cv
cp
0 0 0 0 cmyk
f
[] 0 dsh
208.497 132.243 mo
208.497 124.746 214.574 118.669 222.07 118.669 cv
354.573 118.669 li
362.069 118.669 368.146 124.746 368.146 132.243 cv
368.146 186.535 li
368.146 194.031 362.069 200.108 354.573 200.108 cv
222.07 200.108 li
214.574 200.108 208.497 194.031 208.497 186.535 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: VBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNVZ+Calibri-Bold gcheck setglobal} if
1 316 2 <0001008dfffa0363050e002700b7b10102435558b10713b8029440160d1d
001e1d07280f014d07180c0d014c07100b014d07ba01570013fff0b60b01
4d13131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119
5500183f3f1aed2b2b12392f2bed2b2b2b012f2fc41139ed3230311b4011
07280f014d07180c0d014c07100b014d07ba01570013fff0b60b014d1313
1906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119550018
3f3f1aed2b2b12392f2bed2b2b2b30315901140e0223211121321e021514
0e02232111140e0223222e02351134363321321e020363050b0e09fe5901
8d090e0b05050b0e09fe730c1f322726331e0d2d210261090e0b0504a21e
29180cfea40a18281e1e281a0bfe1e0b100b06060b100b04952c270b192a
>YQMNVZ+Calibri-Bold AddT42Char 
1 6052 21 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>YQMNVZ+Calibri-Bold AddT42Char 
1 1004 4 <0001008dfffa0671050e003c00d7b10102435558400b0d3030172f2f0a2e
18181ab80264b424310c0c0ab80264b700243651190c0b18bb012d004000
2efff0b41023024c31b8fff040201023024c17101023024c0d101023024c
0d172f30312e061f28511f551255055500183f3f3f3f1217392b2b2b2b1a
ed3232323f012fd4ed32113310ed32113311393d2f3333113330311bb536
51190c0b18bb012d0040002efff0b41023024c31b8fff040201023024c17
101023024c0d101023024c0d172f30312e061f28511f551255055500183f
3f3f3f1217392b2b2b2b1aed3232323f30315925140e0223222e02351123
010e0323222e0227012311140e0223222e02351134363333321e02170133
013e033333321e021506710b1d302524301c0c02fe8904121f302222301f
1203fe96020b1e2f2524301d0b362dac2e4230200c01180401220d1f2938
25b11b27190d240a100a06060a100a041dfbe40d110a03050b100b041cfb
e30a100a06060a100a048133360f23392afcfd03012a3a240f0e1b271900
>YQMNVZ+Calibri-Bold AddT42Char 
1 4130 14 <0001007efffa017a05700015003eb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1aed30315f5e5d
5d5d5d1bb31046054c00183f3f30315925140e0223222e023511343e0233
321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a0f
0a05230a100b06060b100a00>YQMNVZ+Calibri-Bold AddT42Char 
YQMNVZ+Calibri-Bold /CharStrings get begin
/g2 2 def
/g21 21 def
/g4 4 def
/g14 14 def
end
YQMNVZ+Calibri-Bold /Encoding get
dup 48 /g2 put
dup 49 /g21 put
dup 50 /g4 put
dup 51 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNVZ+Calibri-Bold*1 [33{/.notdef}rp /g6 /g9 /g11 /g15 /g8 /g18 /g13 /g16 /g19 /g5 /g23 /g17 /g10 /g1 /g20 /g2 /g21 /g4 /g14 204{/.notdef}rp]YQMNVZ+Calibri-Bold nfYQMNVZ+Calibri-Bold*1 [11 0 0 -11 0 0 ]msf215.024 132.094 mo(0'$#)[4.87518 2.62022 5.62323 0 ]xsh233.399 132.094 mo(+)sh236.649 132.094 mo(/1$#-.2\(-#3)[3.6245 5.62653 5.62653 5.25255 5.62653 2.37048 9.12442 5.62643 5.62653 5.25256 0 ]xsh220.834 174.968 mo
283.039 174.968 li
283.039 193.26 li
220.834 193.26 li
cp
0 0 0 0 cmyk
f
.25 lw
220.834 174.968 mo
283.039 174.968 li
283.039 193.26 li
220.834 193.26 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 3934 13 <0001000ffffa03d7050e00220080b0852b58b718400d014d181100b8ffc0
b40d014d0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06
b8fff6b30c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612
b80128b31d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b31301b
b2061d12b80128b46c1d510c5500183f3f2b3230315901140e0223211114
0e0223222e02351121222e0235343e023321321e0203d704090d08fe9408
14211918221408fe94080d080505080d080384080d090404c4131c1108fb
9e080c070505070c08046208111c13131d120808121d>YQMNWA+Calibri AddT42Char 
1 11994 36 <00010029fffa034b03bc002f00a4b0852b58b90031ffc040110b014d2f08
0b014d2e100b014d3b2e0118b8fff0b60b014d34180117b8fff8b30b014d
16b8fff0b60b014d34160109b8fff0402a0b014d00080b014d3c00013823
01360b010b2010014d0b200c014d0b0b31302949230b111d49114c054c00
3f3f3f1239393f111201392f2b2b3130005d5d015d2b2b5d2b2b5d2b5d2b
2b2b1b400b2949230b111d49114c054c00183f3f3f1239393f3031592516
14060623222e022703030e0323222626363701012626363633321e021713
133e033332161606070103430813271f1e23150b04d8d7040b15221c1d25
1101090118fef708011327201d23140a04cdd0040a111f1b1d25120209fe
f92c0e130c0503070b070165fe9b070b0703050c130e01b701a70e130d04
03060a07feb1014f060a0703040b140ffe5e>YQMNWA+Calibri AddT42Char 
1 13138 43 <00040000ffee051f054a00540068007c007d006cb0852b58400a4973341e
78195a070f6eb80103b54e4d29290f39b80106b5444d64ec0f46003fed3f
ed12392f3fed12173931301b400b4973341e78195a070f4e6eb80103b76c
4e4d29290f4439b8010640096c444d0f64ec6c0f4600183f2b3f2b12392f
3f2b12173930315913343e02372e0335343e0233321e0215140e02071e03
173e033535343e0233321e021515140e02071e03333236161615140e0323
222e02270e0323222e0401141e02173e0335342e0223220e0203141e0233
323e02372e03270e03016c1e406749283925102a5d92685881552b265483
5d2250575b2c1420180c07101f19161f14091321311e2d432f1f0a0a120b
0602050c201a14304055392a5d6973433f71604c351d01270f1f2d1f4963
3c1b152e463135492f167423446643294e47401b346760592532432912fe
e1015537635d572c36584c45233e7157332646633d3b625c5b3229595a57
281b454d5029240a0d090402070f0d19386c675e2824301e0c0208181919
1e0f0a080e233c2e223a291716293e4f6203021b383d462b29454040241d
3529181b2d3cfd2834563f23111d29172d6162612e203f3f40038500>YQMNWA+Calibri AddT42Char 
1 4892 16 <00020099ffed03d50571002a003d00b6b0852b58b53f3f010a2136b8fff6
b30c014d36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36
b801f8401b152b120c014d2b200d014d2b180b014d2b1810014d2b100f01
4d2bb8020a400900150a363521040530b80105b6264a1b46104c39b80105
b1054d003fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b3239
31305d1bb70a36352104052630b8010540096c264a1b46104c0539b80105
b26c054d00183f2b3f3f3f2b12173930315901140e0223222e022715140e
0223222e023511343e0233321e0215113e0333321e0207342e0223220e02
0711161633323e0203d53363905d2b4946462708121b15141c1206071320
1819201208284b484828628b5728ae15345640203e404527447c433e5837
1901e775bb844611263a296e080c070404070c080538080c080404080c08
fde5293823104e83b0754582643d122a4232fe9953573c637b00>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g13 13 def
/g36 36 def
/g43 43 def
/g16 16 def
end
YQMNWA+Calibri /Encoding get
dup 53 /g13 put
dup 69 /g36 put
dup 70 /g43 put
dup 71 /g16 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /.notdef /g20 /g21 /g33 /g32 /.notdef /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 4{/.notdef}rp /g18 4{/.notdef}rp /g26 /g38 /g39 /g36 /g43 /g16 184{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf227.187 181.534 mo(5#E.0F06\(\)'.'\($0)[3.87518 4.00322 3.49918 2.62726 1.74718 5.49927 1.74718 4.25114 4.25113 3.12326 1.87524 2.62723 1.87524 4.25113 4.25116 0 ]xsh233.437 191.614 mo(#BG#=='$,)[4 6.37596 4.24796 4.00002 4.24792 4.24796 1.87204 4.24796 0 ]xsh220.942 157.046 mo
220.942 157.829 234.505 158.464 251.236 158.464 cv
267.967 158.464 281.53 157.829 281.53 157.046 cv
281.53 165.55 li
281.53 166.333 267.967 166.967 251.236 166.967 cv
234.505 166.967 220.942 166.333 220.942 165.55 cv
cp
0 0 0 0 cmyk
f
220.942 157.046 mo
220.942 156.263 234.505 155.629 251.236 155.629 cv
267.967 155.629 281.53 156.263 281.53 157.046 cv
281.53 157.829 267.967 158.464 251.236 158.464 cv
234.505 158.464 220.942 157.829 220.942 157.046 cv
cp
f
281.53 157.046 mo
281.53 157.829 267.967 158.464 251.236 158.464 cv
234.505 158.464 220.942 157.829 220.942 157.046 cv
220.942 156.263 234.505 155.629 251.236 155.629 cv
267.967 155.629 281.53 156.263 281.53 157.046 cv
281.53 165.55 li
281.53 166.333 267.967 166.967 251.236 166.967 cv
234.505 166.967 220.942 166.333 220.942 165.55 cv
220.942 157.046 li
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 1834 7 <0001005bffee04780520003f00ddb0852b58401d1c1c0f181810014d1810
0f014d18100d014d180a0c014d18100b014d18b80211400d00bf27012027
4027602703270fb8ffe8b310014d0fb8fff0b30f014d0fb8ffecb30d014d
0fb8ffeeb30c014d0fb8ffe8b30b014d0fb80232b42f34013418b8010ab4
2222392f3ebb010a0005000a0129b2395314b8012cb12f56003fed3ffdd4
ed1112392fed012f5de12b2b2b2b2bd45d5dc4e12b2b2b2b2b12392f3130
1bb12218b8010ab66c2222392f053eb8010ab36c05390ab80129b46c3953
2f14b8012cb26c2f5600183f2b3f2bc42b1112392f2b30315901140e0223
222e0223220e0215141e02333236371121222635343e023321321e021511
140e0423222e0235343e0233321e04047804080c070c385e835a6baa763f
457aa9653c7b35fed4111104090c09019b0b16120a123a5c62643196eca3
565da9ed904a8265451a0a045e131d1308262e264e8abe6f7cc084441d1d
01792224131b110808101c12fe131a261d22180c5dacf0949afab0611a23
291a2200>YQMNWA+Calibri AddT42Char 
1 2782 10 <000200acfffa03c7050e001c0029009fb0852b58b12406b8ffe8b310014d
06b8fff0b30f014d06b8fff0b30d014d06b8fff6b30c014d06b8ffe8b30b
014d06b802114017111d1810014d1d100f014d1d100c0d014c1d200b014d
1db80232b2001125b8010ab306060c23b8010bb315510c55003f3fed1239
2fed012fd4e12b2b2b2b10e12b2b2b2b2b3231301bb10625b8010ab56c06
060c1523b8010bb46c15510c5500183f3f2b12392f2b30315901140e0223
2311140e0223222e02351134363321321e0407342e0223231133323e0203
c74077ad789309132119192114082a1a01152a4d696d4c29b53b575d2c9f
9b4e6746240393619c6e3cfe2e080c070505070c0804aa282207173f5c79
574f6a340efdf9284763>YQMNWA+Calibri AddT42Char 
1 13050 42 <0001004501b4022e023d000f0020b0852b58b400070bed04002fed012fcd
31301bb4040bed6c0400182f2b303159011406232122263534363321321e
02022e1211fe5e1212121201a2080d090501f9271e1f26261e06111a>YQMNWA+Calibri AddT42Char 
1 13586 44 <000100720000039c0521003e00cab0852b58400d2936012b1e01291d0126
1e0140b8ffc040170f024d604001161810014d16100c0d014c16200b014d
16b8022db633253325330039b8ffe8b310014d39ba027f000bffc0b30c01
4d0bb8ffe0400b0f014d0b1138392020391bb8012eb63316062e531039b8
0128b10654003fed323f123939ed11392f123939012f2b2be12bcd39392f
2f10e12b2b2b31305d2b005d015d5d5d1bb71138392020392e1bb8012e40
096c3316062e53100639b80128b26c065400183f2b323f1239392b11392f
12393930315925140e022321222e0235343e0237133e0335342e0223220e
0223222e0235343e0633321e0215140e02070721321e02039c05090f09fd
350e150f07030a0f0cfb576939121c3550343d6149310c070b0704020508
183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c130907101e1614
1e17170d010a5c9278622b2b4d3a2222282208121e150f16100e15242318
355c7a453e7b8faf72d609121b00>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g7 7 def
/g10 10 def
/g42 42 def
/g44 44 def
end
YQMNWA+Calibri /Encoding get
dup 57 /g7 put
dup 58 /g10 put
dup 59 /g42 put
dup 60 /g44 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /.notdef /g20 /g21 /g33 /g32 /.notdef /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 4{/.notdef}rp /g26 /g38 /g39 /g36 /g43 /g16 184{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf230.236 164.254 mo(9:5)[4.99997 4.12798 0 ]xsh243.236 164.254 mo(;)sh245.736 164.254 mo(<0B\(=#2)[4.00002 1.75198 6.37596 4.24796 4.24796 4 0 ]xsh220.942 147.784 mo
223.777 136.446 li
281.61 136.446 li
278.775 147.784 li
cp
0 0 0 0 cmyk
f
220.942 147.784 mo
223.777 136.446 li
281.61 136.446 li
278.775 147.784 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 728 3 <00010061fff0040c051e00390097b0852b58b31c003b2bb8ffe8b310014d
2bb8fff0b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b
014d2bbe0233000e0018012f00210026012cb2135304bb012a0035003001
2eb10956003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c431301bb12118
b8012fb36c211326b8012cb46c13533504b8012ab36c350930b8012eb26c
095600183f2bc42b3f2bc42b30315925140e0623222e0235343e0233321e
0615140e0223222e0223220e0215141e0233323e0233321e02040c020508
14405f7b497ecb8f4d5396d17f386a5a461b08050304080b080e324f714f
568d64373563905b4d7351340f070a0603b71018120e1429271b54a4f19d
a1fcaf5c15202a1b0e131a12141c1309272f274586c17c7bbd7f41262f26
06111e00>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g3 3 def
end
YQMNWA+Calibri /Encoding get
dup 42 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /g3 /g20 /g21 /g33 /g32 /.notdef /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 4{/.notdef}rp /g26 /g38 /g39 /g36 /g43 /g16 184{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf229.213 144.334 mo(*\(B6-.#02\(\)\))[4.24963 4.24954 6.37756 4.24954 4.24956 2.62566 4.00159 1.74561 1.87363 4.24954 3.12164 0 ]xsh302.743 166.516 mo
305.578 155.178 li
362.516 155.178 li
359.681 166.516 li
cp
0 0 0 0 cmyk
f
302.743 166.516 mo
305.578 155.178 li
362.516 155.178 li
359.681 166.516 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 4166 14 <000100aaffed04790514002b00b5b0852b58401d602d01201810014d2010
0f014d20100d014d200a0c014d20180b014d20b802104011004015014d00
4013014d004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0
b30d014d16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315
014d0ab8ffc0400913014d0a265210521bb80129b10556003fed3f3f012f
2b2be12b2b2b2b2bd42b2b2be12b2b2b2b2b31305d1bb526521052051bb8
0129b26c055600183f2b3f3f30315901140e0223222e023511343e023332
1e021511141e0233323e023511343e0233321e021504794580b8756bb07e
440814201a182213082c5375494b75512b081421191821130901de76b980
423e79b6770323080c070505070c08fcf25a86592d2c5882570317080c07
0505070c0800>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g14 14 def
end
YQMNWA+Calibri /Encoding get
dup 64 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /g3 /g20 /g21 /g33 /g32 /.notdef /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 2{/.notdef}rp /g14 /.notdef /g26 /g38 /g39 /g36 /g43 /g16 184{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf309.317 163.054 mo(@6=%.#0B\(=#2)[5.12476 4.25278 4.25275 3.87683 2.62085 3.9968 1.74878 6.37277 4.25275 4.25275 3.99683 0 ]xsh208.263 41.9894 mo
208.263 35.49 213.532 30.2212 220.031 30.2212 cv
356.144 30.2212 li
362.644 30.2212 367.912 35.49 367.912 41.9894 cv
367.912 89.0603 li
367.912 95.5597 362.644 100.828 356.144 100.828 cv
220.031 100.828 li
213.532 100.828 208.263 95.5597 208.263 89.0603 cv
cp
0 0 0 0 cmyk
f
.75 lw
208.263 41.9894 mo
208.263 35.49 213.532 30.2212 220.031 30.2212 cv
356.144 30.2212 li
362.643 30.2212 367.912 35.49 367.912 41.9894 cv
367.912 89.0603 li
367.912 95.5597 362.643 100.829 356.144 100.829 cv
220.031 100.829 li
213.532 100.829 208.263 95.5597 208.263 89.0603 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: VBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNVZ+Calibri-Bold gcheck setglobal} if
1 616 3 <00010049ffea049b0524003f00d9b10102435558b31c1c0f18b80292b200
270fbb029900340018ffe8b30f014d18b8ffe8b30d014d18b8fff0b30c01
4d18b80127b42222392f3ebb012f0005000affe8b40b0f014c0ab8015b40
09395314180b0f014c14b8015fb2402f5600183f1aed2b3ffd2bd4ed1112
392fed2b2b2b012fedd4c4ed12392f30311bb90018ffe8b30f014d18b8ff
e8b30d014d18b8fff0b30c014d18b80127b42222392f3ebb012f0005000a
ffe8b40b0f014c0ab8015b4009395314180b0f014c14b8015fb2402f5600
183f1aed2b3ffd2bd4ed1112392fed2b2b2b30315901140e0223222e0223
220e0215141e02333236371123222635343e023321321e021511140e0423
222e0235343e0233321e04049b05090d090d3a6085585e986c3a3b6a955a
2c5625f51214050a0e0901b51019130a1541606769359bf5aa5a60b0f999
548a67441b0c04451d2a190a242a244177a7656fa9723a1414012c2d361c
26170b0b161f14fdfd1e2d1a1c140a59a9f39a9ffdb15e1721261c33>YQMNVZ+Calibri-Bold AddT42Char 
1 2016 7 <0001000cfffa03ea050e00220053b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1aed2b32012fc4
fdcd30311bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f
1aed2b3230315901140e02232111140e0223222e02351121222e0235343e
023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05050a
0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19291d
1e2a190b0b192a00>YQMNVZ+Calibri-Bold AddT42Char 
1 6656 24 <00010058000003bc0525003e0110b10102435558400e042c01042b01093a
010939010b40b8ffc0b60f024d00400116b802eeb633253325330039ba02
ee000bffea400a0f024d000b010f030b2ab80169b61138392020391bb8ff
e8b30b014d1bb8ffe8b40b0f014c1bb80169400d3316062e531039180b0f
014c39b80159b240065400183f1aed2b323f123939ed2b2b11392f123939
ed012f5f5e5d2bedcd39392f2f10ed30315d2b005e5d5d015d5d1b401304
2c01042b01093a010939010b0040010f032ab80169b61138392020391bb8
ffe8b30b014d1bb8ffe8b40b0f014c1bb80169400d3316062e531039180b
0f014c39b80159b240065400183f1aed2b323f123939ed2b2b11392f1239
39ed3031015f5e5d005e5d5d015d5d5925140e022321222e0235343e0237
373e0335342e0223220e0223222e0235343e0633321e0215140e02070721
321e0203bc050a100afd181620140906101914e043522e1115293e2a3b5b
452e0d090d080503060a194362764065976431184c8a729701fe0a110c06
6b1d291a0b08172c23212f252315f046735f5024213b2c191e251f0c1c2f
22171f171118252318335b7d483f7a8dab719b0c1929>YQMNVZ+Calibri-Bold AddT42Char 
YQMNVZ+Calibri-Bold /CharStrings get begin
/g3 3 def
/g7 7 def
/g24 24 def
end
YQMNVZ+Calibri-Bold /Encoding get
dup 52 /g3 put
dup 53 /g7 put
dup 54 /g24 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNVZ+Calibri-Bold*1 [33{/.notdef}rp /g6 /g9 /g11 /g15 /g8 /g18 /g13 /g16 /g19 /g5 /g23 /g17 /g10 /g1 /g20 /g2 /g21 /g4 /g14 /g3 /g7 /g24 201{/.notdef}rp]YQMNVZ+Calibri-Bold nfYQMNVZ+Calibri-Bold*1 [11 0 0 -11 0 0 ]msf216.856 41.1344 mo(4*5)[6.74951 5.62758 0 ]xsh234.481 41.1344 mo(+)sh237.731 41.1344 mo(6..*&#)[5.37463 2.37158 2.37157 5.62758 3.74655 0 ]xsh262.481 41.1344 mo(+)sh265.731 41.1344 mo(/&%'$#-.2\(-#3)[3.62448 3.74545 5.12054 2.6235 5.62653 5.25256 5.62656 2.37045 9.12442 5.62646 5.62653 5.25256 0 ]xsh249.392 82.8131 mo
334.431 82.8131 li
334.431 94.1516 li
249.392 94.1516 li
cp
0 0 0 0 cmyk
f
.25 lw
249.392 82.8131 mo
334.431 82.8131 li
334.431 94.1517 li
249.392 94.1517 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 1032 4 <000200ac0000048f050e0012001f0098b0852b58401d3f2101131810014d
13100f014d13140d014d13120c014d13180b014d13bb02320000001affe8
b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8
ffe8b30b014d1abb021100090018010cb20e511bb80126b10554003fed3f
ed012fe12b2b2b2b2bd4e12b2b2b2b2b31305d1bb10e18b8010cb46c0e51
051bb80126b26c055400183f2b3f2b30315901140e022321222635113436
3321321e0207342e0223231133323e02048f56a5f0a6feee172929170125
a8e89d51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e8
9969b5844afc113e80c1>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g4 4 def
end
YQMNWA+Calibri /Encoding get
dup 72 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /g3 /g20 /g21 /g33 /g32 /.notdef /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 2{/.notdef}rp /g14 /.notdef /g26 /g38 /g39 /g36 /g43 /g16 /g4 183{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf257.037 90.5744 mo(5&%$\)+\(&B#&0H#"\(=#&)[3.87518 2.74719 3.87521 4.25116 3.12326 2.49915 4.25113 2.74719 6.37918 4.0032 2.74719 1.74716 4.87524 4.0032 3.37924 4.25116 4.25113 4.00323 0 ]xsh250.014 46.4846 mo
335.053 46.4846 li
335.053 57.5737 li
250.014 57.5737 li
cp
0 0 0 0 cmyk
f
250.014 46.4846 mo
335.053 46.4846 li
335.053 57.5737 li
250.014 57.5737 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
YQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf257.658 54.3344 mo(5&%$\)+\(&B#&0H#"\(=#&)[3.87518 2.74719 3.87521 4.25116 3.12326 2.49915 4.25113 2.74719 6.37918 4.0032 2.74719 1.74716 4.87524 4.0032 3.37924 4.25116 4.25113 4.00323 0 ]xsh250.014 66.6915 mo
335.053 66.6915 li
335.053 78.0301 li
250.014 78.0301 li
cp
0 0 0 0 cmyk
f
250.014 66.6915 mo
335.053 66.6915 li
335.053 78.0301 li
250.014 78.0301 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
YQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf257.658 74.4944 mo(5&%$\)+\(&B#&0H#"\(=#&)[3.87518 2.74719 3.87521 4.25116 3.12326 2.49915 4.25113 2.74719 6.37918 4.0032 2.74719 1.74716 4.87524 4.0032 3.37924 4.25116 4.25113 4.00323 0 ]xsh285.445 59.2223 mo
288.28 56.3877 li
291.115 59.2223 li
289.697 59.2223 li
289.697 68.4468 li
286.863 68.4468 li
286.863 59.2223 li
cp
0 0 0 0 cmyk
f
285.445 59.2224 mo
288.28 56.3877 li
291.115 59.2224 li
289.697 59.2224 li
289.697 68.4468 li
286.863 68.4468 li
286.863 59.2224 li
cp
.75021 .679683 .670222 .90164 cmyk
@
285.905 79.4069 mo
288.74 76.5723 li
291.575 79.4069 li
290.157 79.4069 li
290.157 84.7072 li
287.323 84.7072 li
287.323 79.4069 li
cp
0 0 0 0 cmyk
f
285.905 79.407 mo
288.74 76.5723 li
291.575 79.407 li
290.157 79.407 li
290.157 84.7072 li
287.323 84.7072 li
287.323 79.407 li
cp
.75021 .679683 .670222 .90164 cmyk
@
283.392 60.8966 mo
293.021 60.8966 li
293.021 64.9725 li
283.392 64.9725 li
cp
0 0 0 0 cmyk
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: OAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /OAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c796600000000000039fc00002b36
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d74780000000000001400000000886c6f63610000000000001488
000000466d61787000000000000014d0000000206e616d65000000000000
14f000000020707265700000000000001510000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000022040e000001cf000004a1
002304ec00ac03e800ac04fc00ac042200ac045800ac03ad004703e6000f
071e003d03d5005c043400990362005a0434006003fb005d027100250434
009901d6008503a3009901d6009906640099043400990438005a04340099
02ca00990321005102ae002104340094039d002205b8003503770029039f
002205860096000000bf00bf016c01e90281033803c40485057805ec068e
0760081208bd096c0a2b0ac00b560bdc0c850cd00dcb0e6e0f0d0fbc1046
112d11bf1262132e142f14ce1543159b0000000100000022043a00170108
000800020010002f00870000123602350004000100000001001200010000
00000006000e0000434745504c552b43616c69627269b10903415302c802
c60038001f02c702c60038001f02dd003802da005502d9003802d7005502
d8003802d7005502d6003802d5005502d4003802d3005502d2003802d100
5502bf003802be005502bd003802bc0055000402db003402db005402db00
03003402db005402db006402db00a402db00d402db0005006b02d5000100
0b02d10001001402c2004402c2006402c2007402c2009402c2000500a402
be000100a402bc000100200284b40918014a20b80283b40918014a20b802
82b40918014a20b80281b40918014a20b80280b40918014a20b8027fb409
18014a20b8027eb40918014a20b8027db40918014a20b8027cb40918014a
20b8027bb40918014a20b8027ab40918014a20b80279b40918014a20b802
78b40918014a20b80277b40918014a20b80276b40918014a20b80275b409
18014a20b80274b40918014a20b80273b40918014a20b80271b40918014a
20b80270b40918014a20b8026fb40918014a20b8026eb40918014a20b802
6db40918014a20b8026cb40918014a20b8026bb40918014a20b8026ab409
18014a20b80269b40918014a20b80268b40918014a20b80267b40918014a
20b80266b40918014a20b80265b40918014a20b80264b40918014a20b802
63b40918014a20b80262b40918014a20b80261b40918014a20b80260b409
18014a20b8025fb40918014a20b8025eb40918014a20b8025db40918014a
20b8025cb40918014a20b8025bb40918014a20b8025ab40918014a20b802
59b40918014a20b80258b40918014a20b80257b40918014a20b80256b409
18014a20b80255b40918014a20b80254b40918014a20b80253b40918014a
20b80252b40918014a20b80251b40918014a20b80250b40918014a20b802
4fb40918014a20b8024eb40918014a20b8024db40918014a20b8024cb409
18014a20b8024bb40918014a20b8024ab40918014a20b80249b40918014a
20b80248b40918014a20b80247b40918014a20b80246b40918014a20b802
45b40918014a20b80244b40918014a20b80243b40918014a20b80242b409
18014a20b80241b40918014a20b80240b40918014a20b8023fb40918014a
20b8023eb40918014a20b8023db40918014a20b8023cb40918014a20b802
3bb40918014a20b8023ab40918014a20b80239b40918014a20b80238b409
18014a20b80237b40918014a20b80236b40918014a20b80235b40918014a
20b80234b40918014a20b80233b40918014a20b80232b40918014a20b802
31b40918014a20b80230b40918014a20b8022fb40918014a20b8022eb409
18014a20b8022db40918014a20b8022cb40918014a20b8022bb40918014a
20b8022ab40918014a20b80229b40918014a20b80228b40918014a20b802
27b40918014a20b80226b40918014a20b80225b40918014a20b80224b409
18014a20b80223b40918014a20b80222b40918014a20b80221b40918014a
20b80220b40918014a20b8021fb40918014a20b8021eb40918014a20b802
1db40918014a20b8021cb40918014a20b8021bb40918014a20b8021ab409
18014a20b80219b40918014a20b80218b40918014a20b80217b40918014a
20b80216b40918014a20b80215b40918014a20b80214b40918014a20b802
13b40918014a20b80212b40918014a20b80211b40918014a20b80210b409
18014a20b8020fb40918014a20b8020eb40918014a20b8020db40918014a
20b8020cb40918014a20b8020bb40918014a20b8020ab40918014a20b802
09b40918014a20b80208b40918014a20b80207b40918014a20b80206b409
18014a20b80205b40918014a20b80204b40918014a20b80203b40918014a
20b80202b40918014a20b80201b40918014a20b80200b40918014a20b801
ffb40918014a20b801feb40918014a20b801fdb40918014a20b801fcb409
18014a20b801fbb40918014a20b801fab40918014a20b801f9b40918014a
20b801f8b40918014a20b801f7b40918014a20b801f6b40918014a20b801
f5b40918014a20b801f4b40918014a20b801f3b40918014a20b801f2b409
18014a20b801f1b40918014a20b801f0b40918014a20b801efb40918014a
20b801eeb40918014a20b801edb40918014a20b801ecb40918014a20b801
ebb40918014a20b801eab40918014a20b801e9b40918014a20b801e8b409
18014a20b801e7b40918014a20b801e6b40918014a20b801e5b40918014a
20b801e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801
e1b40918014a20b801e0b40918014a20b801dfb40918014a20b801deb409
18014a20b801ddb40918014a20b801dcb40918014a20b801dbb40918014a
20b801dab40918014a20b801d9b40918014a20b801d8b40918014a20b801
d7b40918014a20b801d6b40918014a20b801d5b40918014a20b801d4b409
18014a20b801d3b40918014a20b801d2b40918014a20b801d1b40918014a
20b801d0b40918014a20b801cfb40918014a20b801ceb40918014a20b801
cdb40918014a20b801ccb40918014a20b801cbb40918014a20b801cab409
18014a20b801c9b40918014a20b801c8b40918014a20b801c7b40918014a
20b801c6b40918014a20b801c5b40918014a20b801c4b40918014a20b801
c3b40918014a20b801c2b40918014a20b801c1b40918014a20b801c0b409
18014a20b801bfb40918014a20b801beb40918014a20b801bdb40918014a
20b801bcb40918014a20b801bbb40918014a20b801bab40918014a20b801
b9b40918014a20b801b8b40918014a20b801b7b40918014a20b801b6b409
18014a20b801b5b40918014a20b801b4b40918014a20b801b3b40918014a
20b801b2b40918014a20b801b1b40918014a20b801b0b40918014a20b801
afb40918014a20b801aeb40918014a20b801adb40918014a20b801acb409
18014a20b801abb40918014a20b801aab40918014a20b801a9b40918014a
20b801a8b40918014a20b801a7b40918014a20b801a6b40918014a20b801
a5b40918014a20b801a4b40918014a20b801a3b40918014a20b801a2b409
18014a20b801a1b40918014a20b801a0b40918014a20b8019fb40918014a
20b8019eb40918014a20b8019db40918014a20b8019cb40918014a20b801
9bb40918014a20b8019ab40918014a20b80199b40918014a20b80198b409
18014a20b80197b40918014a20b80196b40918014a20b80195b40918014a
20b80194b40918014a20b80193b40918014a20b80192b40918014a20b801
91b40918014a20b80190b40918014a20b8018fb40918014a20b8018eb409
18014a20b8018db40918014a20b8018cb40918014a20b8018bb40918014a
20b8018ab40918014a20b80189b40918014a20b80188b40918014a20b801
87b40918014a20b80186b40918014a20b80185b40918014a20b80184b409
18014a20b80183b40918014a20b80182b40918014a20b80181b40918014a
20b80180b40918014a20b8017fb40918014a20b8017eb40918014a20b801
7db40918014a20b8017cb40918014a20b8017bb40918014a20b8017ab409
18014a20b80179b40918014a20b80178b40918014a20b80177b40918014a
20b80176b40918014a20b80175b40918014a20b80174b40918014a20b801
73b40918014a20b80172b40918014a20b80171b40918014a20b80170b409
18014a20b8016fb40918014a20b8016eb40918014a20b8016db40918014a
20b8016cb40918014a20b8016bb40918014a20b8016ab40918014a20b801
69b40918014a20b80168b40918014a20b80167b40918014a20b80166b409
18014a20b80165b40918014a20b80164b40918014a20b80163b40918014a
20b80162b40918014a20b80161b40918014a20b80160b40918014a20b801
5fb40918014a20b8015eb40918014a20b8015db40918014a20b8015cb409
18014a20b8015bb40918014a20b8015ab40918014a20b80159b40918014a
20b80158b40918014a20b80157b40918014a20b80156b40918014a20b801
55b40918014a20b80154b40918014a20b80153b40918014a20b80152b409
18014a20b80150b40918014a20b8014fb40918014a20b8014eb40918014a
20b8014cb40918014a20b8014bb40918014a20b8014ab40918014a20b801
49b40918014a20b80148b40918014a20b80147b40918014a20b80146b409
18014a20b80145b40918014a20b80144b40918014a20b80143b30918014a
b80284b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb802
80b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb2
1e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d43
1fb80277b21d431fb80276b21d431fb80275b21d411fb80274b21d431fb8
0273b21d431fb80272b21d411fb80271b21d421fb80270b21d421fb8026f
b21d421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c
451fb8026ab21c451fb80269b21c451fb80268b21c451fb80267b21c451f
b80266b21c441fb80265b21c451fb80264b21c451fb80263b21c451fb802
62b21c451fb80261b21c451fb80260b21c451fb8025fb21c451fb8025eb2
1c441fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c45
1fb80259b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb8
0255b21c451fb80254b21c451fb80253b21c451fb80252b21c451fb80251
b21c451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8024db21c
451fb8024cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b491f
b80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb802
44b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b2
1b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b
1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb8
0237b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb80233
b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b
4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1f
b8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb802
26b21b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b2
1b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c
1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb8
0219b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215
b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a
4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1f
b8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb802
08b21a4f1fb80207b21a4f1fb80206b219501fb80205b219511fb80204b2
19511fb80203b219501fb80202b219511fb80201b219511fb80200b21951
1fb801ffb219511fb801feb219501fb801fdb219511fb801fcb219511fb8
01fbb219511fb801fab219501fb801f9b219511fb801f8b219511fb801f7
b219511fb801f6b219511fb801f5b218541fb801f4b218531fb801f3b218
541fb801f2b218541fb801f1b218541fb801f0b218531fb801efb218541f
b801eeb218541fb801edb218541fb801ecb218531fb801ebb218531fb801
eab218541fb801e9b218541fb801e8b218541fb801e7b218541fb801e6b2
18531fb801e5b218541fb801e4b218531fb801e3b218541fb801e2b21854
1fb801e1b218541fb801e0b218531fb801dfb218531fb801deb218541fb8
01ddb218541fb801dcb218541fb801dbb218541fb801dab218531fb801d9
b218541fb801d8b218541fb801d7b217571fb801d6b217561fb801d5b217
561fb801d4b217571fb801d3b217571fb801d2b217571fb801d1b217571f
b801d0b217561fb801cfb217561fb801ceb217571fb801cdb217571fb801
ccb217571fb801cbb217571fb801cab217561fb801c9b217561fb801c8b2
17571fb801c7b217571fb801c6b217571fb801c5b217571fb801c4b21757
1fb801c3b217561fb801c2b217571fb801c1b217571fb801c0b217571fb8
01bfb217561fb801beb217561fb801bdb217571fb801bcb217571fb801bb
b217571fb801bab217571fb801b9b217571fb801b8b217561fb801b7b217
571fb801b6b217571fb801b5b217571fb801b4b217571fb801b3b2163f1f
b801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801
aeb2165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2
163e1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b
1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb8
01a1b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019d
b2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b216
5b1fb80198b2163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1f
b80194b2163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb801
90b2165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2
163f1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b
1fb80187b2165b1fb80186b215611fb80185b215621fb80184b215621fb8
0183b215661fb80182b215661fb80181b215551fb80180b215451fb8017f
b215361fb8017eb215361fb8017db215611fb8017cb215621fb8017bb215
621fb8017ab215641fb80179b215661fb80178b215661fb80177b215661f
b80176b215661fb80175b215661fb80174b215661fb80173b215451fb801
72b215621fb80171b215621fb80170b215631fb8016fb215641fb8016eb2
15661fb8016db215661fb8016cb215661fb8016bb215661fb8016ab21566
1fb80169b215621fb80168b215621fb80167b215611fb80166b215641fb8
0165b215641fb80164b215661fb80163b215661fb80162b215661fb80161
b215661fb80160b215661fb8015fb215661fb8015eb215551fb8015db215
451fb8015cb215451fb8015bb215361fb8015ab215611fb80159b215621f
b80158b215621fb80157b215631fb80156b215641fb80155b215661fb801
54b215661fb80153b215661fb80152b215661fb80151b214401fb80150b2
14551fb8014fb214561fb8014eb214831fb8014db2142d1fb8014cb21440
1fb8014bb214401fb8014ab214411fb80149b214401fb80148b214401fb8
0147b214411fb80146b2147e1fb80145b214871fb80144b2147f1fb80143
b214801fb80142b212461fb80141b212461fb80140b212461fb8013fb212
461fb8013eb212441fb8013db212461fb8013cb211591fb8013bb211591f
b8013ab2115b1fb80139b2115b1fb80138b211471fb80137b211581fb801
36b2115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb80132b2
11471fb80131b211551fb80130b211571fb8012fb211571fb8012eb21158
1fb8012db211591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb8
0129b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb80125
b211561fb80124b211561fb80123b211571fb80122b211581fb80121b211
591fb80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1f
b8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb801
18b2105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2
105f1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f
1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8
010bb2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107
b2105f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb80103b210
5f1fb80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f
631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641f
f60f641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f
641fee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641f
e70f641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e
681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681f
d80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d
2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1f
c90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d
311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c
731fba0c741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c731f
b30c741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b
7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1f
a40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b
7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f
950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a
671f8d0aa51f8c0aa71f8503251f8403381f8301381f8255805581ab8055
7f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a
557bab7a557955775578ab7755ba028600660285403c5576ab7555047514
75747503f47501ab750144750130750102007510752075030c7455725573
ab7255007250728072b072043bb072e072020072010ab8ffc0b3721b1e46
b8ffc0407c720d104671556f5570ab6f556e666d556a03251f6938675568
ab67556638645565ab645563386255613860555f385d555eab5d555c385a
555bab5a55593858555703251f5638545555ab54555338515552ab51554f
384e554e03251f4d384b554cab4b554a38485549ab485547384655450338
1f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b
04001bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f
18cf18024018292c460f17cf17df17ef1704134017292e46001610162016
0315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc040
1f162326460f15010f151f150245ef150186000301200101000110012001
0308b8ffc0b401151f4603bd0100010000050001019000542b4bb8080052
4bb008505bb00188b02553b00188b040515ab00688b000555a5b58b10101
8e59b101024354b0144b515a58b101018e59858d8d001d424bb01d5358b2
03a0a01d42594bb0805358b20340401d42594bb0ff5358b20300001d4259
2b5e7375732b58403d0011e011f0110315bf10cf10020f0f010f0fff0f02
400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f
0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02
400b3f4346400b2d30460003012001010001100120010308b8ffc0b30115
1f462b5e7375732b2b745e732b2b5e73742b73742b7374745e735901755e
73742b2b2b2b5e732b5e732b7374755e735e735e73755e732b5e73002b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73
755e732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb100024354
5841ff0284006402830064028200640281006402800064027f0064027e00
64027d0064027c0064027b0064027a006402790064027800640277006402
7600640275006402740064027300640271006402700064026f0064026e00
64026d0064026c0064026b0064026a006402690064026800640267006402
660064026500640264006402630064026200640261006402600064025f00
64025e0064025d0064025c0064025b0064025a0064025900640258006402
570064025600640255006402540064025300640252006402510064025000
64024f0064024e0064024d0064024c0064024b0064024a00640249006402
480064024700640246006402450064024400640243006402420064024100
6402400064023f0064023e0064023d0064023c0064023b0064023a006402
390064023800640237006402360064023500640234006402330064023200
640231006402300064022f0064022e0064022d0064022c0064022b006402
2a0064022900640228006402270064022600640225006402240064022300
64022200640221006402200064021f0064021e0064021d0064021c006402
1b0064021a00640219006402180064021700640216006402150064021400
6402130064021200640211006402100064020f0064020e0064020d006402
0c0064020b0064020a006402090064020800640207006402060064020500
64020441ff00640203006402020064020100640200006401ff006401fe00
6401fd006401fc006401fb006401fa006401f9006401f8006401f7006401
f6006401f5006401f4006401f3006401f2006401f1006401f0006401ef00
6401ee006401ed006401ec006401eb006401ea006401e9006401e8006401
e7006401e6006401e5006401e4006401e3006401e2006401e1006401e000
6401df006401de006401dd006401dc006401db006401da006401d9006401
d8006401d7006401d6006401d5006401d4006401d3006401d2006401d100
6401d0006401cf006401ce006401cd006401cc006401cb006401ca006401
c9006401c8006401c7006401c6006401c5006401c4006401c3006401c200
6401c1006401c0006401bf006401be006401bd006401bc006401bb006401
ba006401b9006401b8006401b7006401b6006401b5006401b4006401b300
6401b2006401b1006401b0006401af006401ae006401ad006401ac006401
ab006401aa006401a9006401a8006401a7006401a6006401a5006401a400
6401a3006401a2006401a1006401a00064019f0064019e0064019d006401
9c0064019b0064019a006401990064019800640197006401960064019500
640194006401930064019200640191006401900064018f0064018e006401
8d0064018c0064018b0064018a0064018900640188006401870064018600
640185006441800184006401830064018200640181006401800064017f00
64017e0064017d0064017c0064017b0064017a0064017900640178006401
770064017600640175006401740064017300640172006401710064017000
64016f0064016e0064016d0064016c0064016b0064016a00640169006401
680064016700640166006401650064016400640163006401620064016100
6401600064015f0064015e0064015d0064015c0064015b0064015a006401
590064015800640157006401560064015500640154006401530064015200
6401500064014f0064014e0064014c0064014b0064014a00640149006401
48006401470064014600640145006401440064014300642b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f5e0000>
[11063 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 10886 33 <00030096fff704f000de000b001700230044b0852b58bf0018027c001e00
0c027b00120000027cb7062115091b0f034c003f3333cd3232012fe12fe1
2fe131301bb7211509401b0f034c00183f33331acd323230315925140623
222635343633321605140623222635343633321605140623222635343633
321601692f3c3a2e2f3c3a2e01c32e3c3a2e2f3b3b2d01c42f3c3a2e2f3c
3a2e6c462f2e44462f2e44462f2e44462f2e44462f2e44462f2e>OAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>OAAAAA+Calibri AddT42Char 
OAAAAA+Calibri /CharStrings get begin
/g33 33 def
end
OAAAAA+Calibri /Encoding get
dup 51 /g33 put
pop
end
%ADOEndSubsetFont
/YQMNWC+Calibri /OAAAAA+Calibri findfont ct_VMDictPut/YQMNWC+Calibri*1 [51{/.notdef}rp /g33 204{/.notdef}rp]YQMNWC+Calibri nfYQMNWC+Calibri*1 [5 0 0 -5 0 0 ]msf284.707 63.4544 mo(33)[3.5 0 ]xsh288.463 100.824 mo
288.631 113.665 li
287.881 113.675 li
287.713 100.833 li
cp
290.243 112.644 mo
288.321 118.669 li
286.243 112.696 li
cp
f
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: XBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWB+Calibri-Bold gcheck setglobal} if
1 608 3 <0001008dfffa0363050e002700b7b10102435558b10713b8029440160d1d
001e1d07280f014d07180c0d014c07100b014d07ba01570013fff0b60b01
4d13131906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119
5500183f3f1aed2b2b12392f2bed2b2b2b012f2fc41139ed3230311b4011
07280f014d07180c0d014c07100b014d07ba01570013fff0b60b014d1313
1906b8ffe0b30f014d06b8ffe8b40b0e014c06b8015bb440225119550018
3f3f1aed2b2b12392f2bed2b2b2b30315901140e0223211121321e021514
0e02232111140e0223222e02351134363321321e020363050b0e09fe5901
8d090e0b05050b0e09fe730c1f322726331e0d2d210261090e0b0504a21e
29180cfea40a18281e1e281a0bfe1e0b100b06060b100b04952c270b192a
>YQMNWB+Calibri-Bold AddT42Char 
1 6772 23 <0001003b018f0238025d000f0011b200070bb901210004002fed012fcd30
31011406232122263534363321321e0202381618fe601916161901a00c11
0c0501f73a2e2f39382e0a182800>YQMNWB+Calibri-Bold AddT42Char 
1 6526 22 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>YQMNWB+Calibri-Bold AddT42Char 
1 3658 12 <0003001bfe9303a203d3003e004e005f0100b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d3fed5d5d12393f
ed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173930311b40550f3007
0338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e5301
18530153f1cd150117150100151015021515603803f93c482a203c42cc42
020442010f00420142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d
3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d1217
393031590114062323161615140e0223222627060615141617171e031514
0e0223222e0235343e0237262635343637262635343e0233321617213216
01342623220e0215141633323e0213342627270e0315141633323e0203a2
1610691613346189542b4e150c13332ed94c77512b3a74af7572a1672f11
21301f2b2f362b232a376288522a4d21011b1115febd5049253825125047
263825133b483fb31a1f1306655c394e30140360302e183d214e79532b15
0e0d24161d2502080325435e3c4275563224405935213c373217174f2f3b
61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d3002
051323201e10323417262f00>YQMNWB+Calibri-Bold AddT42Char 
1 3384 11 <00010019fffa02980578003c0071b10102435558b31610001bb8025fb330
2a250ab8011db336471a26b8ffe8b40b0f014c26b8011fb6403048204c10
4800183f3f3f1aed2b323fed012fc433fdc433c430311bb9000a011db336
471a26b8ffe8b40b0f014c26b8011fb6403048204c104800183f3f3f1aed
2b323fed30315901140e0223222e0223220e02151533321e021514062323
11140e0223222e02351123222635343e02333335343e0233321e04029804
080a0607111922171b271a0ca3090f0a051413a30c1c322424311d0b7013
1305090f0a6f244d77512746280e090404f21d23130707080711253b2b52
0a17281d372ffd2e0a0f0a05050a0f0a02d22f371d28170a4b5b895b2e0d
0f0d1927>YQMNWB+Calibri-Bold AddT42Char 
1 5232 18 <0002007efe95040003d7002a003d0094b10102435558b221360abb026000
15002b0285400900150a363521040530b8ffe8b40b0f014c30b8014b400d
264a1b49104f39180b0f014c39b8014ab240054d00183f1aed2b3f3f3fed
2b121739012fd4ed10ed323930311bb60a363521040530b8ffe8b40b0f01
4c30b8014b400d264a1b49104f39180b0f014c39b8014ab240054d00183f
1aed2b3f3f3fed2b12173930315901140e0223222e022711140e0223222e
023511343e0233321e0215153e0333321e0205342e0223220e0207111616
33323e0204003362925e27413d3c200c1d302525301d0c0a19291f1e2919
0a274b4e532f628a5728fefa11294332193133361e35603431452c1501ed
77bf86480f1f2e1ffe5c0a100b06060b100a04de0a0f0a05050a0f0a6928
3d29144d86b277396952310f223628feda4349325166>YQMNWB+Calibri-Bold AddT42Char 
1 2022 7 <0001000cfffa03ea050e00220053b10102435558b10006b80294b3181106
12b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f1aed2b32012fc4
fdcd30311bb10612b8ffe8b40b0f014c12b8015bb4401d510c5500183f3f
1aed2b3230315901140e02232111140e0223222e02351121222e0235343e
023321321e0203ea050a0f09febc0d1e332626331e0dfebc0a0e0a05050a
0e0a0390090f0a0504a21d29190cfbed0a100a06060a100a04130c19291d
1e2a190b0b192a00>YQMNWB+Calibri-Bold AddT42Char 
1 5806 20 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>YQMNWB+Calibri-Bold AddT42Char 
1 4348 14 <0001007efffa03bb057000340061b10102435558bf003102600022000c02
600016002302b6b32d2d160ab802b7400e400016220b0528491c46114c05
4c00183f3f3f3f123939012fd41aed12392fed10fd32e430311b400b220b
0528491c46114c054c00183f3f3f3f12393930315925140e0223222e0227
0111140e0223222e023511343e0233321e021511013e0333321e02151406
070101161603bb0b1d32282933211207fed70c1d302525301d0c0c1d3025
25301d0c0108081421312625331f0c0f0ffefb012e0c0b210a0f09050409
100d01d6fe280a0f0a05050a0f0a05230a100b06060b100afcf101630c12
0a05050a0f0b0f2213fed8fe2d141d00>YQMNWB+Calibri-Bold AddT42Char 
YQMNWB+Calibri-Bold /CharStrings get begin
/g3 3 def
/g23 23 def
/g22 22 def
/g12 12 def
/g11 11 def
/g18 18 def
/g7 7 def
/g20 20 def
/g14 14 def
end
YQMNWB+Calibri-Bold /Encoding get
dup 46 /g3 put
dup 47 /g23 put
dup 48 /g22 put
dup 49 /g12 put
dup 50 /g11 put
dup 51 /g18 put
dup 52 /g7 put
dup 53 /g20 put
dup 54 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWB+Calibri-Bold*1 [33{/.notdef}rp /g5 /g10 /g8 /g15 /g1 /g6 /g9 /g16 /g19 /g13 /g17 /g2 /g21 /g3 /g23 /g22 /g12 /g11 /g18 /g7 /g20 /g14 201{/.notdef}rp]YQMNWB+Calibri-Bold nfYQMNWB+Calibri-Bold*1 [15 0 0 -15 0 0 ]msf200.301 20.0144 mo(.*\(")[6.87448 3.61954 7.99954 0 ]xsh226.301 20.0144 mo(/)sh230.926 20.0144 mo(-0\(*\(1%2+\)%&3"'*2*'%4#56)[5.25 7.99503 7.99504 3.63004 7.99504 7.12497 3.37497 4.52991 8.12991 5.36996 3.37497 7.12509 7.99503 7.50009 6.255 3.63004 4.75491 3.63004 6.25497 3.37497 6.23993 7.38007 6.00003 0 ]xsh389.031 5.3118 mo
573.303 5.3118 li
573.303 205.735 li
389.031 205.735 li
cp
.0806592 .0636606 .0646372 0 cmyk
f
.75 lw
[6 2.25 ] 0 dsh
389.031 5.3118 mo
573.303 5.3118 li
573.303 205.735 li
389.031 205.735 li
cp
.75021 .679683 .670222 .90164 cmyk
@
400.671 132.245 mo
400.671 124.748 406.748 118.671 414.244 118.671 cv
546.747 118.671 li
554.243 118.671 560.32 124.748 560.32 132.245 cv
560.32 186.537 li
560.32 194.033 554.243 200.111 546.747 200.111 cv
414.244 200.111 li
406.748 200.111 400.671 194.033 400.671 186.537 cv
cp
0 0 0 0 cmyk
f
[] 0 dsh
400.671 132.245 mo
400.671 124.748 406.748 118.671 414.244 118.671 cv
546.747 118.671 li
554.243 118.671 560.32 124.748 560.32 132.245 cv
560.32 186.537 li
560.32 194.033 554.243 200.11 546.747 200.11 cv
414.244 200.11 li
406.748 200.11 400.671 194.033 400.671 186.537 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
YQMNVZ+Calibri-Bold*1 [11 0 0 -11 0 0 ]msf406.884 132.574 mo(4#$#&%/#-)[6.74951 5.25366 5.62762 5.25366 3.74655 5.12164 3.62561 5.25366 0 ]xsh%ADOBeginSubsetFont: ZBAAAA+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.348 1.262 1.039
 256 array 0 1 255 {1 index exch /.notdef put} for  /ZBAAAA+Calibri-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006886670
676d000000000000074400000913676c79660000000000002854000015b8
686561640000000000001058000000366868656100000000000010900000
0024686d747800000000000010b40000004c6c6f63610000000000001100
000000286d6178700000000000001128000000206e616d65000000000000
114800000028707265700000000000001170000016e16764697200000000
00000000000000000000079e0000fe930000000000000000000000810081
009c00ab00b500ba00c100ca00d300f3010a0060008500bf00e300ea00f2
00fb010001070115011c0129000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe83056d
000d03c0000600170000fffaffe9fea9ffe90000050e000600170000fffa
ffe9fe93050e00170426000600170000fffaffe9ff12ffed050e00170426
000600170000fffaffe9fe93feb8fece060b0010050e0006001002cbfffa
fff001edfffa023f00060010ff36fffafff00287000600100000fffafff0
079efeaffe9f00000000000000000000000000700072007500780079007a
007b007d007e007f008300860087008800890085007f0086008b008c008d
008e008f0090009100920093009400950096009700980099009a009b009c
009d009e009f009200930094009b009c009e009e00960099009a009d009e
00a200a600a900ac00a200a300a400a500a700a800a900aa00ab00ac00ae
00a300a500a700a800aa00ab00ac00ad00ae00a000a100a300a600a700a9
00aa00ac00ad00af00af00b000b100b200b300b400b500af00af00b000b2
00b300b400b500b800c000b600b700b800b900ba00bb00bc00bd00be00bf
00c000c100c200b900ba00bc00bd00bf00c000c100c200b600b700b800b9
00ba00bb00bc00bd00be00bf00c000c100c200c000c100c200c300c400c5
00c600c700c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c7
00c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c500c800c900ca00cb00ce00cf00d000d1
00d200d300d400d500d600d700d900db00de00df00e000e200e300ec00d0
00d100d200d300d400d500d600d700d800d900da00db00dd00de00df00e0
00e100e300e500e900ec00ed00d100d300d400d500d800d900da00dc00e0
00e100e800d000d100d400d600e000e4010800f5010200fb00ff0108008f
009000960092009300990090009100970098009a009d00a400a600a700a8
00a900af009a00a200a300a700a900aa00ab00ac00ad00b000ad009b00aa
00ab00ad00b0009a00aa00ac00ad00ae00af00b100b900bb00bc00bd00be
00c100c200c300c400c500c600c700c800c900ca00cb00ce00b300b400b5
00b600b700b800bc00c200c500c800ca00cb00cd00ce00cf00d000c700b7
00b800b900bb00bc00be00c600c700c800c900cb00cf00d000b200b600b7
00c200c400c500c600c700cb00cc00cd00ce00cf00d000d100d400d500d7
00d800d900da00db00dc00de00df00e000e200e300e500e600d100d300d6
00d700d800da00db00dc00dd00de00df00e000e100e200e300e400e500d1
00d200d400d500da00db00dd00de00df00e000e100e200e600d200d300d4
00d700d800dd00de00e000e100e200e300e400e500e600d200da00e100e9
00ea00ec00e800e900ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e7
00e900ea00ec00ed00ee00ef00f500ee00ef00f000f100f200f300f400f5
00f600ee00f000f200ef00f000f100f200f300f400f500f600ee00ef00f0
00f100f200f300f400f500f600f700f700f800f900fa00fb00fc00fd00f7
00f800f900fa00fb00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff
010001010102010300fe010001010102010300fe00ff0100010101020103
01020103010401050106010701080109010a010c010d010e010f01100107
010401050106010701080109010a010b010d010e010f0110011101040105
0106010701080109010a010b010c010d010e010f01100111010401050106
01070109010e010f011201130114011501170118011a011b011c011d011e
011f01210122011201130114011501170119011b011c011d011e01200121
0123012401250113011401150116011701180119011a011b011c011d011f
01200117011c011d011e012001210129013001770129012b012e012f0130
01310134013501370139012b012d013001320134013a012e01300134013a
014200500062006c00fa05e802cc0114011400a000b10000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000005aa001500a0fff8ff42fea2
fdbc03b6015401cc0108010e00ff00f5006e014000a0055e006b0570fff6
0122fff10547ffec04faffec0131fff4000a03a0036600b400e1044c007c
40465f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645444342
41403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d
0b0a090807060504030201002c4523466020b02660b004262348482d2c45
2346236120b02661b004262348482d2c45234660b0206120b04660b00426
2348482d2c4523462361b0206020b02661b02061b004262348482d2c4523
4660b0406120b06660b004262348482d2c4523462361b0406020b02661b0
4061b004262348482d2c0110203c003c2d2c20452320b0cd442320b8015a
51582320b08d44235920b0ed51582320b04d44235920b0042651582320b0
0d44235921212d2c20204518684420b001602045b04676688a4560442d2c
01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e
01b0282370b10228453ab10200080d2d2c2045b00325456164b050515845
441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b0
4061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c
8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23
442d2c4b525845441b2121592d2c01b005251023208af500b0016023edec
2d2c01b005251023208af500b0016123edec2d2c01b0062510f500edec2d
2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b00743b0
06430b2d2c21210c6423648bb84000622d2c21b08051580c6423648bb820
00621bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb2
00802f2b59b002602d2c0c6423648bb84000626023212d2c452345602345
6023456023766818b08062202d2cb00426b00426b00425b0042545234520
b003266062636820b0032661658a2344442d2c2045b0005458b040442045
b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b0
2f2370b01423421b2121592d2c4b515820b0032545695358441b2121591b
2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45232045
8a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333003400
5944442d2cb0164358b00326458a586466b01f601b64b020606620581b21
b04059b001615923586559b02923442310b029e01b2121212121592d2cb0
164358b004254564b020606620581b21b04059b0016123586559b0292344
b00425b00725082058021b0359b0052510b004252046b0042523423cb007
2510b006252046b00425b0016023423c2058011b0059b0052510b00425b0
29e0b0072510b00625b029e0b00425b00725082058021b0359b00425b003
254348b00625b00325b0016043481b2159212121212121212d2cb0164358
b004254564b020606620581b21b04059b0016123581b6559b0292344b005
25b00825082058021b0359b0042510b005252046b0042523423cb00425b0
072508b0072510b006252046b00425b0016023423c2058011b0059b00425
10b00525b029e0b02920456544b0072510b00625b029e0b00525b0082508
2058021b0359b00525b003254348b00425b0072508b00625b00325b00160
43481b2159212121212121212d2c02b00425202046b004252342b0052508
b003254548212121212d2c02b0032520b0042508b0022543482121212d2c
452320451820b00050205823652359236820b040505821b0405923586559
8a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60
441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458381b21
21592d2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21
2121592d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b
212121592d2c208a08234b538a4b515a5823381b2121592d2c0020b20040
0325b0062649618b3812342d2c014623466023466123201020468a61b8ff
80628ab140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b
52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851b14001
88535a58b910000020885458b202010243604259b12401885158b9200000
40885458b2020202436042b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
0243604259b94000020063b80400885458b202400243604259595959592d
2c451868234b51582320452064b04050587c59688a6059442d2cb00016b0
0225b0022501b001233e00b002233eb10102060cb00a236542b00b234201
b001233f00b002233fb10102060cb006236542b0072342b00116012d2c20
b82000628a6023622d2cb0072558001b0159b0042510b00325b0022520b8
ffff545821cd1bed5921b006255cb006255a58b0092b5920b005254ab004
2547b004254760b0062547b0806361b00225b0005558b00325b007254963
59b0082558001b0159b00425b0062549b009255cb009255a58b0092b59b0
072546b0806361b0032520b0005558631b2159612320b0005558b080631b
21b08059b0592bb006255c586959b00425202010b00048233ab006265800
1b0159b0052658b003252f598a12233221212d2cb00625b00a2587b00625
b009254ab0005358b00625b00a251bb00925b0072559b00225b00225070c
b005256323b00625636020b94000040063535821b00426b00426b00a1bb9
4000040063655158b0042665b0042665b00a1bb00426b00426b000b00325
b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525075959
20b0005558b00525b0052587b00725b007250bb0092510b00b25b0092620
b8ffff545821cd1bed59b00525b0052507b00825b00b254923b00625b006
2587b00a2510b00b25c15920b00051b800522378b00161b00225b00725b0
072507b00a25b00d254961b08062b00525b005250bb00a252338b00625b0
062587b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c
2549b0032554b8ffa723792121212121212121212121212d2c23b0005458
b9400000001bb900004000598ab0005458b9400000001bb90000400059b0
5b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a08
0d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0042608
0db00426b00426080db05b2b2d00000100000006333390900fbf5f0f3cf5
0019080000000000bbeb7ccc00000000d5968a63fbdafd350a1a08500001
0009000200000000000000010000079efdda00000aa0fbdafa860a1a0001
00000000000000000000000000000013040e000001cf000004d90017043c
004f03e7008d03c8003f03f30047035900480407004a03cb001b01f7006b
01f7007e044b007e044d004802d8007e0331004902c60017044b007903ca
00160000009e009e014b01dd02750330041b04b0057b068006d40716079c
080e088c095e09f40a6f0adc000100000013044200170110000800020010
002f006000000cf8013f0004000100000001001200010000000000060013
0000524144434a4b2b43616c696272692d426f6c64000000b20903eb411d
03430001003b03410001008b0330009b033000020004032f0064032f0074
032f00d4032f0004032d032a0038001f032c032a0038001f032b032ab238
1f24bf032a00a4032a00b4032a0003ffc0032ab2232746b9ffc0032ab21c
20464163033c0038033b0055033a00380339005503380038033700550336
003803350055033400380333005503230038032200550321003803200055
002b03400001006b03400001033d003803220055006b033b000100240331
00540331000200240331003403310054033100f403310004001403270044
032700e40327000300040327002403270044032700740327008403270094
032700d4032700f40327000800a403220001003403200001001403200024
032000440320005403200074032000840320000602f9b21e1d1fb802f8b2
1e2b1fb802f7b21e2c1fb802f6b21e2c1fb802f5b21e2c1fb802f4b21e2b
1fb802f3b21e2c1fb802f2b21e2c1fb802f1b21e2c1fb802f0b21e2c1fb8
02efb21e2c1fb802eeb21e2b1fb802edb21e2b1fb802ecb21e2c1fb802eb
b21e2c1fb802eab21e2c1fb802e9b21e2c1fb802e8b21e2c1fb802e7b21e
2c1fb802e6b21e2c1fb802e5b21e2c1fb802e4b21e091fb802e3b21e2c1f
b802e2b21e2c1fb802e1b21d121fb802e0b21d191fb802dfb21d2f1fb802
deb21d2f1fb802ddb21d2f1fb802dcb21d2f1fb802dbb21d191fb802dab2
1d2f1fb802d9b21d2f1fb802d8b21d2f1fb802d7b21d2f1fb802d6b21d2f
1fb802d5b21d2f1fb802d4b21d2f1fb802d3b21d2f1fb802d2b21d2f1fb8
02d1b21d2f1fb802d0b21d2f1fb802cfb21d2f1fb802ceb21d121fb802cd
b21d121fb802ccb21d121fb802cbb21d121fb802cab21d191fb802c9b21d
2f1fb802c8b21d2f1fb802c7b21d2f1fb802c6b21d2f1fb802c5b21d2f1f
b802c4b21d2f1fb802c3b21d2f1fb802c2b21d2f1fb802c1b21d2f1fb802
c0b21d2f1fb802bfb21d121fb802beb21d121fb802bdb21d2f1fb802bcb2
1d2f1fb802bbb21d2f1fb802bab21d2f1fb802b9b21d2f1fb802b8b21d2f
1fb802b7b21d2f1fb802b6b21d2f1fb802b5b21d2f1fb802b4b21d2f1fb8
02b3b21d2f1fb802b2b21d2f1fb802b1b21c321fb802b0b21c321fb802af
b21c331fb802aeb21c331fb802adb21c331fb802acb21c331fb802abb21c
331fb802aab21c311fb802a9b21c311fb802a8b21c321fb802a7b21c321f
b802a6b21c321fb802a5b21c321fb802a4b21c321fb802a3b21c321fb802
a2b21c331fb802a1b21c331fb802a0b21c331fb8029fb21c331fb8029eb2
1c331fb8029db21c331fb8029cb21c311fb8029bb21c311fb8029ab21c32
1fb80299b21c321fb80298b21c321fb80297b21c321fb80296b21c321fb8
0295b21c331fb80294b21c331fb80293b21c331fb80292b21c331fb80291
b21c331fb80290b21c331fb8028fb21c331fb8028eb21c311fb8028db21c
321fb8028cb21c321fb8028bb21c321fb8028ab21c321fb80289b21c321f
b80288b21c331fb80287b21c331fb80286b21c331fb80285b21c331fb802
84b21c331fb80283b21c331fb80282b21b341fb80281b21b341fb80280b2
1b341fb8027fb21b341fb8027eb21b341fb8027db21b341fb8027cb21b34
1fb8027bb21b341fb8027ab21b341fb80279b21b341fb80278b21b341fb8
0277b21b341fb80276b21b341fb80275b21b341fb80274b21b341fb80273
b21b341fb80272b21b341fb80271b21b341fb80270b21b341fb8026fb21a
351fb8026eb21a351fb8026db21a351fb8026cb21a351fb8026bb21a351f
b8026ab21a351fb80269b21a351fb80268b21a351fb80267b21a351fb802
66b21a351fb80265b21a351fb80264b21a351fb80263b21a351fb80262b2
1a351fb80261b21a351fb80260b21a351fb8025fb21a351fb8025eb21a35
1fb8025db21a351fb8025cb21a351fb8025bb21a351fb8025ab21a351fb8
0259b219371fb80258b219371fb80257b219371fb80256b219371fb80255
b219371fb80254b219371fb80253b219371fb80252b219371fb80251b219
371fb80250b219371fb8024fb219371fb8024eb219371fb8024db219371f
b8024cb219371fb8024bb219371fb8024ab219371fb80249b219371fb802
48b219371fb80247b219371fb80246b219371fb80245b219371fb80244b2
19371fb80243b219371fb80242b219371fb80241b219371fb80240b21937
1fb8023fb219371fb8023eb219371fb8023db219371fb8023cb219371fb8
023bb219371fb8023ab219371fb80239b218391fb80238b218391fb80237
b218391fb80236b218391fb80235b218391fb80234b218391fb80233b218
391fb80232b218391fb80231b218391fb80230b218391fb80301b2182e1f
b8022fb218391fb8022eb218391fb8022db218391fb8022cb218391fb802
2bb218391fb8022ab218391fb80229b218391fb80228b218391fb80227b2
18391fb80226b218391fb80225b2173b1fb80224b2173b1fb80223b21732
1fb80222b2173a1fb80221b2173b1fb80220b2173b1fb8021fb2173b1fb8
021eb2173b1fb8021db2173b1fb8021cb2173b1fb8021bb2173b1fb8021a
b2173b1fb80219b2173b1fb80218b2173b1fb80217b2173b1fb80216b217
3b1fb80215b217321fb80214b2173a1fb80213b2173b1fb80212b2173b1f
b80211b2173b1fb80210b2173b1fb8020fb2173b1fb8020eb2173b1fb802
0db2173b1fb8020cb2173b1fb8020bb2173b1fb8020ab2173b1fb80209b2
17321fb80208b217321fb80207b2173b1fb80206b2173b1fb80205b2173b
1fb80204b2173b1fb80203b2173b1fb80202b2173b1fb80201b2173b1fb8
0200b2173b1fb801ffb2173b1fb801feb2173b1fb801fdb2173b1fb801fc
b2173b1fb801fbb2173b1fb801fab2173b1fb801f9b2173b1fb801f8b217
3b1fb801f7b217321fb801f6b2173a1fb801f5b2173b1fb801f4b2173b1f
b801f3b2173b1fb801f2b2173b1fb801f1b2173b1fb801f0b2173b1fb801
efb2173b1fb801eeb2173b1fb801edb2173b1fb801ecb2173b1fb801ebb2
173b1fb801eab2173b1fb801e9b2173b1fb801e8b2173b1fb801e7b21732
1fb801e6b216231fb801e5b216231fb801e4b216371fb801e3b216371fb8
01e2b216381fb801e1b216381fb801e0b216431fb801dfb216441fb801de
b216441fb801ddb216441fb801dcb216451fb801dbb216461fb801dab216
461fb801d9b216461fb801d8b216231fb801d7b216231fb801d6b216381f
b801d5b216431fb801d4b216431fb801d3b216431fb801d2b216441fb801
d1b216461fb801d0b216461fb801cfb216461fb801ceb216461fb801cdb2
16461fb801ccb216461fb801cbb216431fb801cab216231fb801c9b21623
1fb801c8b216371fb801c7b216371fb801c6b216381fb801c5b216421fb8
01c4b216431fb801c3b216441fb801c2b216451fb801c1b216461fb801c0
b216461fb801bfb216461fb801beb216461fb801bdb216461fb801bcb216
461fb801bbb216461fb801bab216371fb801b9b216381fb801b8b216421f
b801b7b216431fb801b6b216431fb801b5b216431fb801b4b216441fb801
b3b216441fb801b2b216441fb801b1b216451fb801b0b216451fb801afb2
16451fb801aeb216461fb801adb216461fb801acb216461fb801abb21646
1fb801aab216461fb801a9b215341fb801a8b215411fb801a7b215411fb8
01a6b2154d1fb801a5b2154e1fb801a4b2154f1fb801a3b215521fb801a2
b215401fb801a1b2154d1fb801a0b2154e1fb8019fb2154f1fb8019eb215
521fb8019db2154d1fb8019cb215401fb8019bb2154d1fb8019ab2154e1f
b80199b2154e1fb80198b2154f1fb80197b2154f1fb80196b215501fb801
95b215521fb80194b215521fb80193b215521fb80192b215411fb80191b2
154f1fb80190b215501fb8018fb215501fb8018eb215511fb8018db21552
1fb8018cb215521fb8018bb215521fb8018ab214581fb80189b214591fb8
0188b2145c1fb80187b2145d1fb80186b2144a1fb80185b2145b1fb80184
b2145c1fb80183b214591fb80182b2145d1fb8018140af145d1ff00f451f
ef0e481fe00c4e1fc20c4e1fc10c4e1fc00c4e1fbf0b561fb20b561fb10b
561fb00b561faf0b561fae0b561fad0b561fac0b561fab0b561faa0b561f
a90b561fa80b561fa70b561fa60b561fa50b561fa40b561fa30b561fa20b
561fa10b561fa00b561f9f0b561f9e0a681f9a0a681f990a681f980a681f
970a681f960a681f950a681f940a681f930a681f920a681f910a681f9009
681f8f09681f8e09681f8d09681f8c09681f410902fc02fa0056001f02fb
02fa0068001f017fb213321fb8017eb212371fb80174b212371fb80173b2
11421fb80172b211421fb80171b211421fb80170b211421fb8016fb21142
1fb8016eb211421fb8016db211421fb8016cb211421fb8016bb211421fb8
016ab211421fb8013cb211421fb8013bb210421fb8013ab210421fb80139
b210421fb80138b210421fb80137b210421fb80136b210421fb80135b210
421fb80134b210421fb80133b210421fb80132b20f451fb80131b20f451f
b80130b20f451fb80112b20f451fb80111b20f451fb80110b20f451fb801
0fb20f451fb8010eb20f451fb8010db20e481fb8010cb20e481fb8010bb2
0e481fb8010ab20e481fb80109b20e481fb80108b20e481fb80107b20d4a
1fb80106405b0d4a1fee0d4a1fed0d4a1fec0d4a1feb0d4a1fea0d4a1fe9
0c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc0c4e1fdb0c4e1fda0c4e1fd90b56
1fd80b561fd70b561fbe0b561fbd0b561fbc0b561fbb0b561fba0b561f9d
0a681f9c0a681fb80180b213321fb8017ab211401fb80179b211421fb801
78b211421fb80177b211421fb80176b211421fb80175b211421fb80143b2
11421fb80142b210421fb80141b210421fb80140b210421fb8013fb21042
1fb8013eb210421fb8013db20f451fb80115b20f451fb80114b20f451fb8
0113b20f451fb903030302b2401fa4be030200b4030200c4030200030300
b213321fb8017bb213321fb80153b212371fb80152b211401fb80151b211
401fb80150b211401fb8014fb211401fb8014eb211401fb8014db211401f
b8014cb211401fb8014bb211401fb8014ab211401fb80149b211401fb801
48b211401fb80147b211401fb80146b211401fb80145b211401fb80144b2
11401fb80122b211401fb80121b210421fb80120b210421fb8011fb21042
1fb8011eb210421fb8011db210421fb8011cb210421fb8011bb210421fb8
011ab210421fb80119b210421fb80118b20f451fb80117b20f451fb80116
409b0f451ffd0f451ffc0f451ffb0f451ffa0f451ff90e481ff80e481ff7
0e481ff60e481ff50e481ff40e481ff30d4a1ff20d4a1ff10d4a1fe70d4a
1fe60d4a1fe50d4a1fe40d4a1fe30d4a1fe20d4a1fe10c4e1fcd0c4e1fcc
0c4e1fcb0c4e1fca0c4e1fc90c4e1fc80c4e1fc70c4e1fc60c4e1fc50c4e
1fc40c4e1fc30c4e1fb80c4e1fb70b561fb60b561fb50b561fb40b561fb3
0b561f9b0a681fb802fdb212371fb8017db212371fb8017cb212371fb801
69b2112e1fb80168b2112e1fb80167b211401fb80166b211401fb80165b2
11401fb80164b211401fb80163b211401fb80162b211401fb80161b21140
1fb80160b211401fb8015fb211401fb8015eb211401fb8015db211401fb8
015cb211401fb8015bb211401fb8015ab211401fb80159b211401fb80158
b211401fb80157b211401fb80156b211401fb80155b211401fb80154b211
401fb8012fb211401fb8012eb210421fb8012db210421fb8012cb210421f
b8012bb210421fb8012ab210421fb80129b210421fb80128b210421fb801
27b210421fb80126b210421fb80125b20f451fb80124b20f451fb80123b2
0f451fb80105b20f451fb80104b20f451fb80103b20f451fb80102b20f45
1fb80101b20e481fb8010040a20e481fff0e481ffe0e481fe80c4e1fd60c
4e1fd50c4e1fd40c4e1fd30c4e1fd20c4e1fd10c4e1fd00c4e1fcf0c4e1f
ce0b561fb90b561f8503251f84032e1f83012e1f8248805581ab80557f48
7d557eab7d550b7d3b7d4b7d030b7d1b7d4b7d7b7dab7ddb7d067c487a55
7bab7a55047a147a020a7948775578ab77550b77010c764875555475e475
f4750314755475647574759475d475e47507a475b475c47503b8ffc04012
75383b46807590750214757475020075010fb8ffc04021750b0e46744872
5573ab725504723472023bf47201e07201023072015072607202b8ffc0b3
72242846b8ffc0403572161a461072307240720371486f5570ab6f554f6f
6f6f7f6f9f6fbf6f057f6f8f6f02af6fbf6f02406f090d466e486d55df6d
0100bc02ff001002ff00c002ffb2030a6fbb02fe000100ef02fe40ff016b
032e1f6a03251f692e675568ab6755662e645565ab6455632e6255612e60
555f2e5d555eab5d555c2e5a555bab5a55592e58555703251f562e545555
ab5455532e515552ab51554f2e4e554e03251f4d2e4b554cab4b554a2e48
5549ab4855504801472e46554503361f001f01001e01001e701e801ef01e
040b601d701d02701de01df01d03701cf01c027f1b010f1a7f1a8f1a030f
1a8f1a020f1a8f1a020f191f198f199f19af19050f198f199f19030c7012
801202701180110230114011d011e011040011a011020f8f0f9f0faf0f03
4f0f5f0fef0fff0f04af0f01af0ebf0ecf0e034f0e5f0e6f0e030f0eaf0e
bf0e0310400e2e31460f0d1f0d40472f0d033c2f0d3f0d4f0d038f0d0140
0d2e3246400d2427463f0c4f0c5f0c039f0c01400c262946ef0aff0a0240
0a242746ef09ff0902ff09010003012001010001100120010308b8ffc0b4
01151f4603bd0100010000050001019000542b4bb807ff524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59b1010243
54b0144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d4259
4bb0805358b20340401d42594bb0ff5358b20300001d42592b5e73757373
742b732b73742b2b73745e732b5e7374757374755e73747573015e737473
7475757473745e737473002b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b732b2b73755f75755e73
2b2b2b5e7373732b7374752b5e732b2b5e732b2b73742b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b00
73747373747374732b73742b2b2b2b2b2b2b2b2b732b2b2b73737373185f
5e00000000>
[5561 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 1258 5 <0001003fffe9038c0525004900b9b10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1aed2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2fed
30311bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f014c
3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1aed
2b3f123939ed2b1139392f2f10ed10ed30315901140e0223222e0435343e
0233321e0233323e0235342e0635343e0233321e0615140e0223222e0223
220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49304c
351c304d6268624d3045759f592e5c503e1407050203070d0b0b30465c37
2b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b212821
172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a0c1c
211b1525341d2b3f312b303d5573>ZBAAAA+Calibri-Bold AddT42Char 
1 2102 7 <00010048ffea032103d60035009bb10102435558b21c0027be0274000e00
18011f001f0024ffe8b40b0f014c24b8011fb2134a04ba01480031ffc040
0b0b014d312c180b0f014c2cb80146b240094d00183f1afd2bd42bed3ffd
2bd4ed012fedc43230311bbc0018011f001f0024ffe8b40b0f014c24b801
1fb2134a04ba01480031ffc0400b0b014d312c180b0f014c2cb80146b240
094d00183f1afd2bd42bed3ffd2bd4ed30315925140e0623222e0235343e
0233321e0615140623222e0223220615141e0233323e0233321e02032103
0507183a4a572e679f6c374378a462284d43351609050314101126344832
62681a334d33344b38260d090c0704b01a23180f17211a10407db47486c3
803e0e181e160f1823193a2f1c221c9792486e4a251f261f0a1b2a00>ZBAAAA+Calibri-Bold AddT42Char 
1 2400 8 <0002004affe903b603d7002b00340103b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d01
2fed32dded12392f30311b4009032c132c021b2cc304b8ffc040170d014d
00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ff
e840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d
09f9401c4d00183f1afd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed
5e5d3031590114062321141e0233323e0233321e0215140e0623222e0235
343e0233321e021527362623220e020703b62924fde11b3b5d4142644930
0f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b5f30
472f190201fa2e2c395d412213171307122119161f160f0e1817113c7aba
7d77bf85464275a05e206a79243d532f>ZBAAAA+Calibri-Bold AddT42Char 
1 3628 12 <0001007efffa03d203d70032007fb10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1aed2b2b012fd4ed10ed393031
1bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a19
2449194c054c00183f3f3f12393f1aed2b2b30315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021515363633
321e021503d20c1c312425311c0c132439263062350c1d302525301d0c0a
1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a351d46
43fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61>ZBAAAA+Calibri-Bold AddT42Char 
1 1632 6 <00020047ffe9037603d7003300400127b10102435558b2091734b8025bb4
002727003ab80245401011031701f3170117b80c3401fc340134b8ffc040
090c0d014c34342e412ab80118401be02201037d228d2202402250226022
030f221f22020c042222041db8ffe0400e0c0f014c1d1810014d1dfa2e4a
3db8ffe8400910014d3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f
5e5d5d5d5f5ded1112392f2b5d71ed5d71012fedc4392f10ed323930311b
400f031701f3170117b80c3401fc340134b8ffc040090c0d014c34342e41
2ab80118401be02201037d228d2202402250226022030f221f22020c0422
22041db8ffe0400e0c0f014c1d1810014d1dfa2e4a3db8ffe8400910014d
3de4400c4d0400182f3f1aed2b3fed2b2b12392f5f5e5d5d5d5f5ded1112
392f2b5d71ed5d7130315925140606232226263535060623222e0235343e
02333335342e0223220e0223222e0235343e0433321e02150723220e0215
1416333236370376142b2a2d2911378d56477757303d79b4775711274130
3f634c33100b110b060a1c465e6f3b6995602cf7603d563619473f35592e
1f0e100707100e473b4225496c484e734b24362a3f2a141c221c0e1a2617
1f241d231e132955865cda122433213840363400>ZBAAAA+Calibri-Bold AddT42Char 
1 4124 14 <0001007efffa02bb03d70033006eb10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1aed2b5f5e5d012fc4ed3930311bb9000affe8
b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1aed
2b30315901140e0223222e0223220e020711140e0223222e023511343e02
33321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c0c1d
302525301d0c0a1a291f202a170a233e38381c0d1e20180b050402034b24
2e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a0f0a
6f3241260f0307090a0c152a>ZBAAAA+Calibri-Bold AddT42Char 
1 3328 10 <0002006bfffa018d054e001500210043b10102435558bf001602bf001c00
150260000a001f017bb540191049054c00183f3fd61aed012fedd4ed3031
1bb9001f017bb540191049054c00183f3fd61aed30315925140e0223222e
023511343e0233321e0215131406232226353436333216017a0c1d302525
301d0c0c1d302525301d0c133e54553b3d55543c220a0f0a05050a0f0a03
7a0a0f0b06060b0f0a01304c3a38494c3b39>ZBAAAA+Calibri-Bold AddT42Char 
1 3896 13 <00020048ffe9040403d700130027006fb10102435558bf00140275000000
1e0275000a0019ffe8b40b0f014c19b8011a40090f4a23180b0f014c23b8
011cb240054d00183f1aed2b3fed2b012fedd4ed30311bb90019ffe8b40b
0f014c19b8011a40090f4a23180b0f014c23b8011cb240054d00183f1aed
2b3fed2b30315901140e0223222e0235343e0233321e0205342e0223220e
0215141e0233323e0204043c7ab87b77b074383d7ab77b78b07338fefd15
32533f3854361b1631543e3954361a01e972bc884a427eb87672bd874a41
7eb881426f522e294f6f47426f522d294e6f>ZBAAAA+Calibri-Bold AddT42Char 
1 4376 15 <00010049ffe902f203d7004900e7b10102435558b90041022eb524322432
0c1bb802444022000c042e012ee4370b0a010ae71137400b014d10372037
020337113711160f3c013cb8fff0401b0b0f014c3ce4411b05294a16100c
0d014c001601100416f240054d00183f1aed5f5e5d2b3f123939ed2b5d11
39392f2f5f5d2b10ed5d10ed5d012fd4ed1239392f2fed30311b4020042e
012ee4370b0a010ae71137400b014d10372037020337113711160f3c013c
b8fff0401b0b0f014c3ce4411b05294a16100c0d014c001601100416f240
054d00183f1aed5f5e5d2b3f123939ed2b5d1139392f2f5f5d2b10ed5d10
ed5d30315901140e0223222e0435343e0233321e0233323e0235342e0635
343e0233321e0615140e0223222e0223220e0215141e0602f239688e5332
5b4830160c04080c090b2b40553622352714253d4d514d3d25325e87542a
4f402c1308040303070c080926394b3022322010263e4f514f3e26011e4c
744e270f1718152d2c1d231507191e1a0e1a281a1e2b201c222c405a3f40
6b4c2a0c12150f0f151f171b2214071518150e1a23141f2a201c212c4059
>ZBAAAA+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3031011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>ZBAAAA+Calibri-Bold AddT42Char 
ZBAAAA+Calibri-Bold /CharStrings get begin
/g5 5 def
/g7 7 def
/g8 8 def
/g12 12 def
/g6 6 def
/g14 14 def
/g10 10 def
/g13 13 def
/g15 15 def
end
ZBAAAA+Calibri-Bold /Encoding get
dup 33 /g5 put
dup 34 /g7 put
dup 35 /g8 put
dup 36 /g12 put
dup 37 /g6 put
dup 38 /g14 put
dup 39 /g10 put
dup 40 /g13 put
dup 41 /g15 put
pop
end
%ADOEndSubsetFont
/YQMNWD+Calibri-Bold /ZBAAAA+Calibri-Bold findfont ct_VMDictPut/YQMNWD+Calibri-Bold*1 [33{/.notdef}rp /g5 /g7 /g8 /g12 /g6 /g14 /g10 /g13 /g15 214{/.notdef}rp]YQMNWD+Calibri-Bold nfYQMNWD+Calibri-Bold*1 [10 0 0 -10 0 0 ]msf455.384 132.574 mo(!"#$%&'\(\))[4.75006 4.12 5.00006 5.37003 4.87003 3.49994 2.50003 5.36993 0 ]xshYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf409.227 184.654 mo(DD)[5.5 0 ]xsh400.671 41.6867 mo
400.671 35.1873 405.94 29.9185 412.439 29.9185 cv
548.552 29.9185 li
555.051 29.9185 560.32 35.1873 560.32 41.6867 cv
560.32 88.7576 li
560.32 95.257 555.051 100.526 548.552 100.526 cv
412.439 100.526 li
405.94 100.526 400.671 95.257 400.671 88.7576 cv
cp
0 0 0 0 cmyk
f
400.671 41.6867 mo
400.671 35.1873 405.94 29.9185 412.439 29.9185 cv
548.552 29.9185 li
555.051 29.9185 560.32 35.1873 560.32 41.6867 cv
560.32 88.7577 li
560.32 95.257 555.051 100.526 548.552 100.526 cv
412.439 100.526 li
405.94 100.526 400.671 95.257 400.671 88.7577 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
%ADOBeginSubsetFont: VBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNVZ+Calibri-Bold gcheck setglobal} if
1 3688 12 <00010019fffa02980578003c0071b10102435558b31610001bb8025fb330
2a250ab8011db336471a26b8ffe8b40b0f014c26b8011fb6403048204c10
4800183f3f3f1aed2b323fed012fc433fdc433c430311bb9000a011db336
471a26b8ffe8b40b0f014c26b8011fb6403048204c104800183f3f3f1aed
2b323fed30315901140e0223222e0223220e02151533321e021514062323
11140e0223222e02351123222635343e02333335343e0233321e04029804
080a0607111922171b271a0ca3090f0a051413a30c1c322424311d0b7013
1305090f0a6f244d77512746280e090404f21d23130707080711253b2b52
0a17281d372ffd2e0a0f0a05050a0f0a02d22f371d28170a4b5b895b2e0d
0f0d1927>YQMNVZ+Calibri-Bold AddT42Char 
1 6298 22 <00010020fffa038d03c6002f0085b10102435558bc0022028a0018002402
2a40092e182e182e00170b0cb80261400d0016010e03160b2f0023230b0a
b802b5400e00400b2949230b111d49114c054c00183f3f3f1239393f0119
2f1a18dded1239192f12391810dd5f5e5ded12391239392f2f10ed10ed30
311b400b2949230b111d49114c054c00183f3f3f1239393f30315925160e
0223222e022703030e0323222e023713032626363633321e021713133e03
33321616060703038508011c3a302d371f0f04a5a5040e1d342a2c341801
09f7e409011a39312c351e0e059f9e030c1a2d272c3517010bde3411160e
0503090d0a013dfec30a0d0903050e161101b7019c12190e0603060d0afe
d6012a080c0804040e1914fe6b00>YQMNVZ+Calibri-Bold AddT42Char 
YQMNVZ+Calibri-Bold /CharStrings get begin
/g12 12 def
/g22 22 def
end
YQMNVZ+Calibri-Bold /Encoding get
dup 55 /g12 put
dup 56 /g22 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNVZ+Calibri-Bold*1 [33{/.notdef}rp /g6 /g9 /g11 /g15 /g8 /g18 /g13 /g16 /g19 /g5 /g23 /g17 /g10 /g1 /g20 /g2 /g21 /g4 /g14 /g3 /g7 /g24 /g12 /g22 199{/.notdef}rp]YQMNVZ+Calibri-Bold nfYQMNVZ+Calibri-Bold*1 [11 0 0 -11 0 0 ]msf408.568 41.3744 mo(*&#7'8)[5.62537 3.75534 5.25146 3.37033 2.62244 0 ]xsh%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 11072 34 <00010022fffa037b03bc002c010db0852b58b90023fff840170b0c014c1f
080b0c014c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b3
0b014d14b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8ff
f040370b014d37110126110127100128050122280b014d3d220124220121
280b014d3f210124210120280b014d3d2001242001270f0176210121b8ff
d04009111548212013014d21b8ffe8400910014d21200f014d21b8ffe8b3
0c014d21b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b
2b2b2b2b002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b
5d2b5d2b2b1bb5002101100521b8ffd0400b1115482849210b1a490b4c00
183f3f12393f2b5f5e5d30315901140e0207010e0323222e0227012e0235
343e0233321e0217131737133e0333321e02037b01020302fecd040d1a28
1e1e28190e04fece04050108131f171d23130904fe0403fb020a13211b17
1e1107039f04090a0c07fca90b0e080304080e0a03570c120903080c0702
03080c09fd1a0c0c02e6090c080302080b00>YQMNWA+Calibri AddT42Char 
1 11480 35 <00010035fffa058403bc00450131b0852b58b90047ffc0403d0f014d3808
0c014d29380137080c014d252e01262101262001261f01261e01261d0127
1c012804012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b3
10014d10b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0
400c0d014d0f200c014d0f414910b8ffe040200f014d3f104f106f107f10
04104012164810334925493a902c012c200f014d2cb8ffc0401013164867
2c772c02452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f01
2f2b2b2b2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b
1b401d41490f101f103f104f10040c10401216481040334925493a502c01
032cb8ffc04012131648262c362c02022c010d042c174c094c00183f3fd5
5f5e5d5d2b5f5dc43f3f1acd2b5e5d3f30315901140607010e0323222e02
27032707030e0323222e022701262635343e0233321e0217131737133e03
33321e0217131737133e0333321e0205840405fef7030d17281e1f2a190c
03bd0202af030d1a291e1f27190c03fef90504081320171c22120803d902
02c70209121f19181f120802d70201d6020913211a181d1107039f07140f
fca90b0e080304080e0a028d0909fd730b0e080304080e0a03570f140709
0b070203070d09fd1a090902e6090d070303070c08fd18090902e6090d07
0302080a>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g34 34 def
/g35 35 def
end
YQMNWA+Calibri /Encoding get
dup 73 /g34 put
dup 74 /g35 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /g3 /g20 /g21 /g33 /g32 /.notdef /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 2{/.notdef}rp /g14 /.notdef /g26 /g38 /g39 /g36 /g43 /g16 /g4 /g34 /g35 181{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf409.227 144.334 mo(@\)#&0"\(B#\)08\(B#C0B\(.'\($0'\)0=#.#".#=)[5.12476 3.12488 4 2.74957 1.7504 3.37524 4.25034 6.37515 4.00003 3.12485 1.75037 4.24957 4.24951 6.37518 4 2 1.7504 6.37515 4.25034 2.62488 1.87521 4.25034 4.25037 1.74957 1.87524 3.12485 1.74957 4.25034 4.00003 2.62482 4 3.37524 2.62488 4 0 ]xsh534.477 144.334 mo(D)sh408.887 158.254 mo(4.0'\)0#I#$'$,C0"2\(\)#)[1.99997 2.62485 1.7496 1.87521 3.12485 1.7504 4 3.62479 4 4.25034 1.87524 4.24954 3.75034 2 1.7504 3.37521 1.87524 4.24954 3.12485 0 ]xsh469.887 158.254 mo(J'$=\(J)[5.74954 1.87766 4.25354 4.25354 4.25354 0 ]xsh496.012 158.254 mo(C08#%.#&0'\)0.-&$#=0D)[1.99997 1.7504 4.24954 4.00003 3.87521 2.62485 4 2.75037 1.74963 1.87518 3.12488 1.75037 2.62488 4.24951 2.74963 4.24951 4.00006 4.24951 1.75037 0 ]xsh408.969 172.894 mo(1.0%0\)6#"'+'"0.'B#C0&\(G\(.0I%"--B0'\)0)[4.62476 2.62485 1.75037 3.87524 1.75037 3.12488 4.25034 4 3.37524 1.87521 2.49994 1.87524 3.37524 1.75037 2.62488 1.87521 6.37518 4 2 1.75037 2.7504 4.25034 4.25037 4.25034 2.62485 1.7496 3.62476 3.87521 3.37524 4.25034 4.25037 6.37515 1.74957 1.87524 3.12482 0 ]xsh522.469 172.894 mo(.-&$#=)[2.62482 4.24878 2.75275 4.24878 4.00079 0 ]xsh546.344 172.894 mo(D)sh480.871 100.526 mo
480.871 113.671 li
480.121 113.671 li
480.121 100.526 li
cp
482.496 112.671 mo
480.496 118.671 li
478.496 112.671 li
cp
f
581.163 3.51909 mo
765.435 3.51909 li
765.435 205.686 li
581.163 205.686 li
581.163 3.51909 li
.0806592 .0636606 .0646372 0 cmyk
f
[6 2.25 ] 0 dsh
581.163 3.5191 mo
765.435 3.5191 li
765.435 205.686 li
581.163 205.686 li
cp
.75021 .679683 .670222 .90164 cmyk
@
%ADOBeginSubsetFont: XBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWB+Calibri-Bold gcheck setglobal} if
1 908 4 <00010049ffea049b0524003f00d9b10102435558b31c1c0f18b80292b200
270fbb029900340018ffe8b30f014d18b8ffe8b30d014d18b8fff0b30c01
4d18b80127b42222392f3ebb012f0005000affe8b40b0f014c0ab8015b40
09395314180b0f014c14b8015fb2402f5600183f1aed2b3ffd2bd4ed1112
392fed2b2b2b012fedd4c4ed12392f30311bb90018ffe8b30f014d18b8ff
e8b30d014d18b8fff0b30c014d18b80127b42222392f3ebb012f0005000a
ffe8b40b0f014c0ab8015b4009395314180b0f014c14b8015fb2402f5600
183f1aed2b3ffd2bd4ed1112392fed2b2b2b30315901140e0223222e0223
220e0215141e02333236371123222635343e023321321e021511140e0423
222e0235343e0233321e04049b05090d090d3a6085585e986c3a3b6a955a
2c5625f51214050a0e0901b51019130a1541606769359bf5aa5a60b0f999
548a67441b0c04451d2a190a242a244177a7656fa9723a1414012c2d361c
26170b0b161f14fdfd1e2d1a1c140a59a9f39a9ffdb15e1721261c33>YQMNWB+Calibri-Bold AddT42Char 
YQMNWB+Calibri-Bold /CharStrings get begin
/g4 4 def
end
YQMNWB+Calibri-Bold /Encoding get
dup 55 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWB+Calibri-Bold*1 [33{/.notdef}rp /g5 /g10 /g8 /g15 /g1 /g6 /g9 /g16 /g19 /g13 /g17 /g2 /g21 /g3 /g23 /g22 /g12 /g11 /g18 /g7 /g20 /g14 /g4 200{/.notdef}rp]YQMNWB+Calibri-Bold nfYQMNWB+Calibri-Bold*1 [15 0 0 -15 0 0 ]msf393.298 20.0144 mo(&'"\(#\)*+%7"\("\)#-*+\()[7.12509 6.255 7.50006 7.99506 7.38004 5.36993 3.63004 8.12991 3.37497 9.4949 7.50009 7.99503 7.50009 5.03995 7.23004 5.25 3.63004 8.12991 0 ]xsh585.234 20.0144 mo(4+3*'%7"\("\)#-*+\()[6.07941 8.11938 7.99957 3.61951 6.24451 3.37946 9.49939 7.50464 7.99951 7.50458 5.04443 7.23456 5.25452 3.61951 8.11945 0 ]xsh560.32 159.766 mo
587.803 159.764 li
587.803 159.014 li
560.32 159.016 li
cp
586.803 161.389 mo
592.803 159.389 li
586.803 157.389 li
cp
f
368.146 159.014 mo
395.671 159.016 li
395.671 159.766 li
368.146 159.764 li
cp
394.671 157.391 mo
400.671 159.391 li
394.671 161.391 li
cp
f
174.243 159.833 mo
203.498 159.774 li
203.496 159.024 li
174.242 159.083 li
cp
202.501 161.401 mo
208.497 159.389 li
202.493 157.401 li
cp
f
592.803 41.4485 mo
592.803 34.9491 598.072 29.6803 604.571 29.6803 cv
740.684 29.6803 li
747.184 29.6803 752.452 34.9491 752.452 41.4485 cv
752.452 88.5194 li
752.452 95.0188 747.184 100.288 740.684 100.288 cv
604.571 100.288 li
598.072 100.288 592.803 95.0188 592.803 88.5194 cv
cp
0 0 0 0 cmyk
f
[] 0 dsh
592.803 41.4485 mo
592.803 34.9491 598.072 29.6803 604.571 29.6803 cv
740.684 29.6803 li
747.184 29.6803 752.452 34.9491 752.452 41.4485 cv
752.452 88.5194 li
752.452 95.0188 747.184 100.288 740.684 100.288 cv
604.571 100.288 li
598.072 100.288 592.803 95.0188 592.803 88.5194 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ZBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWD+Calibri-Bold gcheck setglobal} if
1 5096 17 <00010079ffe903cc03c600320069b10102435558b10b27bb025e0000001f
025f400f132d49270b05194924180b0f014c24b8014db4400e4d054c0018
3f3f1aed2b3f1239393f012fedd4ed3930311b400e2d49270b0519492418
0b0f014c24b8014db4400e4d054c00183f3f1aed2b3f1239393f30315925
140e0223222e023535060623222e023511343e0233321e021511141e0233
32363711343e0233321e021503cc0a19291f2129180a4a99525c7d4d210b
1d312425301d0c122539263061370b1d302525301c0c220a0f0a05050a0f
0a6750503c68896602220a0f0a05050a0f0afe08464a351d464302510a0f
0a05050a0f0a>YQMNWD+Calibri-Bold AddT42Char 
1 4796 16 <00010017ffec028e04b1003a0091b10102435558b711110d3b2900232db8
025fb2170d2db8ffe8b40b0f014c2db8011fb323481d0db8ffe8b40b0f01
4c0db8011fb2174831b80147b240074d00183f1aed3fed2bcd3fed2b012f
33fd32c4321112392f30311bb9002dffe8b40b0f014c2db8011fb323481d
0db8ffe8b40b0f014c0db8011fb2174831b80147b240074d00183f1aed3f
ed2bcd3fed2b30315925140e0423222e02351123222635343e0233333534
3e0233321e02151533321e02151406232311141633323e0233321e02028e
0b12232f371c4b6e48226b1314050a0f0a6a0b1d312425311c0cc20a0f0a
051413c32e3b1420191107060b06057a2c2f130f0b06264f785201c92f37
1d28170ac70a100b05050b100ac70a17281d372ffe5d4949070907071524
>YQMNWD+Calibri-Bold AddT42Char 
1 5342 18 <00010016fe9503b403c600240063b10102435558b60109090e001a1bb802
42b4241a0a1a18b80273400f400e1a1f49190a13490a4b044f004b00183f
3f3f3f12393f01192f18d41aed123910dded123912392fcd30311b400c1f
49190a13490a4b044f004b00183f3f3f3f12393f3031592103060623222e
023713262627012634363633321e02171333133e0233321616140702836c
09504d2830180207770d1505fecd0d18392f2b321c0e07d203c006132c37
2b391b08fec4191607101811012b06190e033423251508030c1917fdab02
611a110808162519>YQMNWD+Calibri-Bold AddT42Char 

1 0 1 <> YQMNWD+Calibri-Bold AddT42Char 
1 316 2 <00020017fffa04c305140022002600ddb10102435558b90024ffe8b40b0f
014c23b8ffe8401d0b0f014c250c0d23180d0016010e16260b0a23220a00
04230111232625b8012a401e400b000c0112030c0c271d2423231e0a0d16
0023221807121d521255055500183f3f3f1217393811331112392f5f5e5d
331aed3201192f5e5d18cd32337d87c4c40118c45e5d32337d87c4c43031
002b2b1bb90024ffe8b40b0f014c23b8ffe8b50b0f014c2625b8012a401e
400b000c0112030c0c271d2423231e0a0d160023221807121d5212550555
00183f3f3f1217393811331112392f5f5e5d331aed3230312b2b59251616
060623222e02270321070e03232226263637013e0333321e021707230321
04b10c0616383133391e0c0457fe1a52040d1d352b2e3414060c018f0610
233e333b46271106c201b7016f62242a15050309100d0104fd0e130b0406
172a23047c11150b03030b1613c6fdda>YQMNWD+Calibri-Bold AddT42Char 
1 3496 11 <0001007efffa017a05700015003eb10102435558400f0d15010b0b010b0a
010d00010b0400b80260b5400a1046054c00183f3f012f1aed30315f5e5d
5d5d5d1bb31046054c00183f3f30315925140e0223222e023511343e0233
321e0215017a0c1d302525301d0c0c1d302525301d0c220a0f0a05050a0f
0a05230a100b06060b100a00>YQMNWD+Calibri-Bold AddT42Char 
1 954 4 <0001008d0000038c050e002c00aeb10102435558b11a27b80292400f0913
2013200009001a180d0f014c1aba01290026ffe8b60d014d26260619b8ff
e8b40b0f014c19b8012e40090d5127180b0f014c27b8012eb24006540018
3f1aed2b3fed2b12392f2bed2b012f2f1239392f2f10ed3230311bb61a18
0d0f014c1aba01290026ffe8b60d014d26260619b8ffe8b40b0f014c19b8
012e40090d5127180b0f014c27b8012eb240065400183f1aed2b3fed2b12
392f2bed2b30315925140e0223212226351134363321321e0215140e0223
211121321e0215140e0223211121321e02038c050a0f09fd76212d2d2102
86090e0a05050a0e09fe320187090f0a05050a0f09fe7901d2090f0a0567
1d27180b272c04682c270a19271e1c27180bfec40b17271c1d26170afe93
0b182700>YQMNWD+Calibri-Bold AddT42Char 
1 2806 9 <0003001bfe9303a203d3003e004e005f0100b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d3fed5d5d12393f
ed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173930311b40550f3007
0338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e5301
18530153f1cd150117150100151015021515603803f93c482a203c42cc42
020442010f00420142cd384a0f5b0110035bcc40204f00183f1aed5f5e5d
3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d1217
393031590114062323161615140e0223222627060615141617171e031514
0e0223222e0235343e0237262635343637262635343e0233321617213216
01342623220e0215141633323e0213342627270e0315141633323e0203a2
1610691613346189542b4e150c13332ed94c77512b3a74af7572a1672f11
21301f2b2f362b232a376288522a4d21011b1115febd5049253825125047
263825133b483fb31a1f1306655c394e30140360302e183d214e79532b15
0e0d24161d2502080325435e3c4275563224405935213c373217174f2f3b
61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d3002
051323201e10323417262f00>YQMNWD+Calibri-Bold AddT42Char 
YQMNWD+Calibri-Bold /CharStrings get begin
/g17 17 def
/g16 16 def
/g18 18 def
/g1 1 def
/g2 2 def
/g11 11 def
/g4 4 def
/g9 9 def
end
YQMNWD+Calibri-Bold /Encoding get
dup 42 /g17 put
dup 43 /g16 put
dup 44 /g18 put
dup 45 /g1 put
dup 46 /g2 put
dup 47 /g11 put
dup 48 /g4 put
dup 49 /g9 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWD+Calibri-Bold*1 [33{/.notdef}rp /g5 /g7 /g8 /g12 /g6 /g14 /g10 /g13 /g15 /g17 /g16 /g18 /g1 /g2 /g11 /g4 /g9 206{/.notdef}rp]YQMNWD+Calibri-Bold nfYQMNWD+Calibri-Bold*1 [10 0 0 -10 0 0 ]msf600.127 40.6544 mo(!#"*&'+,-.$%/,\)'\)-0$1'$#\))[4.75006 5.00006 4.12 5.37 3.49994 2.50006 3.5 4.75 2.24994 6.00006 5.37 4.87006 2.5 4.75 4 2.50006 4 2.25 4.87006 5.37 4.75 2.5 5.37006 5.00006 0 ]xsh612.324 62.5004 mo
611.608 59.3126 615.294 56.3768 620.557 55.9432 cv
622.69 55.7675 624.858 56.0302 626.715 56.6892 cv
628.682 54.4425 633.28 53.5886 636.984 54.782 cv
637.632 54.9907 638.227 55.2552 638.749 55.5673 cv
640.282 53.7049 644.015 52.9483 647.087 53.8773 cv
647.937 54.1344 648.679 54.5063 649.255 54.9643 cv
651.725 53.2032 656.089 52.9856 659.003 54.4784 cv
660.228 55.1058 661.054 55.9712 661.338 56.9262 cv
665.385 57.5951 667.773 60.1289 666.671 62.5855 cv
666.578 62.792 666.462 62.9944 666.323 63.1911 cv
669.569 65.7509 668.774 69.4198 664.548 71.3859 cv
663.233 71.9979 661.679 72.3941 660.037 72.5364 cv
660 75.2903 656.283 77.5049 651.733 77.4828 cv
650.213 77.4754 648.726 77.2136 647.436 76.7263 cv
645.897 79.8138 640.53 81.5589 635.447 80.6241 cv
633.317 80.2323 631.477 79.4038 630.24 78.2799 cv
625.036 80.1814 618.281 79.1585 615.153 75.9952 cv
615.037 75.8749 li
611.631 76.1164 608.546 74.6441 608.146 72.5865 cv
607.933 71.4898 608.531 70.3921 609.78 69.5859 cv
606.831 68.5341 605.841 66.2257 607.567 64.4298 cv
608.564 63.3937 610.311 62.7088 612.272 62.5857 cv
cp
0 0 0 0 cmyk
f
.25 lw
612.324 62.5004 mo
611.608 59.3126 615.294 56.3769 620.557 55.9432 cv
622.689 55.7675 624.858 56.0302 626.715 56.6892 cv
628.682 54.4425 633.28 53.5887 636.984 54.7821 cv
637.632 54.9908 638.227 55.2552 638.749 55.5673 cv
640.282 53.705 644.014 52.9483 647.087 53.8773 cv
647.937 54.1345 648.679 54.5063 649.255 54.9644 cv
651.725 53.2032 656.089 52.9856 659.003 54.4785 cv
660.228 55.1059 661.054 55.9713 661.338 56.9262 cv
665.385 57.5952 667.773 60.1289 666.671 62.5855 cv
666.578 62.7921 666.462 62.9944 666.323 63.1912 cv
669.569 65.7509 668.774 69.4199 664.548 71.3859 cv
663.233 71.9979 661.679 72.3942 660.037 72.5364 cv
660 75.2903 656.283 77.5049 651.733 77.4828 cv
650.213 77.4754 648.726 77.2136 647.436 76.7264 cv
645.897 79.8139 640.53 81.559 635.447 80.6241 cv
633.317 80.2324 631.477 79.4038 630.24 78.2799 cv
625.036 80.1814 618.281 79.1585 615.153 75.9953 cv
615.037 75.8749 li
611.631 76.1164 608.546 74.6442 608.146 72.5866 cv
607.933 71.4898 608.531 70.3921 609.78 69.5859 cv
606.831 68.5342 605.841 66.2257 607.567 64.4298 cv
608.564 63.3938 610.311 62.7089 612.272 62.5857 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
613.453 69.9844 mo
612.194 70.0442 610.936 69.8679 609.846 69.4792 cv
616.636 75.513 mo
616.13 75.6351 615.599 75.7164 615.058 75.7548 cv
630.236 78.1695 mo
629.855 77.8235 629.537 77.4537 629.285 77.0666 cv
647.822 75.4192 mo
647.766 75.8296 647.639 76.2352 647.442 76.6294 cv
655.373 67.9415 mo
658.227 68.7831 660.028 70.5427 660.003 72.4645 cv
666.294 63.1241 mo
665.832 63.7785 665.126 64.3591 664.232 64.8202 cv
661.347 56.8312 mo
661.425 57.0954 661.462 57.3636 661.456 57.6321 cv
648.18 55.8969 mo
648.448 55.5273 648.804 55.1833 649.236 54.8754 cv
638.301 56.3837 mo
638.41 56.0783 638.582 55.7823 638.812 55.5027 cv
626.707 56.6828 mo
627.379 56.9213 628.001 57.2083 628.558 57.5375 cv
612.647 63.3999 mo
612.501 63.1058 612.393 62.8051 612.324 62.5006 cv
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 12312 37 <00010022fe94037c03bc00240071b0852b58b9001bfff040350b014d371b
01291b0118180b014d261801260e360e022709011a400b014d3a1a011938
0b014d3b19011f49190a13490a4b044f004b003f3f3f3f12393f31305d2b
5d2b015d5d5d2b5d5d2b1b400c1f49190a13490a4b044f004b00183f3f3f
3f12393f3031592103060623222e023713262627012634363633321e0217
0133133e023332161614070233780631321a201102067c091003febf0810
241e1e22140905010103f8061122201c241106feb51011050c140e013904
120a035c15180e0503080f0dfd2e02d6130b05050e181200>YQMNWA+Calibri AddT42Char 
1 7732 24 <00010099fffa037c0571003400b3b0852b58400c3f360129310131401201
4d31b8ffd0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0
b30b014d31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8ff
f6b30c014d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c
014d0016220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f
10f12b2b2b2b32e02b2b2b2b2b31305d5d1b400b220b0528491c46114c05
4c00183f3f3f3f12393930315925140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g37 37 def
/g24 24 def
end
YQMNWA+Calibri /Encoding get
dup 47 /g37 put
dup 75 /g24 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [34{/.notdef}rp /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /g3 /g20 /g21 /g33 /g32 /g37 /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 2{/.notdef}rp /g14 /.notdef /g26 /g38 /g39 /g36 /g43 /g16 /g4 /g34 /g35 /g24 180{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf625.783 63.9344 mo(:\(2'"/0)[4.12476 4.25275 1.87683 1.87683 3.3728 3.62885 0 ]xsh622.218 73.7744 mo(*8#"K#&)[4.24963 4.24951 4.00165 3.37762 3.62561 4.00159 0 ]xsh685.843 62.5004 mo
685.127 59.3126 688.813 56.3768 694.076 55.9432 cv
696.209 55.7675 698.377 56.0302 700.234 56.6892 cv
702.201 54.4425 706.799 53.5886 710.504 54.782 cv
711.151 54.9907 711.746 55.2552 712.269 55.5673 cv
713.801 53.7049 717.534 52.9483 720.606 53.8773 cv
721.456 54.1344 722.198 54.5063 722.774 54.9643 cv
725.244 53.2032 729.609 52.9856 732.523 54.4784 cv
733.747 55.1058 734.573 55.9712 734.858 56.9262 cv
738.905 57.5951 741.292 60.1289 740.19 62.5855 cv
740.097 62.792 739.981 62.9944 739.842 63.1911 cv
743.088 65.7509 742.293 69.4198 738.068 71.3859 cv
736.752 71.9979 735.198 72.3941 733.556 72.5364 cv
733.52 75.2903 729.802 77.5049 725.252 77.4828 cv
723.732 77.4754 722.245 77.2136 720.956 76.7263 cv
719.417 79.8138 714.049 81.5589 708.966 80.6241 cv
706.836 80.2323 704.996 79.4038 703.759 78.2799 cv
698.555 80.1814 691.801 79.1585 688.672 75.9952 cv
688.556 75.8749 li
685.15 76.1164 682.065 74.6441 681.666 72.5865 cv
681.453 71.4898 682.05 70.3921 683.299 69.5859 cv
680.35 68.5341 679.36 66.2257 681.087 64.4298 cv
682.083 63.3937 683.83 62.7088 685.791 62.5857 cv
cp
0 0 0 0 cmyk
f
685.843 62.5004 mo
685.127 59.3126 688.813 56.3769 694.076 55.9432 cv
696.209 55.7675 698.377 56.0302 700.234 56.6892 cv
702.201 54.4425 706.799 53.5887 710.504 54.7821 cv
711.151 54.9908 711.746 55.2552 712.268 55.5673 cv
713.801 53.705 717.534 52.9483 720.606 53.8773 cv
721.456 54.1345 722.198 54.5063 722.774 54.9644 cv
725.244 53.2032 729.609 52.9856 732.523 54.4785 cv
733.747 55.1059 734.573 55.9713 734.857 56.9262 cv
738.904 57.5952 741.292 60.1289 740.19 62.5855 cv
740.097 62.7921 739.981 62.9944 739.842 63.1912 cv
743.088 65.7509 742.293 69.4199 738.067 71.3859 cv
736.752 71.9979 735.198 72.3942 733.556 72.5364 cv
733.52 75.2903 729.802 77.5049 725.252 77.4828 cv
723.732 77.4754 722.245 77.2136 720.955 76.7264 cv
719.417 79.8139 714.049 81.559 708.966 80.6241 cv
706.836 80.2324 704.996 79.4038 703.759 78.2799 cv
698.555 80.1814 691.8 79.1585 688.672 75.9953 cv
688.556 75.8749 li
685.15 76.1164 682.065 74.6442 681.666 72.5866 cv
681.452 71.4898 682.05 70.3921 683.299 69.5859 cv
680.35 68.5342 679.36 66.2257 681.087 64.4298 cv
682.083 63.3938 683.83 62.7089 685.791 62.5857 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
686.972 69.9844 mo
685.714 70.0442 684.455 69.8679 683.365 69.4792 cv
690.155 75.513 mo
689.649 75.6351 689.118 75.7164 688.577 75.7548 cv
703.755 78.1695 mo
703.375 77.8235 703.056 77.4537 702.804 77.0666 cv
721.341 75.4192 mo
721.285 75.8296 721.158 76.2352 720.962 76.6294 cv
728.892 67.9415 mo
731.746 68.7831 733.548 70.5427 733.522 72.4645 cv
739.813 63.1241 mo
739.351 63.7785 738.645 64.3591 737.751 64.8202 cv
734.866 56.8312 mo
734.945 57.0954 734.981 57.3636 734.975 57.6321 cv
721.699 55.8969 mo
721.967 55.5273 722.323 55.1833 722.755 54.8754 cv
711.82 56.3837 mo
711.93 56.0783 712.101 55.7823 712.331 55.5027 cv
700.226 56.6828 mo
700.898 56.9213 701.52 57.2083 702.078 57.5375 cv
686.166 63.3999 mo
686.02 63.1058 685.912 62.8051 685.843 62.5006 cv
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 3448 12 <00010047ffed0363052100490128b0852b58b90041ffe8b40f10014c41b8
fff0b30d014d41b8fff0b310014d41b8fff0b30c014d41b8ffe8b30b014d
41b8022c402b32401314014c324011014d243224320c1b180f10014c1b10
0d014d1b1010014d1b100c014d1b180b014d1bba02310000ffc0b31b014d
00b8ffc0b319014d00b8ffc0b314014d00b8ffc0b60f11014c000c2ebb01
270037000a0126400b1120370137400b0c014c11b8ffc0400a0b0c014c37
113711163cb8010cb5411b05295316b80129b10556003fed3f123939ed11
39392f2f2b2b5d10ed10ed012fd42b2b2b2be12b2b2b2b2b1239392f2f2b
2be12b2b2b2b2b31301bb1372eb80127b26c110ab80126b76c3711371116
293cb8010cb76c411b0529530516b80129b26c055600183f2b3f1239392b
1139392f2f2b2b30315901140e0223222e0435343e0233321e0233323e02
35342e0635343e0233321e0615140e0223222e0223220e0215141e060363
4377a15d416f573b170b04080c080e3350714a385d43243252696e685233
3b6991542b574d3c1306040203060b070b2f445d3a3650341a32536a6e6a
5333016b5b8e633216202218251f161d12072228231e375033374e3b3133
3e54714f517f562d0f191f130b111813121c13091c231d1d304225364e3c
32333d537100>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g12 12 def
end
YQMNWA+Calibri /Encoding get
dup 33 /g12 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [33{/.notdef}rp /g12 /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /g3 /g20 /g21 /g33 /g32 /g37 /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 2{/.notdef}rp /g14 /.notdef /g26 /g38 /g39 /g36 /g43 /g16 /g4 /g34 /g35 /g24 180{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf698.735 63.9344 mo(!%+#./0)[3.62476 3.87286 2.4967 4.00079 2.62488 3.62482 0 ]xsh695.8 73.7744 mo(5#\).G#=)[3.87518 4.00317 3.12329 2.62726 4.2511 4.00323 0 ]xsh592.803 132.243 mo
592.803 124.746 598.88 118.669 606.377 118.669 cv
738.879 118.669 li
746.375 118.669 752.452 124.746 752.452 132.243 cv
752.452 186.535 li
752.452 194.031 746.375 200.108 738.879 200.108 cv
606.377 200.108 li
598.88 200.108 592.803 194.031 592.803 186.535 cv
592.803 132.243 li
0 0 0 0 cmyk
f
.75 lw
592.803 132.243 mo
592.803 124.746 598.88 118.669 606.377 118.669 cv
738.879 118.669 li
746.375 118.669 752.452 124.746 752.452 132.243 cv
752.452 186.535 li
752.452 194.031 746.375 200.108 738.879 200.108 cv
606.377 200.108 li
598.88 200.108 592.803 194.031 592.803 186.535 cv
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: ZBAAAA+Calibri-Bold AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWD+Calibri-Bold gcheck setglobal} if
1 662 3 <0001004fffeb040c052300390089b10102435558b21c002bbe02c7000e00
18016100210026ffe8b40b0f014c26b80160b2135304b8015ab73530180b
0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed012fedd4c430
311bbc0018016100210026ffe8b40b0f014c26b80160b2135304b8015ab7
3530180b0f014c30b80162b240095600183f1afd2bd4ed3ffd2bd4ed3031
5925140e0623222e02353412363633321e0615140e0223222e0223220e02
15141e0233323e0233321e02040c03060a163f5b754485d69650589edd85
366455441b0a0603040a0e090f2e4965464d79552c2f577b4d4666492f0d
0a0c0804c4192319121724211652a3f4a2a50100ae5a121d261b121c261c
1e2a1a0c232b233f75a66872a76c3521282008182b00>YQMNWD+Calibri-Bold AddT42Char 
YQMNWD+Calibri-Bold /CharStrings get begin
/g3 3 def
end
YQMNWD+Calibri-Bold /Encoding get
dup 50 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWD+Calibri-Bold*1 [33{/.notdef}rp /g5 /g7 /g8 /g12 /g6 /g14 /g10 /g13 /g15 /g17 /g16 /g18 /g1 /g2 /g11 /g4 /g9 /g3 205{/.notdef}rp]YQMNWD+Calibri-Bold nfYQMNWD+Calibri-Bold*1 [10 0 0 -10 0 0 ]msf600.127 129.934 mo(2/*\)+#&'$1)[5.25006 2.5 5.38 4.00006 3.5 5.00006 3.49994 2.5 5.38 0 ]xsh743.293 170.323 mo
719.161 170.323 li
719.161 152.14 li
743.293 152.14 li
743.293 170.323 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 99.769 208.7 ]ct
[25.2047 0 0 19.2854 618.856 37.8263 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 47 
/H 35 
/M[47 0 0 -35 0 35 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 47 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
m/RD/877OXW-D\egAhKp6!&Z*Qu,n?gAhKo5ZWH%Q>9M9r;b^T#TZufXieeJEuj!8#T-*?OJo+&?l7Z!
#lk`,=+Zg,D-%M-!!j<)<e6R&CK;2)!!jTHF03U-OE2H-!:p0t8ABCW0GkWt@&RJh!")#oD-&5'(-u#h
=5<i`5c\[$.hrda<gHe^!9F1f=6>Tc3ZT5BF38R]!!4"!OSJkY(jMtri;`opJqEq$r;Zp8D3u*t!!3md
Jb]9J'l0*Mi;`p"Xf_C!"!*KG*U!M"!!eT>!!%&FKc'^f!FVkb!!e*+!!$Z*Go$;X!EYZI!!e'*!!$W(
G8:#U!EPN[!:0[jXZ?F^M:\FAqu?b=b2NC,G`Vn*Ktb=9L&1lMGiJc0D1V`fH*"-LH2RaC!<6or!!m@k
!!%5CX/^C@!<6ip!!n[g!!&_Sk2`65!<8/A!!*q8rW)o3!4)J%!Z7jijT#;sR/R*aXT5'l!!3q'/*-a3
'peh!rMopkqZ$[4Q7MP,o)Je3b5MD>joF$1!!41`3pZhP877Oo^Sn*-Gl@[GEk]<&Er#b:89jJ$#XMOD
Xf[tXQ#6L#"D=g<XCqA0!C:Sh!!khjJZGi;QBZ1a!!Ho6X/]e.!!,?#li7;mF04Teb0%_crW!(XjQ>Q\
q>^OtOR<)X0W:(@0E;(i(pTC*0E;1lEkd>(!!*q8mJmhLR"ABi!!!cMTSSsc!#B4LH2.F@(7=Li&M'/u
<\".M'c!<pQ7DqMAug.O!!*h#mJmh[b,o_G!!"#[e[3I[!$-pYU%nZh*QmgN!dLXtq>^]6!(a&5)"mq1
(oZm'!c=;Tq>^]$!'uuh(A7_/(7>""oDer.Q7Me3"fhVgQ>76/!!*h#mf3ENau]A!"m,edb)dY;!!++_
n,NKfGk_7B^An6N@&X#(q#CE0n,NKVD>4)7XT/>:=.&X\!3P_j!L@Nr!!TD'!#8P#o`+umn,NL3OSf+W
!!VKb!$-.'o`,!SnGiTO@/Bp-EjCB9O>-Y6!FV#`!!+dPnGiTA=8Mt$B;'SdJh-g#!EXmI!!+U;pAk'j
!J+;K!!Qu-G85ZZrVut"JbK-F/!f]*!NgG?!!S52TcL6rrVut?XnMer3m.!n!D&=L!"=Rq^V5D0GSl=D
Od9DO!<3'!@.F9u6%\t6%!eqVXEdla(4Dm/Lfa?Os&\ak!C255!"=(OX/^AECDD2hJVI5#!<6*j!!-0'
qZ$enjlYWtEs@^HVUquXF8,b8F7]G=(`:")!&1X](]aNL"0sVZTDlS,USomG!!X9tZAKKt0_>>O()F"f
!%X\6('+<8"/.64OT)?`PF*m"!!X3eTm[]D/+`iA'aLcS!%XY4'`e35"/%01NrH'\P*RWt!!X0bTR.E>
/+`fJ*?F8_!'8WZ*<?'#"4oTV^]*?s`6(.?!!XI@f;9S23qNFO?k*/:TYJ7G!-5fg^2a3]Zi7]@T6PV[
!!&Yj^B:rQ!!)Zlr`9R0!0OCcT)`N*XfQ.8=/,\r!g%89rVuq[riH3u=7ZFk<Xo*0OK5FR!+r73Wb)63
T`1tnNb`G0!!&&YWr]"so)Sc2%KHLFk2t.nM<*g\M#_VLroO9sOHBGA!5JNq!Shbf!#MT40E;*G^V?uQ
(imBF!!!k%WP=<E0Tc86!2'8*!4VM!(RUR?!!&.`Xe,S/B<?FZ!#CBYXaM]MK)P`MOT)?^VXa]kQBj$$
!0F5mX.B;+Aug+U!#:6UX*Z?IJc5WLNrH'ZV"+L%b/uaF!5[g[e,UMGk+MbT*OO&QVE-c?rVur5roO49
nc/roW#,L70VG'mq#CU9OH::Z(o[E6";mfHZ;gW"q>^egQkfZ%/!5rEq#CU7Jq=a<(7>($";[-%ThP"W
#aUbk!!"O2O=U,,"r2]?'`\u7rW!'9OK5!Hnc/s<arLH^3l/Wnq#C[@XfWTD*Qe?^"TTRZk14,7!<9h(
!#6>AW-CkJ!#S77^L.$A877OoW/u6pq>gPtnGj:>6'uLTXT0,&=05O(!'s\<XdF]W62CT]X7lVk!#656
Q>8ad!#7b"X&]3#5ZWH:Q@Wg:q>gQXnGj:E=3?V+jo?E'F67ND!*=6Dk/sff=8DmuW2LR.!$*b$OM@`U
GVBt*Ge_"lG[M?g8ABCW0E;qD8<BcXrW!'$!19,hp])<b=+[QAJo*"R6#Ea+Qu,n?!(!`(="=7d.m\cS
=8W%"QBi9\!$*RjJZG)fCF^,bCTFM%CK;/M5c\[$.f^;75_55%qu?f@arU6W&it*9k/sff3ZV:`k2sgJ
Eub6^$KdFk3WL0]=09Vdqu?e[O>-M2%5<m*?n_Qt0M%:e0JJUe!!=(:O;Rcn!uR,u)#aL:Jq>NL!"CH1
JlaH&(+V\&Jh&@'r;Zp8R"?+L!!=!gQkoZ$!eGnQq>^^MJUpiP!#5\g5_4J:.tRX!!u7,Q(&7h3'nMYc
rW!#%XZH:Y%6CVnF#j:A3`iGc3]aDA!!=7aXW@3;"!+Md*W?$?84\"&!"MPu8,rX1Z@s+q!(`3A@/U'0
O>%N/ZAKLq!!,WhrW!!c6#HK!%RHIJ!!$Z*GnpA[6%Y(tr;[%R.i*Q,I2;YZ!C<+P!!5DNC\n)A5aFY8
!+qmJ'`\5!JW!S-!!\!)'mlU#(&@n25aMBL!`rHbqZ%+-b#\QCM:\FA!!$*&]Q=#O#H^$-VUq[c!;c`s
=3CLB!uMlR)#XF80YdSe"GOS)^4lOd!\M/grW!%^GQ=B8^Aso%!!cnn!!!cMQkoW#!@t;O!!ISKXfQgI
!!4UO:]:=rJo(LLriH0^q#CY$JcGcc'p]U5!!+UNrW!(FWiN.DrVupH!NSup!!@df!07&Z!06jT"'0sQ
!!=5^arUE\!BTBB!!K"Wk2`68!!5(@C&S)7XcNOtroO3qq#CG:Xo/5#8<EcM!P^>f!<'Y4ZMjh1OCkF.
!(a$g!2'8*!2'/h$8A]g/W_Y?!!#<:r;Zl#/,fPIXT5'o!"4B`QkfZfQiI,JXfVW+OSf(c/"`F_Jh&>O
!'l,6!!0,NrW)nt!20;k$%Z<H'`^Lb!!&&YWrS1X!"(6JSg].?.f]QNXo/5#juWJArT4+3rW!8,Hcd?/
=3:LC^]*?q^\e'93n2Y;XZANB!!RUT!!$D7r;["A^;%C&!"T'SO8sN5!-h$7!#V6@MD4r.#,&`GYXj"`
rW!+=<r`5%=8`+6B<85:B)hpKJcKXh!,Y"%!#CQrI4P3q#*H$iT0[=2rW!+;<WE,#<rE"5Au_o3AcMgH
JH0Id!,Fh"!#:EmHRo!o#*>mdSj7(,rVut\F8l7?F8Z(RM<*g\M#[O;XT4H(!0C7^!$/`7VE4VT#/THa
e5q`nrW!*=W-A;e8GrMu(imBF!!$E*!!#Q7!2pb-!!]+2^T\QRW;Zc#(78q=D*e+#%Mi]ZGlRhGQiI+P
D#fq=pAbI!!0OCcT,*f]rW!*:Q>6J95lCZm'kXLj!!$&c!!#9"!1"Am!!\OcX.C&lQMpjf*QjHDOB;A\
%NUDgT`>(6aoDECO9!EDo`,34k2t/6b0'Y_";lB^Yo*9:!\gR7rVup8!iQ+6oDf(LTV*t=^VB^I";YjA
TGI>'!\9XirW!$9QiO8\!!Xs9OXgF6Xo/5&'l0,,(&7h2/!bbc!!<t%!3>_l"tPds.fcWNr;[!AONQ)o
!;ZZs3m+T(!!=7a!9WnR#!0T:3WS=)qZ%'Z\UeuZ(]YBi8?TG!)#XF:^At2LnGiV-W2TRn%4eB"D(?A%
()B3,VO&(s!!B>'Qko5m!rs+(R/6jm/#IB'.hr%!'gS:bPnj5t"02Ef(%D8*'pb0_!"D!HRufZO!$*(]
dG2e`r;Zr^!6Q>P!!41`b5))HQ=bB'W5#:0GaH1[MZ*SZ89b,r0ED%O";m$%MAZ3j!_@Q\q>^q[>]#([
XdGJmM63n.rW!'eD#f/<qu?j8IA)')qZ$[`D/K+L%#.u%JX3@&Q>;8VX*agG"@-`&JLgWu";Q9VHPQDX
!^LO:q>^c-H]YAPk/tgLOLF<6VZ$Pu=-*Ea3rAs\*N%Gc*W#g<=-/O?!!,W8q>gN0!4)S("F*H;8<E`L
!2'8*!2',g!g#rDq>^O^D>F83XT5'o!!I.)!'u57!!&,[XT4I[!!@g=5lgc^!C1Gs!<0#!T`+ooCHqkb
Jc#KJNrH'ZNr&eXJNuKs!!-/_q>gNW!8%2M"HZ[b=0;B#!5JNq!5JC2!j,O*q>^R6O>-P3#FrQDM?!W1
^]"65Gl7UBTDlS*TDS]hOSAeW(4n(6!!eLcXaL0L/$8dNs)%]7!0I2^!0I*Ys+:"G!Yp8:qZ$kZX/gRI
!%Y,L!<6j5!!&&YWrS1X!<7WF!!41C3r8mZ]]S@R!rr<^k5GA\OSo.Z^]*?q^\e*3XnMes0W5id!!a@5
T,7P.^G,We!Z7"irW!'<SA0q8r;ZjPOS/YU/!q+M!!a:$O;7frXXjAN!Z$ARrW!':NNIUZr;ZjKK(o<K
!!"O8(&S%:'on:h!!'&MrW!!7JO'27";QiqHRo$p!@r`p!!54(*W,mB*P]?0!!).BrW!!?X]PK%"<G/;
VE4YU!BR@U!!6Q,8GN5e0Y]=>!!=("O>-M2"9:-;O>->-!`taTq#CIHXXj;L!u?K?/,9/I.tW@'o`,%o
Q9b6G!\:<%qu?g6JUo?I!!=a&JLgBn!cuLcq#COYjuNJBrW!$@XfXY[!!>9aXZH(S$Q+te?n`E784\i(
0_tbX(eBa582(kt0M$H'8Fc`g(4q->.i&md6%X\=q>^p>6%Wr>.i&mN6#E_inc/Y)$A!b/.hrda5_4J:
q>^p=5_3]9.hrdL5\mDcnc0%<XfZY**?A3_XfXY\!"9lLXcQUF*?@1BOQKX6!!c&&OJo+&GY%N.#T-*W
OJo+>G[UIMnc/n\=+Zg,D/DT4!!j?+D1\.BJo+TW!!bbiJX2U;CI%Rn#SfU?JX2UQCKBj'#?PuKb0#g-
=8)\$!$,.&XieegOE9gi#=r6aW2Orc8G3#h(eAn5W2Pf&@."""6!&Z*Qu-\+p&G@66#D4@R"B0VmJm>S
<e6P=Q>:8$p&G@55\kq:Q@WgPmJmJnF03U-OH<Q;!!jTHOKH[JXcRW#!.Y~>

%%EndBinary
grestore
np
604.57 138.965 mo
644.231 138.965 li
644.231 187.23 li
604.57 187.23 li
cp
0 0 0 0 cmyk
f
604.57 138.965 mo
644.231 138.965 li
644.231 187.23 li
604.57 187.23 li
cp
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: WAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /WAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c79660000000000003a2000003108
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d74780000000000001400000000a06c6f636100000000000014a0
000000526d61787000000000000014f4000000206e616d65000000000000
151400000020707265700000000000001534000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec000100000000000000000000000000000028040e000001cf000004a1
00230444006104ec00ac050c005b020400ac052a00ac054c0063042200ac
03e6000f052200aa03d5005c043400990362005a0434006003fb005d0271
002503c400350434009901d6008503a3009901d600990664009904340099
0438005a0434009902ca00990321005102ae002104340094039d002205b8
003503770029039f002201ff002a058600960273004505750000040e0072
000000bf00bf016c0204028103460399044404cd055905cd0666073807ea
089509440a030a980ba80c3e0cc40d6d0db80eb30f560ff510a4112e1215
12a7134a1416151715b6162b166516bd16e917c918840000000100000028
043a00170108000800020010002f00870000123602350004000100000001
00120001000000000006000e000045474c5855532b43616c69627269b109
03415302c802c60038001f02c702c60038001f02dd003802da005502d900
3802d7005502d8003802d7005502d6003802d5005502d4003802d3005502
d2003802d1005502bf003802be005502bd003802bc0055000402db003402
db005402db0003003402db005402db006402db00a402db00d402db000500
6b02d50001000b02d10001001402c2004402c2006402c2007402c2009402
c2000500a402be000100a402bc000100200284b40918014a20b80283b409
18014a20b80282b40918014a20b80281b40918014a20b80280b40918014a
20b8027fb40918014a20b8027eb40918014a20b8027db40918014a20b802
7cb40918014a20b8027bb40918014a20b8027ab40918014a20b80279b409
18014a20b80278b40918014a20b80277b40918014a20b80276b40918014a
20b80275b40918014a20b80274b40918014a20b80273b40918014a20b802
71b40918014a20b80270b40918014a20b8026fb40918014a20b8026eb409
18014a20b8026db40918014a20b8026cb40918014a20b8026bb40918014a
20b8026ab40918014a20b80269b40918014a20b80268b40918014a20b802
67b40918014a20b80266b40918014a20b80265b40918014a20b80264b409
18014a20b80263b40918014a20b80262b40918014a20b80261b40918014a
20b80260b40918014a20b8025fb40918014a20b8025eb40918014a20b802
5db40918014a20b8025cb40918014a20b8025bb40918014a20b8025ab409
18014a20b80259b40918014a20b80258b40918014a20b80257b40918014a
20b80256b40918014a20b80255b40918014a20b80254b40918014a20b802
53b40918014a20b80252b40918014a20b80251b40918014a20b80250b409
18014a20b8024fb40918014a20b8024eb40918014a20b8024db40918014a
20b8024cb40918014a20b8024bb40918014a20b8024ab40918014a20b802
49b40918014a20b80248b40918014a20b80247b40918014a20b80246b409
18014a20b80245b40918014a20b80244b40918014a20b80243b40918014a
20b80242b40918014a20b80241b40918014a20b80240b40918014a20b802
3fb40918014a20b8023eb40918014a20b8023db40918014a20b8023cb409
18014a20b8023bb40918014a20b8023ab40918014a20b80239b40918014a
20b80238b40918014a20b80237b40918014a20b80236b40918014a20b802
35b40918014a20b80234b40918014a20b80233b40918014a20b80232b409
18014a20b80231b40918014a20b80230b40918014a20b8022fb40918014a
20b8022eb40918014a20b8022db40918014a20b8022cb40918014a20b802
2bb40918014a20b8022ab40918014a20b80229b40918014a20b80228b409
18014a20b80227b40918014a20b80226b40918014a20b80225b40918014a
20b80224b40918014a20b80223b40918014a20b80222b40918014a20b802
21b40918014a20b80220b40918014a20b8021fb40918014a20b8021eb409
18014a20b8021db40918014a20b8021cb40918014a20b8021bb40918014a
20b8021ab40918014a20b80219b40918014a20b80218b40918014a20b802
17b40918014a20b80216b40918014a20b80215b40918014a20b80214b409
18014a20b80213b40918014a20b80212b40918014a20b80211b40918014a
20b80210b40918014a20b8020fb40918014a20b8020eb40918014a20b802
0db40918014a20b8020cb40918014a20b8020bb40918014a20b8020ab409
18014a20b80209b40918014a20b80208b40918014a20b80207b40918014a
20b80206b40918014a20b80205b40918014a20b80204b40918014a20b802
03b40918014a20b80202b40918014a20b80201b40918014a20b80200b409
18014a20b801ffb40918014a20b801feb40918014a20b801fdb40918014a
20b801fcb40918014a20b801fbb40918014a20b801fab40918014a20b801
f9b40918014a20b801f8b40918014a20b801f7b40918014a20b801f6b409
18014a20b801f5b40918014a20b801f4b40918014a20b801f3b40918014a
20b801f2b40918014a20b801f1b40918014a20b801f0b40918014a20b801
efb40918014a20b801eeb40918014a20b801edb40918014a20b801ecb409
18014a20b801ebb40918014a20b801eab40918014a20b801e9b40918014a
20b801e8b40918014a20b801e7b40918014a20b801e6b40918014a20b801
e5b40918014a20b801e4b40918014a20b801e3b40918014a20b801e2b409
18014a20b801e1b40918014a20b801e0b40918014a20b801dfb40918014a
20b801deb40918014a20b801ddb40918014a20b801dcb40918014a20b801
dbb40918014a20b801dab40918014a20b801d9b40918014a20b801d8b409
18014a20b801d7b40918014a20b801d6b40918014a20b801d5b40918014a
20b801d4b40918014a20b801d3b40918014a20b801d2b40918014a20b801
d1b40918014a20b801d0b40918014a20b801cfb40918014a20b801ceb409
18014a20b801cdb40918014a20b801ccb40918014a20b801cbb40918014a
20b801cab40918014a20b801c9b40918014a20b801c8b40918014a20b801
c7b40918014a20b801c6b40918014a20b801c5b40918014a20b801c4b409
18014a20b801c3b40918014a20b801c2b40918014a20b801c1b40918014a
20b801c0b40918014a20b801bfb40918014a20b801beb40918014a20b801
bdb40918014a20b801bcb40918014a20b801bbb40918014a20b801bab409
18014a20b801b9b40918014a20b801b8b40918014a20b801b7b40918014a
20b801b6b40918014a20b801b5b40918014a20b801b4b40918014a20b801
b3b40918014a20b801b2b40918014a20b801b1b40918014a20b801b0b409
18014a20b801afb40918014a20b801aeb40918014a20b801adb40918014a
20b801acb40918014a20b801abb40918014a20b801aab40918014a20b801
a9b40918014a20b801a8b40918014a20b801a7b40918014a20b801a6b409
18014a20b801a5b40918014a20b801a4b40918014a20b801a3b40918014a
20b801a2b40918014a20b801a1b40918014a20b801a0b40918014a20b801
9fb40918014a20b8019eb40918014a20b8019db40918014a20b8019cb409
18014a20b8019bb40918014a20b8019ab40918014a20b80199b40918014a
20b80198b40918014a20b80197b40918014a20b80196b40918014a20b801
95b40918014a20b80194b40918014a20b80193b40918014a20b80192b409
18014a20b80191b40918014a20b80190b40918014a20b8018fb40918014a
20b8018eb40918014a20b8018db40918014a20b8018cb40918014a20b801
8bb40918014a20b8018ab40918014a20b80189b40918014a20b80188b409
18014a20b80187b40918014a20b80186b40918014a20b80185b40918014a
20b80184b40918014a20b80183b40918014a20b80182b40918014a20b801
81b40918014a20b80180b40918014a20b8017fb40918014a20b8017eb409
18014a20b8017db40918014a20b8017cb40918014a20b8017bb40918014a
20b8017ab40918014a20b80179b40918014a20b80178b40918014a20b801
77b40918014a20b80176b40918014a20b80175b40918014a20b80174b409
18014a20b80173b40918014a20b80172b40918014a20b80171b40918014a
20b80170b40918014a20b8016fb40918014a20b8016eb40918014a20b801
6db40918014a20b8016cb40918014a20b8016bb40918014a20b8016ab409
18014a20b80169b40918014a20b80168b40918014a20b80167b40918014a
20b80166b40918014a20b80165b40918014a20b80164b40918014a20b801
63b40918014a20b80162b40918014a20b80161b40918014a20b80160b409
18014a20b8015fb40918014a20b8015eb40918014a20b8015db40918014a
20b8015cb40918014a20b8015bb40918014a20b8015ab40918014a20b801
59b40918014a20b80158b40918014a20b80157b40918014a20b80156b409
18014a20b80155b40918014a20b80154b40918014a20b80153b40918014a
20b80152b40918014a20b80150b40918014a20b8014fb40918014a20b801
4eb40918014a20b8014cb40918014a20b8014bb40918014a20b8014ab409
18014a20b80149b40918014a20b80148b40918014a20b80147b40918014a
20b80146b40918014a20b80145b40918014a20b80144b40918014a20b801
43b30918014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb80281
b21e3a1fb80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e
3e1fb8027cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411f
b80278b21d431fb80277b21d431fb80276b21d431fb80275b21d411fb802
74b21d431fb80273b21d431fb80272b21d411fb80271b21d421fb80270b2
1d421fb8026fb21d421fb8026eb21d431fb8026db21d431fb8026cb21d43
1fb8026bb21c451fb8026ab21c451fb80269b21c451fb80268b21c451fb8
0267b21c451fb80266b21c441fb80265b21c451fb80264b21c451fb80263
b21c451fb80262b21c451fb80261b21c451fb80260b21c451fb8025fb21c
451fb8025eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c451f
b8025ab21c451fb80259b21c451fb80258b21c451fb80257b21c451fb802
56b21c451fb80255b21c451fb80254b21c451fb80253b21c451fb80252b2
1c451fb80251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c45
1fb8024db21c451fb8024cb21c451fb8024bb21c451fb8024ab21b491fb8
0249b21b491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245
b21b4c1fb80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b
491fb80240b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1f
b8023cb21b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb802
38b21b4c1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb80234b2
1b491fb80233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b
1fb8022fb21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8
022bb21b4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227
b21b491fb80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223b21b
4a1fb80222b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1f
b8021eb21b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb802
1ab21a4e1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b2
1a4e1fb80215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f
1fb80211b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8
020db21a4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209
b21a4f1fb80208b21a4f1fb80207b21a4f1fb80206b219501fb80205b219
511fb80204b219511fb80203b219501fb80202b219511fb80201b219511f
b80200b219511fb801ffb219511fb801feb219501fb801fdb219511fb801
fcb219511fb801fbb219511fb801fab219501fb801f9b219511fb801f8b2
19511fb801f7b219511fb801f6b219511fb801f5b218541fb801f4b21853
1fb801f3b218541fb801f2b218541fb801f1b218541fb801f0b218531fb8
01efb218541fb801eeb218541fb801edb218541fb801ecb218531fb801eb
b218531fb801eab218541fb801e9b218541fb801e8b218541fb801e7b218
541fb801e6b218531fb801e5b218541fb801e4b218531fb801e3b218541f
b801e2b218541fb801e1b218541fb801e0b218531fb801dfb218531fb801
deb218541fb801ddb218541fb801dcb218541fb801dbb218541fb801dab2
18531fb801d9b218541fb801d8b218541fb801d7b217571fb801d6b21756
1fb801d5b217561fb801d4b217571fb801d3b217571fb801d2b217571fb8
01d1b217571fb801d0b217561fb801cfb217561fb801ceb217571fb801cd
b217571fb801ccb217571fb801cbb217571fb801cab217561fb801c9b217
561fb801c8b217571fb801c7b217571fb801c6b217571fb801c5b217571f
b801c4b217571fb801c3b217561fb801c2b217571fb801c1b217571fb801
c0b217571fb801bfb217561fb801beb217561fb801bdb217571fb801bcb2
17571fb801bbb217571fb801bab217571fb801b9b217571fb801b8b21756
1fb801b7b217571fb801b6b217571fb801b5b217571fb801b4b217571fb8
01b3b2163f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801af
b2165b1fb801aeb2165b1fb801adb2165b1fb801acb2165b1fb801abb216
5b1fb801aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1f
b801a6b2165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801
a2b2165b1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2
163f1fb8019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b
1fb80199b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b1fb8
0195b2165b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb80191
b2165b1fb80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018db216
5b1fb8018cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1f
b80188b2165b1fb80187b2165b1fb80186b215611fb80185b215621fb801
84b215621fb80183b215661fb80182b215661fb80181b215551fb80180b2
15451fb8017fb215361fb8017eb215361fb8017db215611fb8017cb21562
1fb8017bb215621fb8017ab215641fb80179b215661fb80178b215661fb8
0177b215661fb80176b215661fb80175b215661fb80174b215661fb80173
b215451fb80172b215621fb80171b215621fb80170b215631fb8016fb215
641fb8016eb215661fb8016db215661fb8016cb215661fb8016bb215661f
b8016ab215661fb80169b215621fb80168b215621fb80167b215611fb801
66b215641fb80165b215641fb80164b215661fb80163b215661fb80162b2
15661fb80161b215661fb80160b215661fb8015fb215661fb8015eb21555
1fb8015db215451fb8015cb215451fb8015bb215361fb8015ab215611fb8
0159b215621fb80158b215621fb80157b215631fb80156b215641fb80155
b215661fb80154b215661fb80153b215661fb80152b215661fb80151b214
401fb80150b214551fb8014fb214561fb8014eb214831fb8014db2142d1f
b8014cb214401fb8014bb214401fb8014ab214411fb80149b214401fb801
48b214401fb80147b214411fb80146b2147e1fb80145b214871fb80144b2
147f1fb80143b214801fb80142b212461fb80141b212461fb80140b21246
1fb8013fb212461fb8013eb212441fb8013db212461fb8013cb211591fb8
013bb211591fb8013ab2115b1fb80139b2115b1fb80138b211471fb80137
b211581fb80136b2115a1fb80135b2115b1fb80134b2115b1fb80133b211
2c1fb80132b211471fb80131b211551fb80130b211571fb8012fb211571f
b8012eb211581fb8012db211591fb8012cb211591fb8012bb2115a1fb801
2ab2115a1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb80126b2
115b1fb80125b211561fb80124b211561fb80123b211571fb80122b21158
1fb80121b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8
011db2115b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119
b2105d1fb80118b2105e1fb80117b2105f1fb80116b2105f1fb80115b210
5f1fb80114b2105f1fb80113b2105f1fb80112b2105d1fb80111b2105e1f
b80110b2105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1fb801
0cb2105d1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb80108b2
105f1fb80107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2105f
1fb80103b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f621f
ff0f621ffe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f
641ff70f641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f641f
f00f641fef0f641fee0f641fed0f621fec0f621feb0f631fea0f641fe90f
641fe80f641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e681f
e10e671fe00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e
681fd90e681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261f
d20d6c1fd10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d
6b1fca0d6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261f
c30d311fc20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c711f
bc0c721fbb0c731fba0c741fb90c741fb80c741fb70c711fb60c711fb50c
721fb40c731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b7a1f
ad0b7c1fac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b
7e1fa50b2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f
9e0b7e1f9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b
7e1f960b7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f
8f0a4f1f8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f8255
805581ab80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d40
12060a7c557a557bab7a557955775578ab7755ba028600660285403c5576
ab755504751475747503f47501ab75014475013075010200751075207503
0c7455725573ab7255007250728072b072043bb072e072020072010ab8ff
c0b3721b1e46b8ffc0407c720d104671556f5570ab6f556e666d556a0325
1f6938675568ab67556638645565ab645563386255613860555f385d555e
ab5d555c385a555bab5a55593858555703251f5638545555ab5455533851
5552ab51554f384e554e03251f4d384b554cab4b554a38485549ab485547
3846554503381f001c101c201c0310b8ffc0404e1c1b1e46001b0142301b
401be01bf01b04001bb01bc01b03120f1a1f1a02290f1901434f19016f19
7f198f19030f18cf18024018292c460f17cf17df17ef1704134017292e46
0016101620160315b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b31631
3546b8ffc0401f162326460f15010f151f150245ef150186000301200101
0001100120010308b8ffc0b401151f4603bd010001000005000101900054
2b4bb80800524bb008505bb00188b02553b00188b040515ab00688b00055
5a5b58b101018e59b101024354b0144b515a58b101018e59858d8d001d42
4bb01d5358b203a0a01d42594bb0805358b20340401d42594bb0ff5358b2
0300001d42592b5e7375732b58403d0011e011f0110315bf10cf10020f0f
010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d
1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02
553f0b4f0b02400b3f4346400b2d30460003012001010001100120010308
b8ffc0b301151f462b5e7375732b2b745e732b2b5e73742b73742b737474
5e735901755e73742b2b2b2b5e732b5e732b7374755e735e735e73755e73
2b5e73002b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b5e73755e732b2b5e735f73737373742b2b2b2b2b2b5e73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2bb1000243545841ff028400640283006402820064028100640280006402
7f0064027e0064027d0064027c0064027b0064027a006402790064027800
640277006402760064027500640274006402730064027100640270006402
6f0064026e0064026d0064026c0064026b0064026a006402690064026800
640267006402660064026500640264006402630064026200640261006402
600064025f0064025e0064025d0064025c0064025b0064025a0064025900
640258006402570064025600640255006402540064025300640252006402
51006402500064024f0064024e0064024d0064024c0064024b0064024a00
640249006402480064024700640246006402450064024400640243006402
4200640241006402400064023f0064023e0064023d0064023c0064023b00
64023a006402390064023800640237006402360064023500640234006402
330064023200640231006402300064022f0064022e0064022d0064022c00
64022b0064022a0064022900640228006402270064022600640225006402
24006402230064022200640221006402200064021f0064021e0064021d00
64021c0064021b0064021a00640219006402180064021700640216006402
1500640214006402130064021200640211006402100064020f0064020e00
64020d0064020c0064020b0064020a006402090064020800640207006402
06006402050064020441ff00640203006402020064020100640200006401
ff006401fe006401fd006401fc006401fb006401fa006401f9006401f800
6401f7006401f6006401f5006401f4006401f3006401f2006401f1006401
f0006401ef006401ee006401ed006401ec006401eb006401ea006401e900
6401e8006401e7006401e6006401e5006401e4006401e3006401e2006401
e1006401e0006401df006401de006401dd006401dc006401db006401da00
6401d9006401d8006401d7006401d6006401d5006401d4006401d3006401
d2006401d1006401d0006401cf006401ce006401cd006401cc006401cb00
6401ca006401c9006401c8006401c7006401c6006401c5006401c4006401
c3006401c2006401c1006401c0006401bf006401be006401bd006401bc00
6401bb006401ba006401b9006401b8006401b7006401b6006401b5006401
b4006401b3006401b2006401b1006401b0006401af006401ae006401ad00
6401ac006401ab006401aa006401a9006401a8006401a7006401a6006401
a5006401a4006401a3006401a2006401a1006401a00064019f0064019e00
64019d0064019c0064019b0064019a006401990064019800640197006401
960064019500640194006401930064019200640191006401900064018f00
64018e0064018d0064018c0064018b0064018a0064018900640188006401
870064018600640185006441800184006401830064018200640181006401
800064017f0064017e0064017d0064017c0064017b0064017a0064017900
640178006401770064017600640175006401740064017300640172006401
71006401700064016f0064016e0064016d0064016c0064016b0064016a00
640169006401680064016700640166006401650064016400640163006401
6200640161006401600064015f0064015e0064015d0064015c0064015b00
64015a006401590064015800640157006401560064015500640154006401
5300640152006401500064014f0064014e0064014c0064014b0064014a00
64014900640148006401470064014600640145006401440064014300642b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b00737373737373742b2b2b2b2b2b2b2b2b2b185f5e00
00>
[12553 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 11466 36 <00030096fff704f000de000b001700230044b0852b58bf0018027c001e00
0c027b00120000027cb7062115091b0f034c003f3333cd3232012fe12fe1
2fe131301bb7211509401b0f034c00183f33331acd323230315925140623
222635343633321605140623222635343633321605140623222635343633
321601692f3c3a2e2f3c3a2e01c32e3c3a2e2f3b3b2d01c42f3c3a2e2f3c
3a2e6c462f2e44462f2e44462f2e44462f2e44462f2e44462f2e>WAAAAA+Calibri AddT42Char 
1 1676 6 <000100acfffa0158051400150061b0852b58b73f174f17af170300b8ffe8
b310014d00b8fff0b30f014d00b8fff0b30d014d00b8fff6b30c014d00b8
ffe8b30b014d00ba0211000affc0b715014d0a10520555003f3f012f2be1
2b2b2b2b2b31305d1bb31052055500183f3f30315925140e0223222e0235
11343e0233321e02150158081421191822140809152117192114081a080c
070505070c0804da080c070505070c08>WAAAAA+Calibri AddT42Char 
1 5126 17 <00010025fffa02860578003c0088b0852b58b2161000b8ffe0b40b014d00
1bb8fff0b30d014d1bb8fff0b40f10014c1bb8fff6b30c014d1bb8ffe8b3
0b014d1bb801f9b2302a25b8ffd040121011014c250aed36471a26ed3048
204c1048003f3f3fed323fed012f2bc433f12b2b2b2bc42b33c431301b40
11360aed6c36471a3026ed6c3048204c104800183f3f3f2b323f2b303159
01140e0223222e0223220e02151533321e02151406232311140e0223222e
02351123222635343e02333335343e0233321e0402860405080607151e29
1b2534200ec9080b0905120fc908132018182013087f101004080c087f23
486d4a2342240c0803050f13170e05090b091833513a6207111a132420fc
eb080b080404080b0803152024131a11075d5e8756290d0f0c131b00>WAAAAA+Calibri AddT42Char 

1 0 1 <> WAAAAA+Calibri AddT42Char 
1 4052 14 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>WAAAAA+Calibri AddT42Char 
1 7852 25 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>WAAAAA+Calibri AddT42Char 
1 7526 24 <00010099fffa03a003ca003200b8b0852b58400f12100b014d13100b014d
3f34012a13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8
fff6b30c014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d01
4d0b100f014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b8
0106400a2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b
2b2b10e12b2b2b2b2b3931305d002b2b1bb12d10b80106400b6c2d4a2a19
2449194c054c00183f3f3f12393f2b30315925140e0223222e023511342e
022322060711140e0223222e023511343e0233321e021515363633321e02
1503a00812201819201208182e49303e7c44081220191820130706121c17
161d10074c974d5a7b4c2119080b080404080b08020f4d5e44245855fd8b
080b080404080b080384080b090303090b0877554f3d66896000>WAAAAA+Calibri AddT42Char 
1 9258 29 <00010021ffef026d04ad003a0089b0852b58b4290011232db8fff0b30f01
4d2db8fff0b30d014d2db8fff6b30c014d2db8ffe8b310014d2db8ffe8b3
0b014d2db801f8400c170d2ded23481d0ded174831b80104b1074d003fed
3fedcd3fed012f33e12b2b2b2b2b32cdc43231301b4011232ded6c23481d
1740170ded6c17480731b80104b26c074d00183f2b3f2b1a10cd3f2b3031
5925140e0423222e02351123222635343e02333335343e0233321e021515
33321e02151406232311141633323e0233321e02026d081020292e174664
401d7e0f1205080d087d0713201819201208e7080c0904120fe737471724
1c1408050905045b1d22100e0906254b734e020e2024131a1107d6070c09
0404090c07d607111a132420fe0a5d5f090a09050e18>WAAAAA+Calibri AddT42Char 
1 3276 12 <0002005cffed033f03ca0033004000f6b0852b5840200f421f422f42030b
0917340c0c014d34100d014d34180b014d34100f10014c34b801f7400e00
27270f00010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8
ffe8b30b014d3ab8ffe8b40f10014c3ab8020840141117c500341034023b
c0340100340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d
04002f3fed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b
5e5d392f10e12b2b2b2b323931305e5d1b400d0b17013417c56c34342e41
222ab8011b40166c00220116042222042e1dea6c2e4a0c3ddc6c0c4d0400
182f3f2b3f2b12392f5f5e5d2b1112392f2b5d3031592514060623222626
3535060623222e0235343e02333335342e0223220e0223222e0235343e04
33321e02150723220e0215141633323637033f101c1b1a1f0e3b91514773
512d3e74a8697c16314e393d6149310c080c0904071b4256663461885426
a48d4464421f5950416f3d180c0c06060c0c5a3f46254666414c704a2546
3450351b1d231d0810190f191d1a231d132c557e54c4172d3f2946534244
>WAAAAA+Calibri AddT42Char 
1 8796 28 <00010051ffed02ce03ca00490110b0852b58400c2f4b3f4b4f4b7f4baf4b
0541b8fff0b30d014d41b8fff6b30c014d41b8fff0b30f014d41b8ffc0b3
13014d41b8fff0b310014d41b8fff0b30b014d41b801dc401f243224320c
1b100d014d1b0a0c014d1b1010014d1b100b014d1b100f014d1bba01f600
00ffc0400a0f014d000c400b014d0cb8ffc0402613014d3f0caf0c020c2e
dd370aeb115011601170110337113711163cdb411b05294a16e8054d003f
ed3f123939ed1139392f2f5d10ed10ed012f5d2b2bd42be12b2b2b2b2b12
39392f2fe12b2b2b2b2b2b31305d1b4025372edd6c110aeb6c0011101120
11030e033711371116293cdb6c411b05294a0516e86c054d00183f2b3f12
39392b1139392f2f5f5e5d2b2b30315901140e0223222e0435343e023332
1e0233323e0235342e0635343e0233321e0615140e0223222e0223220e02
15141e0602ce335e824e30574530160a04060b070b2b3f56382a44321b27
40505551402729527b5224483a291507030303070a06092236492f2a4029
1528405255534027010e456c4a260f171914241f131a10071b201b122336
252634281f222b3e563c3561492c0c1215100c0f16101119100716191613
23301c27352820222a3c5400>WAAAAA+Calibri AddT42Char 
1 4744 16 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>WAAAAA+Calibri AddT42Char 
1 8520 27 <00010099fffa02a703ca00330086b0852b58b4703501260fb8fff6b30c01
4d0fb8ffe8b30b014d0fb8fff0b40f10014c0fb8fff0b30d014d0fb801f8
4012004013014d004011014d00200d014d001a0ab8012540092b4a260f15
2049154c003f3f1239393fed012fc42b2b2be12b2b2b2b3931305d1bb12b
0ab80125400a6c2b4a260f152049154c00183f3f1239393f2b3031590114
0e0223222e0223220e020711140e0223222e023511343e0233321e021515
3e0333321e0602a70206090808171d24151930353a230812201918201307
06121c17161d100725413a391d0d21241d0c0403010362161e1109090908
142e4c37fdb0080b080404080b080384080b090303090b08833644270f03
080a0a090e1b>WAAAAA+Calibri AddT42Char 
1 8170 26 <00020099fe9403d503ca002a003d00b1b0852b58b53f3f0121360ab8fff0
b30d014d0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0a
b801f84017152b200d014d2b120c014d2b180f10014c2b180b014d2bb802
0a400900150a363521040530b80105b6264a1b49104f39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d1bb7
0a36352104052630b8010540096c264a1b49104f0539b80105b26c054d00
183f2b3f3f3f2b12173930315901140e0223222e022711140e0223222e02
3511343e0233321e0215153e0333321e0207342e0223220e020711161633
323e0203d53363925e2844414024081220191820130706121c14151b1207
294c4d512d628a5728ae15335640203e404627447a433e59371a01e976bc
834710223423fe3e080c080404080c0804e9090b080303080b09792a3e29
154c84af754581643c13294331fe9a53583c647c>WAAAAA+Calibri AddT42Char 
1 4394 15 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>WAAAAA+Calibri AddT42Char 
1 11350 35 <0001002afede017300e0001b001db0852b58b20b171c0010d4cd31301bb3
0b40171c001810d41acd30315925140e0207070e0323222e02371335343e
0233321e020173060e171189050d13191311170a0104850b18241a192417
0b8f1f342e2d19ce070a080303070c080113801b201006061020>WAAAAA+Calibri AddT42Char 
1 9550 30 <00010094ffed039c03bc003200b8b0852b58401f3f34010b27100d014d27
0a0c014d27080b014d27100f10014c27100b014d27b801f9b6004011014d
001fb8fff0b30d014d1fb8fff6b30c014d1fb8fff8b40f10014c1fb8fff8
b30b014d1fb8fff0b40f10014c1fb8fff0b30b014d1fb801f94009132d49
270b05194924b80105b30e4d054c003f3fed3f1239393f012fe12b2b2b2b
2b2bd42be12b2b2b2b2b3931305d1b40092d49270b0519490e24b80105b4
6c0e4d054c00183f3f2b3f1239393f30315925140e0223222e0235350606
23222e023511343e0233321e021511141e023332363711343e0233321e02
15039c07121d15171d11064d964d5a7b4c210714201818201308172f4830
3e7b4507141f191820120919080b080404080b0877554e3c678962022208
0b090303090b08fdf44f5f432558550275080b090303090b0800>WAAAAA+Calibri AddT42Char 
1 6874 22 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>WAAAAA+Calibri AddT42Char 
1 6268 20 <00020085fffa0151052f0015002100a7b0852b58b73f234f236f230316b8
ffe8b30d014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d
16b8fff0b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d
15b8fff6b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b6
0a1f400f014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4
e12b2b2b2b2b2b31305d1bb1191fb8013eb56c191049054c00183f3fc62b
30315925140e0223222e023511343e0233321e0215131406232226353436
333216013e08122019182013070713201819201208132c3b3a2b2c3b3a2b
19080b080404080b080384070c080404080c0701303a2a29393a2a29>WAAAAA+Calibri AddT42Char 
1 5424 18 <00030035fe93038903c8003e004e005f0116b0852b584015122d47100f01
4d47080c014d47201013014c47333fb8fff8b30c014d3fb8fff0b30f014d
3fb8ffe0b61013014c3f074fb8ffe0400d0f12014c4f1b040f3003330707
b8ffe0b310014d1bb8ffc0400d10014d2d33071b1b07332d0400b8ffe040
340b014d0058100f014d58201012014c582a25400b12014c250f30070338
4ada0c53e81515603803e93c482a2042d9384a5bd9204f003fed3fed1239
3fed1112392fedd6ed121739012f2b33cd2b2bc42b17392f2f2f2f2b2b11
12173910cd2b10cd2b2b2b10cd2b2b2b10cd31301b40270f300703380c4a
da6c0c151553e86c151560383c03e96c3c482a203842d96c384a205bd96c
204f00183f2b3f2b12393f2b1112392f2b10c62b12173930315901140623
23161615140e0223222627060615141617171e0315140e0223222e023534
3e0237262635343637262635343e023332161721321601342623220e0215
141633323e0213342627270e0315141633323e020389130f81231c325d80
4e37631b12174136eb4370522e346ba6716d99622c10213120312f32251f
24345c814c29471f01101111fefe655d30472f17655b31482f17535f51e9
2029180984764b653e1b0374231f24572f4e78532c1d16122e1e232e020a
02213d593b3e70553125405934213e383319194c2c3d6026255d424d7a54
2d090821fef15c672038492859661f3748fd5e3a3f0208192d2928154143
1d303e00>WAAAAA+Calibri AddT42Char 
1 5968 19 <00010099fffa03a005710032009db0852b58b43f34012a13b8ffe8b30b01
4d13b8fff0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f8
40171e0b0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a
00400c014d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239
012f2f2be12b2b2b2b10e12b2b2b2b3931305d1bb32a192d10b801064009
6c2d4a2446194c054c00183f3f3f3f2b123930315925140e0223222e0235
11342e022322060711140e0223222e023511343e0233321e021511363633
321e021503a00812201819201208182e49303e7c44081220191820130707
132018192012084790495a7b4c2119080b080404080b08020f4d5e442458
55fd8b080b080404080b080538080c080404080c08fde54b493d66896100
>WAAAAA+Calibri AddT42Char 
1 7024 23 <00010099fffa05d003ca0050011eb0852b58401b12100b014d13180b014d
26100b0c014c27180b0c014c7052014613b8fff6b30c014d13b8ffe8b30b
014d13b8fff0b310014d13b8fff0b30f014d13b8ffeab30d014d13b801f8
401e1e160d014d1e1e320a0a0c014d0a100d014d0a180b014d0a100f1001
4c0ab801f9b7504011014d503e27b8fff6b30c014d27b8ffe8b30b014d27
b8fff0b310014d27b8fff0b30f014d27b8fff0b30d014d27bb01f8003200
100106b24b4a24b80106400d414a3e462d38492d4c194c054c003f3f3f3f
1239393fed3fed012fe12b2b2b2b2b39d42be12b2b2b2b11392f2be12b2b
2b2b2b3931305d002b2b2b2b1bb14b10b80106b46c4b4a4124b80106400e
6c414a3e462d38492d4c194c054c00183f3f3f3f1239393f2b3f2b303159
25140e0223222e023511342e022322060711140e0223222e023511342e02
2322060711140e0223222e023511343e0233321e021515363633321e0217
3e0333321e021505d00812201819201308142c442e397345081320181721
1307162c432e397444081220191820130706121c17161d10074c8f493859
4430102d514b47245776491f19080b080404080b080223395e44245855fd
8b080b080404080b080223395e44245855fd8b080b080404080b08038408
0b090303090b0877554f1a2f412831442a133d66894c>WAAAAA+Calibri AddT42Char 
1 382 2 <00020023fffa047e05140022002600dcb0852b58b90024ffe8b40c10014c
23b8ffe8b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8ff
f0401a0b10014c25100b10014c0d100b10014c0c100b10014c40280125b8
fff0402c0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02
af23bf23cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d11
173911123939113310ed3211333130012b5d2b2b2b2b2b2b002b2b1b401e
2423260c25f46c0b0c18221d230a0d0116040c230c230c121d5212550555
00183f3f3f1239392f2f1117391112393911332b32113330315925161606
0623222e02270321030e03232226263637013e0333321e02170723032104
75080110251f1f251309046ffde66a030a13231c1d250f010801b2040d19
271e202a1a0e047b01df01c23d161b0e0403070c09013bfec9090d090405
0e1b1604b20b0e080303080f0b8dfd7b>WAAAAA+Calibri AddT42Char 
1 10284 32 <00010035fffa058403bc00450131b0852b58b90047ffc0403d0f014d3808
0c014d29380137080c014d252e01262101262001261f01261e01261d0127
1c012804012903013a3b013b3a013b2d013c2c01102015014d10b8ffe0b3
10014d10b8ffe0400a0d014d10200c014d100fb8ffe0b310014d0fb8ffe0
400c0d014d0f200c014d0f414910b8ffe040200f014d3f104f106f107f10
04104012164810334925493a902c012c200f014d2cb8ffc0401013164867
2c772c02452c012c174c094c003f3fd55d5d2b2b5dc43f3fcd2b5d2b3f01
2f2b2b2b2f2b2b2b2b3130005d5d5d5d015d5d5d5d5d5d5d5d5d2b5d2b2b
1b401d41490f101f103f104f10040c10401216481040334925493a502c01
032cb8ffc04012131648262c362c02022c010d042c174c094c00183f3fd5
5f5e5d5d2b5f5dc43f3f1acd2b5e5d3f30315901140607010e0323222e02
27032707030e0323222e022701262635343e0233321e0217131737133e03
33321e0217131737133e0333321e0205840405fef7030d17281e1f2a190c
03bd0202af030d1a291e1f27190c03fef90504081320171c22120803d902
02c70209121f19181f120802d70201d6020913211a181d1107039f07140f
fca90b0e080304080e0a028d0909fd730b0e080304080e0a03570f140709
0b070203070d09fd1a090902e6090d070303070c08fd18090902e6090d07
0302080a>WAAAAA+Calibri AddT42Char 
1 3696 13 <00020099ffed03d50571002a003d00b6b0852b58b53f3f010a2136b8fff6
b30c014d36b8fff0b30d014d36b8ffe8b30b014d36b8fff0b40f10014c36
b801f8401b152b120c014d2b200d014d2b180b014d2b1810014d2b100f01
4d2bb8020a400900150a363521040530b80105b6264a1b46104c39b80105
b1054d003fed3f3f3fed121739012fd4e12b2b2b2b2b10e12b2b2b2b3239
31305d1bb70a36352104052630b8010540096c264a1b46104c0539b80105
b26c054d00183f2b3f3f3f2b12173930315901140e0223222e022715140e
0223222e023511343e0233321e0215113e0333321e0207342e0223220e02
0711161633323e0203d53363905d2b4946462708121b15141c1206071320
1819201208284b484828628b5728ae15345640203e404527447c433e5837
1901e775bb844611263a296e080c070404070c080538080c080404080c08
fde5293823104e83b0754582643d122a4232fe9953573c637b00>WAAAAA+Calibri AddT42Char 
1 2970 11 <000100aaffed04790514002b00b5b0852b58401d602d01201810014d2010
0f014d20100d014d200a0c014d20180b014d20b802104011004015014d00
4013014d004011014d0016b8ffe8b310014d16b8fff0b30f014d16b8fff0
b30d014d16b8fff6b30c014d16b8ffe8b30b014d16ba0210000affc0b315
014d0ab8ffc0400913014d0a265210521bb80129b10556003fed3f3f012f
2b2be12b2b2b2b2bd42b2b2be12b2b2b2b2b31305d1bb526521052051bb8
0129b26c055600183f2b3f3f30315901140e0223222e023511343e023332
1e021511141e0233323e023511343e0233321e021504794580b8756bb07e
440814201a182213082c5375494b75512b081421191821130901de76b980
423e79b6770323080c070505070c08fcf25a86592d2c5882570317080c07
0505070c0800>WAAAAA+Calibri AddT42Char 
1 9876 31 <00010022fffa037b03bc002c010db0852b58b90023fff840170b0c014c1f
080b0c014c251f011e080b0c014c251e0116b8fff0b30b014d15b8fff0b3
0b014d14b8ffe8b30b014d13b8ffe8b30b014d12b8ffe8b30b014d11b8ff
f040370b014d37110126110127100128050122280b014d3d220124220121
280b014d3f210124210120280b014d3d2001242001270f0176210121b8ff
d04009111548212013014d21b8ffe8400910014d21200f014d21b8ffe8b3
0c014d21b8fff0400c0b014d212849210b1a490b4c003f3f12393f012f2b
2b2b2b2b002b5d31305d5d5d2b5d5d2b5d5d2b015d5d5d5d2b2b2b2b2b2b
5d2b5d2b2b1bb5002101100521b8ffd0400b1115482849210b1a490b4c00
183f3f12393f2b5f5e5d30315901140e0207010e0323222e0227012e0235
343e0233321e0217131737133e0333321e02037b01020302fecd040d1a28
1e1e28190e04fece04050108131f171d23130904fe0403fb020a13211b17
1e1107039f04090a0c07fca90b0e080304080e0a03570c120903080c0702
03080c09fd1a0c0c02e6090c080302080b00>WAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>WAAAAA+Calibri AddT42Char 
WAAAAA+Calibri /CharStrings get begin
/g36 36 def
/g6 6 def
/g17 17 def
/g1 1 def
/g14 14 def
/g25 25 def
/g24 24 def
/g29 29 def
/g12 12 def
/g28 28 def
/g16 16 def
/g27 27 def
/g26 26 def
/g15 15 def
/g35 35 def
/g30 30 def
/g22 22 def
/g20 20 def
/g18 18 def
/g19 19 def
/g23 23 def
/g2 2 def
/g32 32 def
/g13 13 def
/g11 11 def
/g31 31 def
end
WAAAAA+Calibri /Encoding get
dup 33 /g36 put
dup 34 /g6 put
dup 35 /g17 put
dup 36 /g1 put
dup 37 /g14 put
dup 38 /g25 put
dup 39 /g24 put
dup 40 /g29 put
dup 41 /g12 put
dup 42 /g28 put
dup 43 /g16 put
dup 44 /g27 put
dup 45 /g26 put
dup 46 /g15 put
dup 47 /g35 put
dup 48 /g30 put
dup 49 /g22 put
dup 50 /g20 put
dup 51 /g18 put
dup 52 /g19 put
dup 53 /g23 put
dup 54 /g2 put
dup 56 /g32 put
dup 60 /g13 put
dup 65 /g11 put
dup 71 /g31 put
pop
end
%ADOEndSubsetFont
/YQMNWE+Calibri /WAAAAA+Calibri findfont ct_VMDictPut/YQMNWE+Calibri*1 [33{/.notdef}rp /g36 /g6 /g17 /g1 /g14 /g25 /g24 /g29 /g12 /g28 /g16 /g27 /g26 /g15 /g35 /g30 /g22 /g20 /g18 /g19 /g23 /g2 /.notdef /g32 3{/.notdef}rp /g13 4{/.notdef}rp /g11 5{/.notdef}rp /g31 184{/.notdef}rp]YQMNWE+Calibri nfYQMNWE+Calibri*1 [4 0 0 -4 0 0 ]msf605.81 184.654 mo(!!)[2.75 0 ]xsh605.946 145.294 mo(A*+,$%&5+*$4&5+/$)[2.62518 1.62482 2 1.37482 .875183 1.75 2.12518 3.25 2 1.62518 .875183 2.12482 2.12476 3.25 2 1 0 ]xsh605.946 150.334 mo(5&\(2&'$2*$.+\(+%\(+.)[3.24994 2.12598 1.37402 .874023 2.12598 2.12598 .873962 .874023 1.62604 .874023 2.12598 1.99799 1.37402 1.99799 1.75006 1.37402 1.99799 0 ]xsh637.696 150.334 mo(!)sh606.293 156.334 mo("\($2*$+G+'2'3/$%1&*+)[.999939 1.37524 .874817 .875183 1.62482 .875244 2 1.74994 2 2.12482 .875183 2.12482 1.87512 1.00006 .875183 1.75 .875183 2.12482 1.62518 0 ]xsh606.293 161.374 mo(82'.&8)[2.87476 .874817 2.12677 2.12677 2.12677 0 ]xsh619.293 161.374 mo(/$4+\)\(+,$2*$)[1 .875183 2.12476 2 1.87524 1.37518 2 1.37524 .874756 .874817 1.62482 0 ]xsh606.293 165.214 mo(\(0,'+.$!)[1.37518 2.12317 1.37524 2.12317 1.99921 2.12317 .875183 0 ]xsh606.293 171.214 mo(6\($\)$*-+%2#2%$\(25+/$)[2.37512 1.37524 .875183 1.87524 .875183 1.62482 2.12476 2.00006 1.75 .875183 1.25 .875183 1.75006 .875183 1.37482 .875244 3.24994 2 1 0 ]xsh606.293 176.254 mo(,&<&\($G\)%005$2*$)[1.37518 2.12317 2.12317 2.12317 1.37524 .875183 1.75116 1.87524 1.75122 2.12317 2.12317 3.25116 .875183 .875244 1.6272 0 ]xsh606.293 180.334 mo(\(0,'+.)[1.37518 2.12317 1.37524 2.12317 1.99921 0 ]xsh618.293 180.334 mo(!)sh663.122 157.151 mo
663.122 157.92 671.252 158.544 681.281 158.544 cv
691.31 158.544 699.44 157.92 699.44 157.151 cv
699.44 165.513 li
699.44 166.283 691.31 166.907 681.281 166.907 cv
671.252 166.907 663.122 166.283 663.122 165.513 cv
cp
0 0 0 0 cmyk
f
663.122 157.151 mo
663.122 156.381 671.252 155.757 681.281 155.757 cv
691.31 155.757 699.44 156.381 699.44 157.151 cv
699.44 157.92 691.31 158.544 681.281 158.544 cv
671.252 158.544 663.122 157.92 663.122 157.151 cv
cp
f
.25 lw
699.44 157.151 mo
699.44 157.92 691.31 158.544 681.281 158.544 cv
671.252 158.544 663.122 157.92 663.122 157.151 cv
663.122 156.381 671.252 155.757 681.281 155.757 cv
691.31 155.757 699.44 156.381 699.44 157.151 cv
699.44 165.513 li
699.44 166.283 691.31 166.907 681.281 166.907 cv
671.252 166.907 663.122 166.283 663.122 165.513 cv
663.122 157.151 li
.75021 .679683 .670222 .90164 cmyk
@
.75021 .679683 .670222 .90164 cmyk
%ADOBeginSubsetFont: MAAAAA+Calibri Initial
ct_T42Dict begin
-0.5 -0.313 1.238 1.023
 256 array 0 1 255 {1 index exch /.notdef put} for  /MAAAAA+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000005bc6670
676d000000000000067800000d2b676c79660000000000003a30000035b8
6865616400000000000013a4000000366868656100000000000013dc0000
0024686d74780000000000001400000000ac6c6f636100000000000014ac
000000586d6178700000000000001504000000206e616d65000000000000
152400000020707265700000000000001544000024eb6764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000051a
001500a0fff8ff77fff803480066015401cc00ac00a200b4008c0101006e
00000000000000000000011f000a04e2001400b4fff6035c00140028fdda
0568fea2ffef405a868574737271706f6e6d6c6b6a696867666564625f5e
5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f3e
3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a0908
07060504030201002c4523466020b02660b004262348482d2c4523462361
20b02661b004262348482d2c45234660b0206120b04660b004262348482d
2c4523462361b0206020b02661b02061b004262348482d2c45234660b040
6120b06660b004262348482d2c4523462361b0406020b02661b04061b004
262348482d2c0110203c003c2d2c20452320b0cd442320b8015a51582320
b08d44235920b0ed51582320b04d44235920b0042651582320b00d442359
21212d2c20204518684420b001602045b04676688a4560442d2c01b10b0a
432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b02823
70b10228453ab10200080d2d2c2045b00325456164b050515845441b2121
592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b000
8b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a03458a
8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b
525845441b2121592d2c01b005251023208af500b0016023edec2d2c01b0
05251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b001
600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d
2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621bb2
00402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f2b
59b002602d2c0c6423648bb84000626023212d2c45234560234560234560
23766818b08062202d2cb00426b00426b00425b0042545234520b0032660
62636820b0032661658a2344442d2c2045b0005458b040442045b0406144
1b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b0
1423421b2121592d2c4b515820b0032545695358441b2121591b2121592d
2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a60442d
2c45234560442d2c4b235158b90033ffe0b134201bb3330034005944442d
2cb0164358b00326458a586466b01f601b64b020606620581b21b04059b0
01615923586559b02923442310b029e01b2121212121592d2cb0164358b0
04254564b020606620581b21b04059b0016123586559b0292344b00425b0
0725082058021b0359b0052510b004252046b0042523423cb0072510b006
252046b00425b0016023423c2058011b0059b0052510b00425b029e0b007
2510b00625b029e0b00425b00725082058021b0359b00425b003254348b0
0625b00325b0016043481b2159212121212121212d2cb0164358b0042545
64b020606620581b21b04059b0016123581b6559b0292344b00525b00825
082058021b0359b0042510b005252046b0042523423cb00425b0072508b0
072510b006252046b00425b0016023423c2058011b0059b0042510b00525
b029e0b02920456544b0072510b00625b029e0b00525b00825082058021b
0359b00525b003254348b00425b0072508b00625b00325b0016043481b21
59212121212121212d2c02b00425202046b004252342b0052508b0032545
48212121212d2c02b0032520b0042508b0022543482121212d2c45232045
1820b00050205823652359236820b040505821b04059235865598a60442d
2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b2121
592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d2c
b002435458b0462b1b21212121592d2cb002435458b0472b1b212121592d
2cb002435458b0482b1b21212121592d2cb002435458b0492b1b21212159
2d2c2320b000508a8a64b10003255458b0401bb10103255458b005438b59
b04f2b5923b0622b2321235865592d2cb108000c215460432d2c01462346
6023466123201020468a61b8ff80628ab140408a704560683a2d2c208a23
49648a2353583c1b21592d2c4b52587d1b7a592d2cb012004b014b54422d
2cb1020042b123018851b1400188535a58b910000020885458b202010243
604259b12401885158b920000040885458b2020202436042b12401885458
b2022002436042004b014b5258b2020802436042591bb940000080885458
b202040243604259b94000008063b80100885458b202080243604259b940
00010063b80200885458b202100243604259b12601885158b94000020063
b80400885458b202400243604259b94000040063b80800885458b2028002
43604259b12801885158b94000080063b81000885458ba00020100000243
604259595959595959b10002435458400a0540084009400c020d021bb101
02435458b2054008ba010000090100b30c010d011bb18002435258b20540
08b80180b109401bb901000002435258b2054008ba0180000901401bb901
800002435258b2054008b80200b109401bb2054008ba0100000901005959
59b9400000808855b94000020063b8040088555a58b30c000d011bb30c00
0d0159595942424242422d2c451868234b51582320452064b04050587c59
688a6059442d2cb00016b00225b0022501b001233e00b002233eb1010206
0cb00a236542b00b234201b001233f00b002233fb10102060cb006236542
b0072342b00116012d2c20b82000628a6023622d2cb0072558001b0159b0
042510b00325b0022520b8ffff545821cd1bed5921b006255cb006255a58
b0092b5920b005254ab0042547b004254760b0062547b0806361b00225b0
005558b00325b00725496359b0082558001b0159b00425b0062549b00925
5cb009255a58b0092b59b0072546b0806361b0032520b0005558631b2159
612320b0005558b080631b21b08059b0592bb006255c586959b004252020
10b00048233ab0062658001b0159b0052658b003252f598a12233221212d
2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb00925b0
072559b00225b00225070cb005256323b00625636020b940000400635358
21b00426b00426b00a1bb94000040063655158b0042665b0042665b00a1b
b00426b00426b000b00325b003250b0d0ab0092eb00725b007250b0d0ab0
0b2eb00525b0052507595920b0005558b00525b0052587b00725b007250b
b0092510b00b25b0092620b8ffff545821cd1bed59b00525b0052507b008
25b00b254923b00625b0062587b00a2510b00b25c15920b00051b8005223
78b00161b00225b00725b0072507b00a25b00d254961b08062b00525b005
250bb00a252338b00625b0062587b00825b008250bb00a2510b00b25c4b0
0625b0062507b00925b00c2549b0032554b8ffa723792121212121212121
212121212d2c23b0005458b9400000001bb900004000598ab0005458b940
0000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9000040
00590db05b2b2d2c8a8a080d8ab0005458b9400000001bb90000400059b0
5b2b2d2cb00426b00426080db00426b00426080db05b2b2d2cb0022563b0
206066b00225b82000626023622d2c204569442d2c234ab1024e2b2d2c23
4ab1014e2b2d2c238a4a234564b0022564b002256164b003435258212064
59b1024e2b23b000505865592d2c238a4a234564b0022564b002256164b0
0343525821206459b1014e2b23b000505865592d2c20b003254ab1024e2b
8a103b2d2c20b003254ab1014e2b8a103b2d2cb00325b003258ab0672b8a
103b2d2cb00325b003258ab0682b8a103b2d2cb0032546b003254660b004
252eb00425b00425b0042620b000505821b06a1bb06c592bb0032546b003
25466061b08062208a2010233a232010233a2d2cb0032547b003254760b0
052547b0806361b00225b00625496323b005254ab080632058621b2159b0
042646608a468a4660b02063612d2cb00426b00425b00425b00426b06e2b
208a2010233a232010233a2d2c2320b001545821b00225b1024e2bb08050
20605920606020b001515821211b20b005515821206661b0402361b10003
2550b00325b00325505a5820b00325618a535821b000591b21591bb00754
582066616523211b2121b000595959b1024e2b2d2cb00225b004254ab000
5358b0001b8a8a238ab00159b004254620666120b00526b0062649b00526
b00526b0702b236165b02060206661b02061652d2cb0022546208a20b000
505821b1024e2b1b452321596165b00225103b2d2cb0042620b802006220
b80200638a236120b05d602bb00525118a128a20398a58ba005d10000004
266356602b23212010204620b1024e2b23611b2321208a201049b1024e2b
593b2d2cba005d10000009256356602bb00525b00525b00526b06d2bb15d
0725602bb00525b00525b00525b00525b06f2bba005d1000000826635660
2b20b0005258b0502bb00525b00525b00725b00725b00525b0712bb00217
38b00052b00225b001525a58b00425b0062549b00325b00525496020b040
5258211bb000525820b0025458b00425b00425b00725b0072549b0021738
1bb00425b00425b00425b0062549b0021738595959595921212121212d2c
b12801885158b94000040063b8080088545c1bb001592d2cb12801885158
b94000040063b8080088545c1bb001592d000001000000063333a1099dfd
5f0f3cf50019080000000000bbeb7ccc00000000d5968a66fbfafd8009ec
083600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec00010000000000000000000000000000002b040e000001cf000004a1
00230444006104ec00ac03e800ac050c005b020400ac06d700ac042200ac
045800ac03ad004703e6000f052200aa048a002203d5005c043400990362
005a0434006003fb005d0271002503c400350434009901d6008503a30099
01d6009906640099043400990438005a0434009902ca00990321005102ae
002104340094039d002205b8003503770029039f002201ff002a05860096
0273004505750000040e0072000000bf00bf016c02040281031903de0431
04f3057f0640073307a7084008be09900a420aed0b9c0c5b0cf00e000e96
0f1c0fc51010110b11ae124d12fc1386146d14ff15a2166e176f180e1883
18bd191519411a211adc00010000002b043a00170108000800020010002f
0087000012360235000400010000000100120001000000000006000e0000
4851414a47572b43616c69627269b10903415302c802c60038001f02c702
c60038001f02dd003802da005502d9003802d7005502d8003802d7005502
d6003802d5005502d4003802d3005502d2003802d1005502bf003802be00
5502bd003802bc0055000402db003402db005402db0003003402db005402
db006402db00a402db00d402db0005006b02d50001000b02d10001001402
c2004402c2006402c2007402c2009402c2000500a402be000100a402bc00
0100200284b40918014a20b80283b40918014a20b80282b40918014a20b8
0281b40918014a20b80280b40918014a20b8027fb40918014a20b8027eb4
0918014a20b8027db40918014a20b8027cb40918014a20b8027bb4091801
4a20b8027ab40918014a20b80279b40918014a20b80278b40918014a20b8
0277b40918014a20b80276b40918014a20b80275b40918014a20b80274b4
0918014a20b80273b40918014a20b80271b40918014a20b80270b4091801
4a20b8026fb40918014a20b8026eb40918014a20b8026db40918014a20b8
026cb40918014a20b8026bb40918014a20b8026ab40918014a20b80269b4
0918014a20b80268b40918014a20b80267b40918014a20b80266b4091801
4a20b80265b40918014a20b80264b40918014a20b80263b40918014a20b8
0262b40918014a20b80261b40918014a20b80260b40918014a20b8025fb4
0918014a20b8025eb40918014a20b8025db40918014a20b8025cb4091801
4a20b8025bb40918014a20b8025ab40918014a20b80259b40918014a20b8
0258b40918014a20b80257b40918014a20b80256b40918014a20b80255b4
0918014a20b80254b40918014a20b80253b40918014a20b80252b4091801
4a20b80251b40918014a20b80250b40918014a20b8024fb40918014a20b8
024eb40918014a20b8024db40918014a20b8024cb40918014a20b8024bb4
0918014a20b8024ab40918014a20b80249b40918014a20b80248b4091801
4a20b80247b40918014a20b80246b40918014a20b80245b40918014a20b8
0244b40918014a20b80243b40918014a20b80242b40918014a20b80241b4
0918014a20b80240b40918014a20b8023fb40918014a20b8023eb4091801
4a20b8023db40918014a20b8023cb40918014a20b8023bb40918014a20b8
023ab40918014a20b80239b40918014a20b80238b40918014a20b80237b4
0918014a20b80236b40918014a20b80235b40918014a20b80234b4091801
4a20b80233b40918014a20b80232b40918014a20b80231b40918014a20b8
0230b40918014a20b8022fb40918014a20b8022eb40918014a20b8022db4
0918014a20b8022cb40918014a20b8022bb40918014a20b8022ab4091801
4a20b80229b40918014a20b80228b40918014a20b80227b40918014a20b8
0226b40918014a20b80225b40918014a20b80224b40918014a20b80223b4
0918014a20b80222b40918014a20b80221b40918014a20b80220b4091801
4a20b8021fb40918014a20b8021eb40918014a20b8021db40918014a20b8
021cb40918014a20b8021bb40918014a20b8021ab40918014a20b80219b4
0918014a20b80218b40918014a20b80217b40918014a20b80216b4091801
4a20b80215b40918014a20b80214b40918014a20b80213b40918014a20b8
0212b40918014a20b80211b40918014a20b80210b40918014a20b8020fb4
0918014a20b8020eb40918014a20b8020db40918014a20b8020cb4091801
4a20b8020bb40918014a20b8020ab40918014a20b80209b40918014a20b8
0208b40918014a20b80207b40918014a20b80206b40918014a20b80205b4
0918014a20b80204b40918014a20b80203b40918014a20b80202b4091801
4a20b80201b40918014a20b80200b40918014a20b801ffb40918014a20b8
01feb40918014a20b801fdb40918014a20b801fcb40918014a20b801fbb4
0918014a20b801fab40918014a20b801f9b40918014a20b801f8b4091801
4a20b801f7b40918014a20b801f6b40918014a20b801f5b40918014a20b8
01f4b40918014a20b801f3b40918014a20b801f2b40918014a20b801f1b4
0918014a20b801f0b40918014a20b801efb40918014a20b801eeb4091801
4a20b801edb40918014a20b801ecb40918014a20b801ebb40918014a20b8
01eab40918014a20b801e9b40918014a20b801e8b40918014a20b801e7b4
0918014a20b801e6b40918014a20b801e5b40918014a20b801e4b4091801
4a20b801e3b40918014a20b801e2b40918014a20b801e1b40918014a20b8
01e0b40918014a20b801dfb40918014a20b801deb40918014a20b801ddb4
0918014a20b801dcb40918014a20b801dbb40918014a20b801dab4091801
4a20b801d9b40918014a20b801d8b40918014a20b801d7b40918014a20b8
01d6b40918014a20b801d5b40918014a20b801d4b40918014a20b801d3b4
0918014a20b801d2b40918014a20b801d1b40918014a20b801d0b4091801
4a20b801cfb40918014a20b801ceb40918014a20b801cdb40918014a20b8
01ccb40918014a20b801cbb40918014a20b801cab40918014a20b801c9b4
0918014a20b801c8b40918014a20b801c7b40918014a20b801c6b4091801
4a20b801c5b40918014a20b801c4b40918014a20b801c3b40918014a20b8
01c2b40918014a20b801c1b40918014a20b801c0b40918014a20b801bfb4
0918014a20b801beb40918014a20b801bdb40918014a20b801bcb4091801
4a20b801bbb40918014a20b801bab40918014a20b801b9b40918014a20b8
01b8b40918014a20b801b7b40918014a20b801b6b40918014a20b801b5b4
0918014a20b801b4b40918014a20b801b3b40918014a20b801b2b4091801
4a20b801b1b40918014a20b801b0b40918014a20b801afb40918014a20b8
01aeb40918014a20b801adb40918014a20b801acb40918014a20b801abb4
0918014a20b801aab40918014a20b801a9b40918014a20b801a8b4091801
4a20b801a7b40918014a20b801a6b40918014a20b801a5b40918014a20b8
01a4b40918014a20b801a3b40918014a20b801a2b40918014a20b801a1b4
0918014a20b801a0b40918014a20b8019fb40918014a20b8019eb4091801
4a20b8019db40918014a20b8019cb40918014a20b8019bb40918014a20b8
019ab40918014a20b80199b40918014a20b80198b40918014a20b80197b4
0918014a20b80196b40918014a20b80195b40918014a20b80194b4091801
4a20b80193b40918014a20b80192b40918014a20b80191b40918014a20b8
0190b40918014a20b8018fb40918014a20b8018eb40918014a20b8018db4
0918014a20b8018cb40918014a20b8018bb40918014a20b8018ab4091801
4a20b80189b40918014a20b80188b40918014a20b80187b40918014a20b8
0186b40918014a20b80185b40918014a20b80184b40918014a20b80183b4
0918014a20b80182b40918014a20b80181b40918014a20b80180b4091801
4a20b8017fb40918014a20b8017eb40918014a20b8017db40918014a20b8
017cb40918014a20b8017bb40918014a20b8017ab40918014a20b80179b4
0918014a20b80178b40918014a20b80177b40918014a20b80176b4091801
4a20b80175b40918014a20b80174b40918014a20b80173b40918014a20b8
0172b40918014a20b80171b40918014a20b80170b40918014a20b8016fb4
0918014a20b8016eb40918014a20b8016db40918014a20b8016cb4091801
4a20b8016bb40918014a20b8016ab40918014a20b80169b40918014a20b8
0168b40918014a20b80167b40918014a20b80166b40918014a20b80165b4
0918014a20b80164b40918014a20b80163b40918014a20b80162b4091801
4a20b80161b40918014a20b80160b40918014a20b8015fb40918014a20b8
015eb40918014a20b8015db40918014a20b8015cb40918014a20b8015bb4
0918014a20b8015ab40918014a20b80159b40918014a20b80158b4091801
4a20b80157b40918014a20b80156b40918014a20b80155b40918014a20b8
0154b40918014a20b80153b40918014a20b80152b40918014a20b80150b4
0918014a20b8014fb40918014a20b8014eb40918014a20b8014cb4091801
4a20b8014bb40918014a20b8014ab40918014a20b80149b40918014a20b8
0148b40918014a20b80147b40918014a20b80146b40918014a20b80145b4
0918014a20b80144b40918014a20b80143b30918014ab80284b21e3e1fb8
0283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b21e3e1fb8027f
b21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e1fb8027bb21e
3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb80277b21d431f
b80276b21d431fb80275b21d411fb80274b21d431fb80273b21d431fb802
72b21d411fb80271b21d421fb80270b21d421fb8026fb21d421fb8026eb2
1d431fb8026db21d431fb8026cb21d431fb8026bb21c451fb8026ab21c45
1fb80269b21c451fb80268b21c451fb80267b21c451fb80266b21c441fb8
0265b21c451fb80264b21c451fb80263b21c451fb80262b21c451fb80261
b21c451fb80260b21c451fb8025fb21c451fb8025eb21c441fb8025db21c
451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb80259b21c451f
b80258b21c451fb80257b21c451fb80256b21c451fb80255b21c451fb802
54b21c451fb80253b21c451fb80252b21c451fb80251b21c451fb80250b2
1c451fb8024fb21c451fb8024eb21c451fb8024db21c451fb8024cb21c45
1fb8024bb21c451fb8024ab21b491fb80249b21b491fb80248b21b4a1fb8
0247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b21b4c1fb80243
b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b491fb8023fb21b
4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8023bb21b4b1f
b8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237b21b4c1fb802
36b21b4c1fb80235b21b491fb80234b21b491fb80233b21b4a1fb80232b2
1b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1fb8022eb21b4c
1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb8022ab21b4c1fb8
0229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b21b491fb80225
b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b1fb80221b21b
4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8021db21b4c1f
b8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219b21a4e1fb802
18b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a4e1fb80214b2
1a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1fb80210b21a4e
1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb8020cb21a4e1fb8
020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b21a4f1fb80207
b21a4f1fb80206b219501fb80205b219511fb80204b219511fb80203b219
501fb80202b219511fb80201b219511fb80200b219511fb801ffb219511f
b801feb219501fb801fdb219511fb801fcb219511fb801fbb219511fb801
fab219501fb801f9b219511fb801f8b219511fb801f7b219511fb801f6b2
19511fb801f5b218541fb801f4b218531fb801f3b218541fb801f2b21854
1fb801f1b218541fb801f0b218531fb801efb218541fb801eeb218541fb8
01edb218541fb801ecb218531fb801ebb218531fb801eab218541fb801e9
b218541fb801e8b218541fb801e7b218541fb801e6b218531fb801e5b218
541fb801e4b218531fb801e3b218541fb801e2b218541fb801e1b218541f
b801e0b218531fb801dfb218531fb801deb218541fb801ddb218541fb801
dcb218541fb801dbb218541fb801dab218531fb801d9b218541fb801d8b2
18541fb801d7b217571fb801d6b217561fb801d5b217561fb801d4b21757
1fb801d3b217571fb801d2b217571fb801d1b217571fb801d0b217561fb8
01cfb217561fb801ceb217571fb801cdb217571fb801ccb217571fb801cb
b217571fb801cab217561fb801c9b217561fb801c8b217571fb801c7b217
571fb801c6b217571fb801c5b217571fb801c4b217571fb801c3b217561f
b801c2b217571fb801c1b217571fb801c0b217571fb801bfb217561fb801
beb217561fb801bdb217571fb801bcb217571fb801bbb217571fb801bab2
17571fb801b9b217571fb801b8b217561fb801b7b217571fb801b6b21757
1fb801b5b217571fb801b4b217571fb801b3b2163f1fb801b2b2165b1fb8
01b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2165b1fb801ad
b2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e1fb801a9b216
3f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb801a5b2165b1f
b801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1b2165b1fb801
a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db2163f1fb8019cb2
165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1fb80198b2163e
1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb80194b2163e1fb8
0193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2165b1fb8018f
b2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f1fb8018bb216
5b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb80187b2165b1f
b80186b215611fb80185b215621fb80184b215621fb80183b215661fb801
82b215661fb80181b215551fb80180b215451fb8017fb215361fb8017eb2
15361fb8017db215611fb8017cb215621fb8017bb215621fb8017ab21564
1fb80179b215661fb80178b215661fb80177b215661fb80176b215661fb8
0175b215661fb80174b215661fb80173b215451fb80172b215621fb80171
b215621fb80170b215631fb8016fb215641fb8016eb215661fb8016db215
661fb8016cb215661fb8016bb215661fb8016ab215661fb80169b215621f
b80168b215621fb80167b215611fb80166b215641fb80165b215641fb801
64b215661fb80163b215661fb80162b215661fb80161b215661fb80160b2
15661fb8015fb215661fb8015eb215551fb8015db215451fb8015cb21545
1fb8015bb215361fb8015ab215611fb80159b215621fb80158b215621fb8
0157b215631fb80156b215641fb80155b215661fb80154b215661fb80153
b215661fb80152b215661fb80151b214401fb80150b214551fb8014fb214
561fb8014eb214831fb8014db2142d1fb8014cb214401fb8014bb214401f
b8014ab214411fb80149b214401fb80148b214401fb80147b214411fb801
46b2147e1fb80145b214871fb80144b2147f1fb80143b214801fb80142b2
12461fb80141b212461fb80140b212461fb8013fb212461fb8013eb21244
1fb8013db212461fb8013cb211591fb8013bb211591fb8013ab2115b1fb8
0139b2115b1fb80138b211471fb80137b211581fb80136b2115a1fb80135
b2115b1fb80134b2115b1fb80133b2112c1fb80132b211471fb80131b211
551fb80130b211571fb8012fb211571fb8012eb211581fb8012db211591f
b8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129b2115b1fb801
28b2115b1fb80127b2115b1fb80126b2115b1fb80125b211561fb80124b2
11561fb80123b211571fb80122b211581fb80121b211591fb80120b2115a
1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb8011cb2115b1fb8
011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2105e1fb80117
b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f1fb80113b210
5f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8010fb2105f1f
b8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010bb2105e1fb801
0ab2105f1fb80109b2105f1fb80108b2105f1fb80107b2105f1fb80106b2
105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1fb80102b2105f
1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631ffd0f641ffc0f
621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f641ff50f641f
f40f621ff30f621ff20f631ff10f641ff00f641fef0f641fee0f641fed0f
621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f641fe60e671f
e50e681fe40e681fe30e681fe20e681fe10e671fe00e681fdf0e681fde0e
681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d6b1fd70d311f
d60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1fd00d2b1fcf0d
2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d6d1fc80d6a1f
c70d691fc60d681fc50d671fc40d261fc30d311fc20d311fc10d311f40ff
c00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731fba0c741fb90c
741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c741fb20c741f
b10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1fab0b7e1faa0b
7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b7e1fa30b7e1f
a20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f9c0b791f9b0b
7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b7e1f940b7e1f
930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f8d0aa51f8c0a
a71f8503251f8403381f8301381f8255805581ab80557f557d557eab7d55
0b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557bab7a55795577
5578ab7755ba028600660285403c5576ab755504751475747503f47501ab
750144750130750102007510752075030c7455725573ab72550072507280
72b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d10
4671556f5570ab6f556e666d556a03251f6938675568ab67556638645565
ab645563386255613860555f385d555eab5d555c385a555bab5a55593858
555703251f5638545555ab54555338515552ab51554f384e554e03251f4d
384b554cab4b554a38485549ab4855473846554503381f001c101c201c03
10b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03
120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c
460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d
5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0401f162326460f1501
0f151f150245ef1501860003012001010001100120010308b8ffc0b40115
1f4603bd0100010000050001019000542b4bb80800524bb008505bb00188
b02553b00188b040515ab00688b000555a5b58b101018e59b101024354b0
144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d42594bb0
805358b20340401d42594bb0ff5358b20300001d42592b5e7375732b5840
3d0011e011f0110315bf10cf10020f0f010f0fff0f02400f3135460f0e1f
0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f0dff0d0316400d31
3746b8ffc040270c5054460f0b1f0b02553f0b4f0b02400b3f4346400b2d
30460003012001010001100120010308b8ffc0b301151f462b5e7375732b
2b745e732b2b5e73742b73742b7374745e735901755e73742b2b2b2b5e73
2b5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f
73737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff0284006402
830064028200640281006402800064027f0064027e0064027d0064027c00
64027b0064027a0064027900640278006402770064027600640275006402
740064027300640271006402700064026f0064026e0064026d0064026c00
64026b0064026a0064026900640268006402670064026600640265006402
64006402630064026200640261006402600064025f0064025e0064025d00
64025c0064025b0064025a00640259006402580064025700640256006402
5500640254006402530064025200640251006402500064024f0064024e00
64024d0064024c0064024b0064024a006402490064024800640247006402
460064024500640244006402430064024200640241006402400064023f00
64023e0064023d0064023c0064023b0064023a0064023900640238006402
370064023600640235006402340064023300640232006402310064023000
64022f0064022e0064022d0064022c0064022b0064022a00640229006402
280064022700640226006402250064022400640223006402220064022100
6402200064021f0064021e0064021d0064021c0064021b0064021a006402
190064021800640217006402160064021500640214006402130064021200
640211006402100064020f0064020e0064020d0064020c0064020b006402
0a00640209006402080064020700640206006402050064020441ff006402
03006402020064020100640200006401ff006401fe006401fd006401fc00
6401fb006401fa006401f9006401f8006401f7006401f6006401f5006401
f4006401f3006401f2006401f1006401f0006401ef006401ee006401ed00
6401ec006401eb006401ea006401e9006401e8006401e7006401e6006401
e5006401e4006401e3006401e2006401e1006401e0006401df006401de00
6401dd006401dc006401db006401da006401d9006401d8006401d7006401
d6006401d5006401d4006401d3006401d2006401d1006401d0006401cf00
6401ce006401cd006401cc006401cb006401ca006401c9006401c8006401
c7006401c6006401c5006401c4006401c3006401c2006401c1006401c000
6401bf006401be006401bd006401bc006401bb006401ba006401b9006401
b8006401b7006401b6006401b5006401b4006401b3006401b2006401b100
6401b0006401af006401ae006401ad006401ac006401ab006401aa006401
a9006401a8006401a7006401a6006401a5006401a4006401a3006401a200
6401a1006401a00064019f0064019e0064019d0064019c0064019b006401
9a0064019900640198006401970064019600640195006401940064019300
64019200640191006401900064018f0064018e0064018d0064018c006401
8b0064018a00640189006401880064018700640186006401850064418001
84006401830064018200640181006401800064017f0064017e0064017d00
64017c0064017b0064017a00640179006401780064017700640176006401
7500640174006401730064017200640171006401700064016f0064016e00
64016d0064016c0064016b0064016a006401690064016800640167006401
660064016500640164006401630064016200640161006401600064015f00
64015e0064015d0064015c0064015b0064015a0064015900640158006401
570064015600640155006401540064015300640152006401500064014f00
64014e0064014c0064014b0064014a006401490064014800640147006401
4600640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b007373737373
73742b2b2b2b2b2b2b2b2b2b185f5e0000>
[13753 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> MAAAAA+Calibri AddT42Char 
1 5252 17 <0001005affed032003c9003500c8b0852b58b11c00b8ffc0b310014d00b8
ffe0b30d014d00b8ffe8b40b014d0027b8ffe8b310014d27b8fff0b30f01
4d27b8ffeeb30c014d27b8ffe8b30b014d27b8ffeab30d014d27b8020b40
0d2f0e010e19e71f400a0d481f24b80102b4134a03eb31b8ffc0b4090d48
312cb80106b1094d003ffdd42bed3ffdd42bed012f5de12b2b2b2b2bc42b
2b2b3231301b400c1f19e76c1f400a0d481f1324b80102b76c134a3103eb
6c31b8ffc0b5090d4831092cb80106b26c094d00183f2bc42b2b3f2bc42b
2b30315925140e0623222e0235343e0233321e0615140623222e02232206
15141e0233323e0233321e020320020507193c4b582f6196653541719959
2b51443518090602120d0f273c553a777f21405d3c39563f2b0c070a0703
a21119110d19251d12407bb37585bf7a3b101a22180e131812271f212821
b7ae5783582b242b2308131d>MAAAAA+Calibri AddT42Char 
1 9052 28 <0002005affed03de03ca0013002700c9b0852b58401c3f29012812012911
01260d01260c012608012607012a03012902011eb8ffe8b310014d1eb8ff
f0b30f014d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1e
b8020a401e2f0a010a141810014d14100f014d14200d014d14120c014d14
180b014d14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b801
02b1054d003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d
5d5d5d5d5d5d5d5d1bb10f19b80101b46c0f4a0523b80102b26c054d0018
3f2b3f2b30315901140e0223222e0235343e0233321e0207342e0223220e
0215141e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e
6a4f496944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427e
b47c49826239345f824d4a826139345e8200>MAAAAA+Calibri AddT42Char 
1 5944 19 <0002005dffed039903ca002b003400eab0852b58402a2f363f366f360313
200d014d13200f014d1313212c100c014d2c180b014d2c100d014d2c100f
10014c2cb801f9b5442ba42b022bb8fff0b50f014d2b3404b8ffe0b30d01
4d04b8ffeeb30c014d04b8ffe0b30b014d04b8ffe8b40f10014c04b8020a
4021212cc78004900402c00401d0040104041c2fdc264a18ea600e700e02
0e09ea1c4d003ffdd45ded3fed12392f5d7172ed012fe12b2b2b2b32dd2b
5de12b2b2b2b12392f2b2b31305d1b4022042cc76c76040104041c262fdc
6c264a0e18ea6c000e100e020f030e1c09ea6c1c4d00183f2bc45f5e5d2b
3f2b12392f5d2b3031590114062321141e0233323e0233321e0215140e06
23222e0235343e0233321e021527362623220e020703992719fdb21e4670
514064492f0c070b06030203070b365671406fa7723a3c71a0636a95602d
a60379773d5c3e2202020227214b78562e151a15070e19120d130f0c0b19
18133e7ab87a74b9814544739b581382942e4c653700>MAAAAA+Calibri AddT42Char 
1 9370 29 <00020099fe9403d503ca002a003d00b1b0852b58b53f3f0121360ab8fff0
b30d014d0ab8fff6b30c014d0ab8fff0b40f10014c0ab8ffe8b30b014d0a
b801f84017152b200d014d2b120c014d2b180f10014c2b180b014d2bb802
0a400900150a363521040530b80105b6264a1b49104f39b80105b1054d00
3fed3f3f3fed121739012fd4e12b2b2b2b10e12b2b2b2b323931305d1bb7
0a36352104052630b8010540096c264a1b49104f0539b80105b26c054d00
183f2b3f3f3f2b12173930315901140e0223222e022711140e0223222e02
3511343e0233321e0215153e0333321e0207342e0223220e020711161633
323e0203d53363925e2844414024081220191820130706121c14151b1207
294c4d512d628a5728ae15335640203e404627447a433e59371a01e976bc
834710223423fe3e080c080404080c0804e9090b080303080b09792a3e29
154c84af754581643c13294331fe9a53583c647c>MAAAAA+Calibri AddT42Char 
1 5594 18 <00020060ffed039c056d0026003900bcb0852b58401f3f3b010b1b39100d
014d390a0c014d391010014d39100f014d39180b014d39bb01f90000002f
ffe0b30d014d2fb8ffe8b310014d2fb8fff0b30f014d2fb8fff0b30c014d
2fb8ffe8b30b014d2fb8020a400a1321460b39271b040e2ab80105b2184a
34b80104b30e4d054c003f3fed3fed1217393f012fe12b2b2b2b2bd4e12b
2b2b2b2b323931305d1b400a21460b39271b040e182ab80105b46c184a0e
34b80104b46c0e4d054c00183f3f2b3f2b1217393f30315925140e022322
2e023535060623222e0235343e023332161711343e0233321e0215032626
23220e0215141e0233323e0237039c07111c14151c120847995b638c5728
3262915f4f834007141f1819201209a6437d443f58371915345641213d40
462719080c070404070c08774d564d83b16274bb84474543020b070d0705
05070d07fd4553573c627c404482653d122a4331>MAAAAA+Calibri AddT42Char 
1 8074 25 <00010099fffa013e057100150051b0852b58b73f174f176f170300b8fff0
b30d014d00b8fff6b30c014d00b8ffe8b30b014d00b8fff0b40f10014c00
b801f8b40a1046054c003f3f012fe12b2b2b2b31305d1bb31046054c0018
3f3f30315925140e0223222e023511343e0233321e0215013e0812201918
201307071320181920120819080b080404080b080538080c080404080c08
>MAAAAA+Calibri AddT42Char 
1 7468 23 <00020085fffa0151052f0015002100a7b0852b58b73f234f236f230316b8
ffe8b30d014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d
16b8fff0b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d
15b8fff6b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b6
0a1f400f014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4
e12b2b2b2b2b2b31305d1bb1191fb8013eb56c191049054c00183f3fc62b
30315925140e0223222e023511343e0233321e0215131406232226353436
333216013e08122019182013070713201819201208132c3b3a2b2c3b3a2b
19080b080404080b080384070c080404080c0701303a2a29393a2a29>MAAAAA+Calibri AddT42Char 
1 3686 12 <0001000ffffa03d7050e00220080b0852b58b718400d014d181100b8ffc0
b40d014d0006b8ffe8b310014d06b8fff0b30f014d06b8fff0b30d014d06
b8fff6b30c014d06b8ffe8b30b014d06ba02110011ffc0b50d014d110612
b80128b31d510c55003f3fed32012f2bf12b2b2b2b2bc52b10c42b31301b
b2061d12b80128b46c1d510c5500183f3f2b3230315901140e0223211114
0e0223222e02351121222e0235343e023321321e0203d704090d08fe9408
14211918221408fe94080d080505080d080384080d090404c4131c1108fb
9e080c070505070c08046208111c13131d120808121d>MAAAAA+Calibri AddT42Char 
1 2146 8 <000100acfffa062b050e003c00d6b0852b584010603e703e020d3030172f
2f0a2e18181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1a
b8fff6b30c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d
0a100f014d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc04019
0b014d002436510b18170d2f18312e061f28511f5512550555003f3f3f3f
12173911333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311
393d2f3333113331305d1b401436510b18170d2f18312e061f28511f5512
55055500183f3f3f3f12173911333f30315925140e0223222e0235112301
0e0323222e0227012311140e0223222e02351134363333321e0217013301
3e033333321e0215062b08141f191721130802fe33030b151d14151e140b
02fe470108142019182013072c1b68203024180901770501860b1a1f2619
6d0f1b130c1a080c070505070c080467fb94070a070304070a06046cfb99
080c070505070c0804a62a240c1a281bfc5703a61e2a190b09131d15>MAAAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e0097b0852b58bc000d01
520016003a01b5b5154444082d07be014300020020015400080001014340
0f04020db71a1a3f23b735068d031149b8012db43f078d0202003ffddefd
ce2ffddeed12392fed012fdde1dee110f1ce11392f33e1d4e131301b4014
1a0db76c1a1a3f3523b76c3503068d6c03113f49b8012d40096c3f400207
8d6c020200183f2b1ace2bce2f2bce2b12392f2b30315901112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>MAAAAA+Calibri AddT42Char 
MAAAAA+Calibri /CharStrings get begin
/g1 1 def
/g17 17 def
/g28 28 def
/g19 19 def
/g29 29 def
/g18 18 def
/g25 25 def
/g23 23 def
/g12 12 def
/g8 8 def
end
MAAAAA+Calibri /Encoding get
dup 35 /g1 put
dup 36 /g17 put
dup 37 /g28 put
dup 42 /g19 put
dup 44 /g29 put
dup 45 /g18 put
dup 48 /g25 put
dup 49 /g23 put
dup 55 /g12 put
dup 74 /g8 put
pop
end
%ADOEndSubsetFont
/YQMNWF+Calibri /MAAAAA+Calibri findfont ct_VMDictPut/YQMNWF+Calibri*1 [35{/.notdef}rp /g1 /g17 /g28 4{/.notdef}rp /g19 /.notdef /g29 /g18 2{/.notdef}rp /g25 /g23 5{/.notdef}rp /g12 18{/.notdef}rp /g8 181{/.notdef}rp]YQMNWF+Calibri nfYQMNWF+Calibri*1 [6 0 0 -6 0 0 ]msf666.219 164.494 mo(7%,1$#J%-*0)[2.87518 3.12714 3.1272 1.37518 2.50323 1.37518 5.12518 3.12714 3.1272 3.00116 0 ]xsh658.351 158.125 mo
661.186 160.959 li
658.351 163.794 li
658.351 162.376 li
646.119 162.376 li
646.119 159.542 li
658.351 159.542 li
cp
0 0 0 0 cmyk
f
658.351 158.125 mo
661.186 160.959 li
658.351 163.794 li
658.351 162.376 li
646.119 162.376 li
646.119 159.542 li
658.351 159.542 li
cp
.75021 .679683 .670222 .90164 cmyk
@
%ADOBeginSubsetFont: YAAAAA+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal YQMNWA+Calibri gcheck setglobal} if
1 13960 45 <00010045005d03970426001d0021b0852b58b3170f1905002fcdd4cd3130
1bb4170f19400500182f1acdd4cd30315925140606262701262635343e02
3701361615140e020701011e030397040a0f0bfcec0a0c03070906031117
1103070d0cfd7c02800d0f0803a2191f0d0206018e052624101c120d0201
8c0b182f1d22150b06fec5feca070b152300>YQMNWA+Calibri AddT42Char 
1 12954 41 <0001018afe930225059a00150019b0852b58b210054f003f2f31301bb210
054f00183f2f30315901140e0223222e023511343e0233321e0215022507
121e17161e120707121e16171e1207feb3080c080404080c0806c8070c08
0404080c0700>YQMNWA+Calibri AddT42Char 
1 14098 46 <00010065005e03b80421001f0021b0852b58b3121c1006002fcdd4cd3130
1bb4121c10400600182f1acdd4cd30315901140e0207010606262635343e
023701012e0335343636161701161603b804060a06fcef0b10090402070e
0b0285fd7f0d0f08020409100b03140a0d023e111b140b03fe7405010e1d
171c22150c05013d0135060b16231d1a1d0d0206fe730527>YQMNWA+Calibri AddT42Char 
YQMNWA+Calibri /CharStrings get begin
/g45 45 def
/g41 41 def
/g46 46 def
end
YQMNWA+Calibri /Encoding get
dup 76 /g45 put
dup 77 /g41 put
dup 78 /g46 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YQMNWA+Calibri*1 [33{/.notdef}rp /g12 /g17 /g19 /g27 /g15 /g30 /g23 /g28 /g31 /g3 /g20 /g21 /g33 /g32 /g37 /g1 /g2 /g25 /.notdef /g8 /g13 /g29 /.notdef /g22 /g7 /g10 /g42 /g44 /g18 2{/.notdef}rp /g14 /.notdef /g26 /g38 /g39 /g36 /g43 /g16 /g4 /g34 /g35 /g24 /g45 /g41 /g46 177{/.notdef}rp]YQMNWA+Calibri nfYQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf21.2849 145.774 mo(LM)[4.00001 0 ]xsh28.9099 145.774 mo(\).%&.\(+.#E.)[3.12485 2.62086 3.87683 2.74879 2.62085 4.25274 2.50074 2.62085 3.99681 3.50079 0 ]xsh63.4099 145.774 mo(MN04+0"\($.%".00D0LM)[3.62485 4.00081 1.75278 2.00079 2.49673 1.75278 3.37684 4.24874 4.24875 2.62485 3.87283 3.37683 2.62486 1.75278 1.75278 5.49682 1.75278 4.00081 0 ]xsh121.785 145.774 mo(#$=\(+.#E.)[4.00001 4.24795 4.24794 4.24794 2.50395 2.62405 4 3.504 0 ]xsh153.785 145.774 mo(MN)[3.62485 0 ]xsh21.053 160.174 mo(LM)[4.00001 0 ]xsh28.678 160.174 mo(\).%&.\(+.#E.)[3.12485 2.62086 3.87683 2.74879 2.62085 4.25274 2.50074 2.62085 3.99681 3.50079 0 ]xsh63.178 160.174 mo(MN04+0=\(\(&\)0D0LM)[3.62485 4.00081 1.75278 2.00079 2.49673 1.75278 4.24875 4.24874 4.24874 2.75279 3.12885 1.75278 5.49682 1.75278 4.00081 0 ]xsh114.053 160.174 mo(#$=\(+.#E.)[4.00001 4.24795 4.24795 4.24793 2.50395 2.62405 4 3.504 0 ]xsh146.053 160.174 mo(MN)[3.62485 0 ]xsh20.4656 174.574 mo(LM)[4.00001 0 ]xsh28.0906 174.574 mo(\).%&.\(+.#E.)[3.12485 2.62086 3.87683 2.74879 2.62085 4.25274 2.50074 2.62085 3.99681 3.50079 0 ]xsh62.5906 174.574 mo(MN0108#%.#&0'\)0D0LM)[3.62485 4.00081 1.75278 4.62476 1.75278 4.24875 4.00081 3.87283 2.62485 4.00081 2.75279 1.75278 1.87283 3.12885 1.75278 5.49683 1.75278 4.00081 0 ]xsh123.216 174.574 mo(#$=\(+.#E.)[4.00001 4.24795 4.24794 4.24794 2.50395 2.62405 4 3.504 0 ]xsh155.216 174.574 mo(MN)[3.62485 0 ]xsh21.3145 184.654 mo(DD)[5.50002 0 ]xsh672.253 118.678 mo
671.887 103.789 li
672.637 103.77 li
673.003 118.66 li
cp
670.287 104.828 mo
672.139 98.7808 li
674.286 104.73 li
cp
f
248.2 169.402 mo
251.085 166.516 li
253.97 169.402 li
252.528 169.402 li
252.528 175.419 li
249.643 175.419 li
249.643 169.402 li
cp
0 0 0 0 cmyk
f
248.2 169.402 mo
251.085 166.516 li
253.97 169.402 li
252.528 169.402 li
252.528 175.419 li
249.643 175.419 li
249.643 169.402 li
cp
.75021 .679683 .670222 .90164 cmyk
@
248.2 150.011 mo
251.085 147.126 li
253.97 150.011 li
252.528 150.011 li
252.528 156.029 li
249.643 156.029 li
249.643 150.011 li
cp
0 0 0 0 cmyk
f
248.2 150.011 mo
251.085 147.126 li
253.97 150.011 li
252.528 150.011 li
252.528 156.029 li
249.643 156.029 li
249.643 150.011 li
cp
.75021 .679683 .670222 .90164 cmyk
@
304.179 152.842 mo
305.381 156.666 li
301.557 157.868 li
302.212 156.612 li
279.05 144.53 li
280.361 142.017 li
303.523 154.099 li
cp
0 0 0 0 cmyk
f
304.179 152.842 mo
305.381 156.666 li
301.557 157.868 li
302.212 156.612 li
279.05 144.53 li
280.361 142.017 li
303.523 154.099 li
cp
.75021 .679683 .670222 .90164 cmyk
3175 lw
gsave
[-3.64165e-05 6.9813e-05 -6.9813e-05 -3.64165e-05 306.692 154.153 ]ct
@
grestore newpath
284.15 163.701 mo
281.315 160.867 li
284.15 158.032 li
284.15 159.449 li
303.992 159.449 li
303.992 162.284 li
284.15 162.284 li
cp
0 0 0 0 cmyk
f
.25 lw
284.15 163.701 mo
281.315 160.867 li
284.15 158.032 li
284.15 159.449 li
303.992 159.449 li
303.992 162.284 li
284.15 162.284 li
cp
.75021 .679683 .670222 .90164 cmyk
@
713.344 158.125 mo
716.178 160.959 li
713.344 163.794 li
713.344 162.376 li
701.112 162.376 li
701.112 159.542 li
713.344 159.542 li
cp
0 0 0 0 cmyk
f
713.344 158.125 mo
716.178 160.959 li
713.344 163.794 li
713.344 162.376 li
701.112 162.376 li
701.112 159.542 li
713.344 159.542 li
cp
.75021 .679683 .670222 .90164 cmyk
@
YQMNWA+Calibri*1 [8 0 0 -8 0 0 ]msf414.496 52.6544 mo(LM)[4 0 ]xsh422.121 52.6544 mo(\).%&.\(+.#E.)[3.12485 2.62085 3.87683 2.74878 2.62085 4.25275 2.50073 2.62088 3.9968 3.50079 0 ]xsh456.621 52.6544 mo(MN0)[3.62485 4.00079 0 ]xsh465.996 52.6544 mo(@\)#&)[5.12476 3.12488 3.9968 0 ]xsh482.746 52.6544 mo("\(B#\))[3.37521 4.24713 6.37518 3.99921 0 ]xsh505.621 52.6544 mo(8\(B#)[4.24954 4.24954 6.37756 0 ]xsh414.264 67.0544 mo(LM)[4 0 ]xsh421.889 67.0544 mo(\).%&.\(+.#E.)[3.12485 2.62085 3.87683 2.74878 2.62085 4.25275 2.50073 2.62088 3.9968 3.50079 0 ]xsh456.389 67.0544 mo(MN0)[3.62485 4.00079 0 ]xsh465.764 67.0544 mo(4.)[1.99997 0 ]xsh472.139 67.0544 mo('\))[1.87521 0 ]xsh413.676 81.6944 mo(LM)[4 0 ]xsh421.301 81.6944 mo(\).%&.\(+.#E.)[3.12485 2.62085 3.87683 2.74878 2.62085 4.25275 2.50073 2.62088 3.9968 3.50079 0 ]xsh455.801 81.6944 mo(MN)[3.62485 0 ]xsh414.525 91.7744 mo(DD)[5.5 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/YQMNWA+Calibri*1 uf/YQMNWA+Calibri uf/YAAAAA+Calibri uf/YQMNVZ+Calibri-Bold*1 uf/YQMNVZ+Calibri-Bold uf/VBAAAA+Calibri-Bold uf/YQMNWE+Calibri*1 uf/YQMNWE+Calibri uf/WAAAAA+Calibri uf/YQMNWF+Calibri*1 uf/YQMNWF+Calibri uf/MAAAAA+Calibri uf/YQMNWB+Calibri-Bold*1 uf/YQMNWB+Calibri-Bold uf/XBAAAA+Calibri-Bold uf/YQMNWC+Calibri*1 uf/YQMNWC+Calibri uf/OAAAAA+Calibri uf/YQMNWD+Calibri-Bold*1 uf/YQMNWD+Calibri-Bold uf/ZBAAAA+Calibri-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
